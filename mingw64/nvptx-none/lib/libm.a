!<arch>
//                                              2306      `
lib_a-cephes_subr.o/
lib_a-cephes_subrf.o/
lib_a-cephes_subrl.o/
lib_a-copysignl.o/
lib_a-e_rem_pio2.o/
lib_a-e_remainder.o/
lib_a-e_tgamma.o/
lib_a-ef_acosh.o/
lib_a-ef_atan2.o/
lib_a-ef_atanh.o/
lib_a-ef_hypot.o/
lib_a-ef_log10.o/
lib_a-ef_rem_pio2.o/
lib_a-ef_remainder.o/
lib_a-ef_scalb.o/
lib_a-ef_tgamma.o/
lib_a-el_hypot.o/
lib_a-er_lgamma.o/
lib_a-erf_lgamma.o/
lib_a-exp_data.o/
lib_a-fe_dfl_env.o/
lib_a-feclearexcept.o/
lib_a-fegetenv.o/
lib_a-fegetexceptflag.o/
lib_a-fegetround.o/
lib_a-feholdexcept.o/
lib_a-feraiseexcept.o/
lib_a-fesetenv.o/
lib_a-fesetexceptflag.o/
lib_a-fesetround.o/
lib_a-fetestexcept.o/
lib_a-feupdateenv.o/
lib_a-k_rem_pio2.o/
lib_a-k_standard.o/
lib_a-kf_rem_pio2.o/
lib_a-llroundl.o/
lib_a-log2_data.o/
lib_a-log_data.o/
lib_a-math_err.o/
lib_a-math_errf.o/
lib_a-nearbyintl.o/
lib_a-nextafterl.o/
lib_a-nexttoward.o/
lib_a-nexttowardf.o/
lib_a-nexttowardl.o/
lib_a-pow_log_data.o/
lib_a-remainderl.o/
lib_a-s_copysign.o/
lib_a-s_finite.o/
lib_a-s_fpclassify.o/
lib_a-s_infinity.o/
lib_a-s_isinfd.o/
lib_a-s_isnand.o/
lib_a-s_llrint.o/
lib_a-s_llround.o/
lib_a-s_lround.o/
lib_a-s_nearbyint.o/
lib_a-s_nextafter.o/
lib_a-s_remquo.o/
lib_a-s_scalbln.o/
lib_a-s_scalbn.o/
lib_a-s_signbit.o/
lib_a-s_signif.o/
lib_a-scalblnl.o/
lib_a-sf_asinh.o/
lib_a-sf_copysign.o/
lib_a-sf_exp10.o/
lib_a-sf_exp2_data.o/
lib_a-sf_expm1.o/
lib_a-sf_finite.o/
lib_a-sf_floor.o/
lib_a-sf_fpclassify.o/
lib_a-sf_frexp.o/
lib_a-sf_ilogb.o/
lib_a-sf_infinity.o/
lib_a-sf_isinf.o/
lib_a-sf_isinff.o/
lib_a-sf_isnan.o/
lib_a-sf_isnanf.o/
lib_a-sf_ldexp.o/
lib_a-sf_llrint.o/
lib_a-sf_llround.o/
lib_a-sf_log1p.o/
lib_a-sf_log2_data.o/
lib_a-sf_log_data.o/
lib_a-sf_lrint.o/
lib_a-sf_lround.o/
lib_a-sf_nearbyint.o/
lib_a-sf_nextafter.o/
lib_a-sf_pow10.o/
lib_a-sf_pow_log2_data.o/
lib_a-sf_remquo.o/
lib_a-sf_round.o/
lib_a-sf_scalbln.o/
lib_a-sf_scalbn.o/
lib_a-sf_signif.o/
lib_a-sf_trunc.o/
lib_a-sincosf_data.o/
lib_a-sl_finite.o/
lib_a-w_lgamma.o/
lib_a-w_remainder.o/
lib_a-w_sincos.o/
lib_a-w_tgamma.o/
lib_a-wf_acosh.o/
lib_a-wf_atan2.o/
lib_a-wf_atanh.o/
lib_a-wf_gamma.o/
lib_a-wf_hypot.o/
lib_a-wf_lgamma.o/
lib_a-wf_log10.o/
lib_a-wf_remainder.o/
lib_a-wf_scalb.o/
lib_a-wf_sincos.o/
lib_a-wf_tgamma.o/
lib_a-wr_gamma.o/
lib_a-wr_lgamma.o/
lib_a-wrf_gamma.o/
lib_a-wrf_lgamma.o/
lib_a-acoshl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: acoshl
.visible .func (.param .f64 %value_out) acoshl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/acoshl.c"
// BEGIN GLOBAL FUNCTION DECL: acosh
.extern .func (.param .f64 %value_out) acosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: acoshl
.visible .func (.param .f64 %value_out) acoshl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),acosh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-acosl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: acosl
.visible .func (.param .f64 %value_out) acosl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/acosl.c"
// BEGIN GLOBAL FUNCTION DECL: acos
.extern .func (.param .f64 %value_out) acos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: acosl
.visible .func (.param .f64 %value_out) acosl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),acos,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-asinhl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: asinhl
.visible .func (.param .f64 %value_out) asinhl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/asinhl.c"
// BEGIN GLOBAL FUNCTION DECL: asinh
.extern .func (.param .f64 %value_out) asinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: asinhl
.visible .func (.param .f64 %value_out) asinhl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),asinh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-asinl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: asinl
.visible .func (.param .f64 %value_out) asinl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/asinl.c"
// BEGIN GLOBAL FUNCTION DECL: asin
.extern .func (.param .f64 %value_out) asin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: asinl
.visible .func (.param .f64 %value_out) asinl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),asin,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-atan2l.o/ 1612277260  0     0     100666  1046      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atan2l
.visible .func (.param .f64 %value_out) atan2l (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/atan2l.c"
// BEGIN GLOBAL FUNCTION DECL: atan2
.extern .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: atan2l
.visible .func (.param .f64 %value_out) atan2l (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-atanhl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atanhl
.visible .func (.param .f64 %value_out) atanhl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/atanhl.c"
// BEGIN GLOBAL FUNCTION DECL: atanh
.extern .func (.param .f64 %value_out) atanh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: atanhl
.visible .func (.param .f64 %value_out) atanhl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),atanh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-atanl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atanl
.visible .func (.param .f64 %value_out) atanl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/atanl.c"
// BEGIN GLOBAL FUNCTION DECL: atan
.extern .func (.param .f64 %value_out) atan (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: atanl
.visible .func (.param .f64 %value_out) atanl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),atan,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-cabs.o/   1612277260  0     0     100666  1768      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cabs
.visible .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cabs.c"
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: hypot
.extern .func (.param .f64 %value_out) hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cabs
.visible .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r32;
.reg .f64 %r35;
mov.f64 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 58 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r26;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r29,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r26;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r32,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
call (%value_in),hypot,(%out_arg1,%out_arg2);
ld.param.f64 %r35,[%value_in];
}
.loc 1 59 1
mov.f64 %value,%r35;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-cabsf.o/  1612277260  0     0     100666  1782      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cabsf
.visible .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cabsf.c"
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: hypotf
.extern .func (.param .f32 %value_out) hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cabsf
.visible .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r29;
.reg .f32 %r32;
.reg .f32 %r35;
mov.f32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 18 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r26;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r29,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r26;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r32,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r29;
call (%value_in),hypotf,(%out_arg1,%out_arg2);
ld.param.f32 %r35,[%value_in];
}
.loc 1 19 1
mov.f32 %value,%r35;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-cabsl.o/  1612277260  0     0     100666  1039      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cabsl
.visible .func (.param .f64 %value_out) cabsl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cabsl.c"
// BEGIN GLOBAL FUNCTION DECL: cabs
.extern .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cabsl
.visible .func (.param .f64 %value_out) cabsl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 14 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),cabs,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 18 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-cacos.o/  1612277260  0     0     100666  2312      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacos
.visible .func cacos (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacos.c"
// BEGIN GLOBAL FUNCTION DECL: casin
.extern .func casin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cacos
.visible .func cacos (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r28;
.reg .u64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r38;
.reg .f64 %r41;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
mov.u64 %r30,%ar0;
mov.f64 %r31,%ar1;
mov.f64 %r32,%ar2;
.loc 1 94 9
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r31;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r32;
call casin,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r24,[%frame];
ld.f64 %r25,[%frame+8];
.loc 1 95 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
.loc 1 96 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r41,[%value_in];
}
.loc 1 95 16
mov.f64 %r44,0d3ff921fb54442d18;
sub.f64 %r43,%r44,%r38;
.loc 1 96 4
fma.rn.f64 %r28,%r41,0d8000000000000000,%r43;
.loc 1 98 9
st.f64 [%r30],%r28;
.loc 1 96 4
mov.f64 %r46,0d0000000000000000;
sub.f64 %r45,%r46,%r41;
.loc 1 98 9
st.f64 [%r30+8],%r45;
.loc 1 99 1
ret;
}
lib_a-cacosf.o/ 1612277260  0     0     100666  2242      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacosf
.visible .func cacosf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacosf.c"
// BEGIN GLOBAL FUNCTION DECL: casinf
.extern .func casinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cacosf
.visible .func cacosf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[8];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r24;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .u64 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r38;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
mov.u64 %r30,%ar0;
mov.f32 %r31,%ar1;
mov.f32 %r32,%ar2;
.loc 1 43 6
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r31;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r32;
call casinf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r26,[%frame];
ld.f32 %r27,[%frame+4];
.loc 1 44 36
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r27;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r38,[%value_in];
}
.loc 1 44 23
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r27;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r41,[%value_in];
}
.loc 1 44 34
neg.f32 %r42,%r38;
.loc 1 44 21
mov.f32 %r44,0f3fc90fdb;
sub.f32 %r43,%r44,%r41;
.loc 1 44 34
fma.rn.f32 %r24,%r38,0f80000000,%r43;
.loc 1 45 9
st.f32 [%r30],%r24;
st.f32 [%r30+4],%r42;
.loc 1 46 1
ret;
}
lib_a-cacosh.o/ 1612277260  0     0     100666  3124      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacosh
.visible .func cacosh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacosh.c"
// BEGIN GLOBAL FUNCTION DECL: csqrt
.extern .func csqrt (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: clog
.extern .func clog (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: cacosh
.visible .func cacosh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .u64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r62;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .pred %r78;
.reg .f64 %r88;
.reg .f64 %r91;
mov.u64 %r53,%ar0;
mov.f64 %r54,%ar1;
mov.f64 %r55,%ar2;
.loc 1 90 15
add.f64 %r62,%r54,0d3ff0000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r62;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r55;
call csqrt,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r25,[%frame];
ld.f64 %r26,[%frame+8];
.loc 1 90 30
mov.f64 %r73,0d3ff0000000000000;
sub.f64 %r72,%r54,%r73;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r72;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r55;
call csqrt,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r30,[%frame];
ld.f64 %r31,[%frame+8];
.loc 1 90 28
mul.f64 %r43,%r26,%r30;
mul.f64 %r76,%r26,%r31;
neg.f64 %r77,%r76;
fma.rn.f64 %r44,%r25,%r30,%r77;
fma.rn.f64 %r45,%r25,%r31,%r43;
setp.num.f64 %r78,%r44,%r45;
@ %r78 bra $L2;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r26;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r30;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r31;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r44,[%frame];
ld.f64 %r45,[%frame+8];
$L2:
.loc 1 90 6
add.f64 %r88,%r55,%r45;
add.f64 %r91,%r54,%r44;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r91;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r88;
call clog,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r34,[%frame];
ld.f64 %r35,[%frame+8];
.loc 1 92 9
st.f64 [%r53],%r34;
st.f64 [%r53+8],%r35;
.loc 1 93 1
ret;
}
lib_a-cacoshf.o/1612277260  0     0     100666  3119      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacoshf
.visible .func cacoshf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacoshf.c"
// BEGIN GLOBAL FUNCTION DECL: csqrtf
.extern .func csqrtf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __mulsc3
.extern .func __mulsc3 (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: clogf
.extern .func clogf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: cacoshf
.visible .func cacoshf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[8];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .u64 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r62;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r76;
.reg .f32 %r77;
.reg .pred %r78;
.reg .f32 %r88;
.reg .f32 %r91;
mov.u64 %r53,%ar0;
mov.f32 %r54,%ar1;
mov.f32 %r55,%ar2;
.loc 1 45 16
add.f32 %r62,%r54,0f3f800000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r62;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r55;
call csqrtf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r25,[%frame];
ld.f32 %r26,[%frame+4];
.loc 1 45 32
mov.f32 %r73,0f3f800000;
sub.f32 %r72,%r54,%r73;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r72;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r55;
call csqrtf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r30,[%frame];
ld.f32 %r31,[%frame+4];
.loc 1 45 30
mul.f32 %r43,%r26,%r30;
mul.f32 %r76,%r26,%r31;
neg.f32 %r77,%r76;
fma.rn.f32 %r44,%r25,%r30,%r77;
fma.rn.f32 %r45,%r25,%r31,%r43;
setp.num.f32 %r78,%r44,%r45;
@ %r78 bra $L2;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r25;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r26;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r30;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r31;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r44,[%frame];
ld.f32 %r45,[%frame+4];
$L2:
.loc 1 45 6
add.f32 %r88,%r55,%r45;
add.f32 %r91,%r54,%r44;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r91;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r88;
call clogf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r34,[%frame];
ld.f32 %r35,[%frame+4];
.loc 1 47 9
st.f32 [%r53],%r34;
st.f32 [%r53+4],%r35;
.loc 1 48 1
ret;
}

lib_a-cacoshl.o/1612277260  0     0     100666  3180      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacoshl
.visible .func cacoshl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacoshl.c"
// BEGIN GLOBAL FUNCTION DECL: csqrtl
.extern .func csqrtl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: clogl
.extern .func clogl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: cacoshl
.visible .func cacoshl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[32];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .u64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r62;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .pred %r78;
.reg .u64 %r79;
.reg .f64 %r89;
.reg .f64 %r92;
mov.u64 %r53,%ar0;
mov.f64 %r54,%ar1;
mov.f64 %r55,%ar2;
.loc 1 42 16
add.f64 %r62,%r54,0d3ff0000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r62;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r55;
call csqrtl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r25,[%frame];
ld.f64 %r26,[%frame+8];
.loc 1 42 32
mov.f64 %r73,0d3ff0000000000000;
sub.f64 %r72,%r54,%r73;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r72;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r55;
call csqrtl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r30,[%frame];
ld.f64 %r31,[%frame+8];
.loc 1 42 30
mul.f64 %r43,%r26,%r30;
mul.f64 %r76,%r26,%r31;
neg.f64 %r77,%r76;
fma.rn.f64 %r44,%r25,%r30,%r77;
fma.rn.f64 %r45,%r25,%r31,%r43;
setp.num.f64 %r78,%r44,%r45;
@ %r78 bra $L2;
add.u64 %r79,%frame,16;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r79;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r26;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r30;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r31;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r44,[%frame+16];
ld.f64 %r45,[%frame+24];
$L2:
.loc 1 42 6
add.f64 %r89,%r55,%r45;
add.f64 %r92,%r54,%r44;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r92;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r89;
call clogl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r34,[%frame];
ld.f64 %r35,[%frame+8];
.loc 1 44 9
st.f64 [%r53],%r34;
st.f64 [%r53+8],%r35;
.loc 1 45 1
ret;
}
lib_a-cacosl.o/ 1612277260  0     0     100666  2259      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cacosl
.visible .func cacosl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cacosl.c"
// BEGIN GLOBAL FUNCTION DECL: casinl
.extern .func casinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cacosl
.visible .func cacosl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .u64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r38;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
mov.u64 %r30,%ar0;
mov.f64 %r31,%ar1;
mov.f64 %r32,%ar2;
.loc 1 41 6
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r31;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r32;
call casinl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r26,[%frame];
ld.f64 %r27,[%frame+8];
.loc 1 42 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r27;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
.loc 1 42 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r27;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r41,[%value_in];
}
.loc 1 42 28
neg.f64 %r42,%r38;
.loc 1 42 15
mov.f64 %r44,0d3ff921fb54442d18;
sub.f64 %r43,%r44,%r41;
.loc 1 42 28
fma.rn.f64 %r24,%r38,0d8000000000000000,%r43;
.loc 1 43 9
st.f64 [%r30],%r24;
st.f64 [%r30+8],%r42;
.loc 1 44 1
ret;
}

lib_a-carg.o/   1612277260  0     0     100666  1768      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: carg
.visible .func (.param .f64 %value_out) carg (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/carg.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2
.extern .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: carg
.visible .func (.param .f64 %value_out) carg (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r32;
.reg .f64 %r35;
mov.f64 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 58 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r26;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r29,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r26;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r32,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
call (%value_in),atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r35,[%value_in];
}
.loc 1 59 1
mov.f64 %value,%r35;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-cargf.o/  1612277260  0     0     100666  1782      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cargf
.visible .func (.param .f32 %value_out) cargf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cargf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2f
.extern .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cargf
.visible .func (.param .f32 %value_out) cargf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r29;
.reg .f32 %r32;
.reg .f32 %r35;
mov.f32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 18 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r26;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r29,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r26;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r32,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r29;
call (%value_in),atan2f,(%out_arg1,%out_arg2);
ld.param.f32 %r35,[%value_in];
}
.loc 1 19 1
mov.f32 %value,%r35;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-cargl.o/  1612277260  0     0     100666  1039      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cargl
.visible .func (.param .f64 %value_out) cargl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cargl.c"
// BEGIN GLOBAL FUNCTION DECL: carg
.extern .func (.param .f64 %value_out) carg (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cargl
.visible .func (.param .f64 %value_out) cargl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 14 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),carg,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 18 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-casin.o/  1612277260  0     0     100666  5420      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casin
.visible .func casin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casin.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: csqrt
.extern .func csqrt (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: clog
.extern .func clog (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casin
.visible .func casin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r22;
.reg .f64 %r27;
.reg .f64 %r30;
.reg .f64 %r34;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r59;
.reg .u64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r68;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .pred %r73;
.reg .f64 %r77;
.reg .f64 %r78;
.reg .f64 %r79;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .f64 %r85;
.reg .f64 %r88;
.reg .f64 %r89;
.reg .f64 %r90;
.reg .f64 %r91;
.reg .f64 %r101;
.reg .f64 %r102;
.reg .f64 %r106;
.reg .pred %r107;
.reg .f64 %r111;
.reg .f64 %r112;
mov.u64 %r63,%ar0;
mov.f64 %r64,%ar1;
mov.f64 %r65,%ar2;
.loc 1 92 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r68,[%value_in];
}
.loc 1 93 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r71,[%value_in];
}
.loc 1 150 9
fma.rn.f64 %r22,%r71,0d0000000000000000,%r68;
.loc 1 151 5
neg.f64 %r72,%r71;
fma.rn.f64 %r47,%r22,0d0000000000000000,%r72;
fma.rn.f64 %r48,%r71,0d0000000000000000,%r22;
setp.num.f64 %r73,%r47,%r48;
@ %r73 bra $L2;
mov.f64 %r78,0d3ff0000000000000;
mov.f64 %r77,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r22;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r71;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r77;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r78;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r47,[%frame];
ld.f64 %r48,[%frame+8];
$L2:
.loc 1 155 32
add.f64 %r79,%r68,%r68;
.loc 1 155 36
mul.f64 %r34,%r79,%r71;
.loc 1 155 10
sub.f64 %r80,%r68,%r71;
.loc 1 155 20
add.f64 %r81,%r68,%r71;
.loc 1 155 25
mul.f64 %r82,%r34,0d0000000000000000;
fma.rn.f64 %r27,%r80,%r81,%r82;
.loc 1 157 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r85,[%value_in];
}
.loc 1 157 13
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r88,[%value_in];
}
.loc 1 157 23
neg.f64 %r89,%r85;
.loc 1 157 11
mov.f64 %r91,0d3ff0000000000000;
sub.f64 %r90,%r91,%r88;
.loc 1 157 23
fma.rn.f64 %r30,%r85,0d8000000000000000,%r90;
.loc 1 158 7
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r89;
call csqrt,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r40,[%frame];
ld.f64 %r41,[%frame+8];
.loc 1 160 5
add.f64 %r101,%r40,%r47;
add.f64 %r102,%r41,%r48;
.loc 1 161 7
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r101;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r102;
call clog,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r44,[%frame];
ld.f64 %r45,[%frame+8];
.loc 1 163 4
fma.rn.f64 %r59,%r44,0d8000000000000000,%r45;
neg.f64 %r106,%r44;
fma.rn.f64 %r46,%r45,0d8000000000000000,%r106;
setp.num.f64 %r107,%r46,%r59;
@ %r107 bra $L3;
mov.f64 %r112,0dbff0000000000000;
mov.f64 %r111,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r44;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r45;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r111;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r112;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r59,[%frame];
ld.f64 %r46,[%frame+8];
$L3:
.loc 1 164 9
st.f64 [%r63],%r59;
st.f64 [%r63+8],%r46;
.loc 1 165 1
ret;
}
lib_a-casinf.o/ 1612277260  0     0     100666  5342      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casinf
.visible .func casinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casinf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __mulsc3
.extern .func __mulsc3 (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: csqrtf
.extern .func csqrtf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: clogf
.extern .func clogf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casinf
.visible .func casinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[8];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r22;
.reg .f32 %r27;
.reg .f32 %r30;
.reg .f32 %r34;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r59;
.reg .u64 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r68;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .pred %r73;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .f32 %r79;
.reg .f32 %r80;
.reg .f32 %r81;
.reg .f32 %r82;
.reg .f32 %r85;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .f32 %r90;
.reg .f32 %r91;
.reg .f32 %r101;
.reg .f32 %r102;
.reg .f32 %r106;
.reg .pred %r107;
.reg .f32 %r111;
.reg .f32 %r112;
mov.u64 %r63,%ar0;
mov.f32 %r64,%ar1;
mov.f32 %r65,%ar2;
.loc 1 49 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r64;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r65;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r68,[%value_in];
}
.loc 1 50 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r64;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r65;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r71,[%value_in];
}
.loc 1 107 9
fma.rn.f32 %r22,%r71,0f00000000,%r68;
.loc 1 108 5
neg.f32 %r72,%r71;
fma.rn.f32 %r47,%r22,0f00000000,%r72;
fma.rn.f32 %r48,%r71,0f00000000,%r22;
setp.num.f32 %r73,%r47,%r48;
@ %r73 bra $L2;
mov.f32 %r78,0f3f800000;
mov.f32 %r77,0f00000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r22;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r71;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r77;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r78;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r47,[%frame];
ld.f32 %r48,[%frame+4];
$L2:
.loc 1 112 33
add.f32 %r79,%r68,%r68;
.loc 1 112 37
mul.f32 %r34,%r79,%r71;
.loc 1 112 10
sub.f32 %r80,%r68,%r71;
.loc 1 112 20
add.f32 %r81,%r68,%r71;
.loc 1 112 25
mul.f32 %r82,%r34,0f00000000;
fma.rn.f32 %r27,%r80,%r81,%r82;
.loc 1 114 27
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r85,[%value_in];
}
.loc 1 114 14
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r88,[%value_in];
}
.loc 1 114 25
neg.f32 %r89,%r85;
.loc 1 114 12
mov.f32 %r91,0f3f800000;
sub.f32 %r90,%r91,%r88;
.loc 1 114 25
fma.rn.f32 %r30,%r85,0f80000000,%r90;
.loc 1 115 7
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r89;
call csqrtf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r40,[%frame];
ld.f32 %r41,[%frame+4];
.loc 1 117 5
add.f32 %r101,%r40,%r47;
add.f32 %r102,%r41,%r48;
.loc 1 118 7
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r101;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r102;
call clogf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r44,[%frame];
ld.f32 %r45,[%frame+4];
.loc 1 120 4
fma.rn.f32 %r59,%r44,0f80000000,%r45;
neg.f32 %r106,%r44;
fma.rn.f32 %r46,%r45,0f80000000,%r106;
setp.num.f32 %r107,%r46,%r59;
@ %r107 bra $L3;
mov.f32 %r112,0fbf800000;
mov.f32 %r111,0f80000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r44;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r45;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r111;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r112;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r59,[%frame];
ld.f32 %r46,[%frame+4];
$L3:
.loc 1 121 9
st.f32 [%r63],%r59;
st.f32 [%r63+4],%r46;
.loc 1 122 1
ret;
}
lib_a-casinh.o/ 1612277260  0     0     100666  2924      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casinh
.visible .func casinh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casinh.c"
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: casin
.extern .func casin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casinh
.visible .func casinh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r37;
.reg .u64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .pred %r44;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r57;
.reg .pred %r58;
.reg .f64 %r62;
.reg .f64 %r63;
mov.u64 %r40,%ar0;
mov.f64 %r41,%ar1;
mov.f64 %r42,%ar2;
.loc 1 95 17
neg.f64 %r43,%r42;
fma.rn.f64 %r29,%r41,0d0000000000000000,%r43;
fma.rn.f64 %r30,%r42,0d0000000000000000,%r41;
setp.num.f64 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f64 %r49,0d3ff0000000000000;
mov.f64 %r48,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r42;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r48;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r49;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r29,[%frame];
ld.f64 %r30,[%frame+8];
$L2:
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r30;
call casin,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r24,[%frame];
ld.f64 %r25,[%frame+8];
.loc 1 95 4
fma.rn.f64 %r37,%r24,0d8000000000000000,%r25;
neg.f64 %r57,%r24;
fma.rn.f64 %r26,%r25,0d8000000000000000,%r57;
setp.num.f64 %r58,%r26,%r37;
@ %r58 bra $L3;
mov.f64 %r63,0dbff0000000000000;
mov.f64 %r62,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r25;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r62;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r63;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r37,[%frame];
ld.f64 %r26,[%frame+8];
$L3:
.loc 1 96 9
st.f64 [%r40],%r37;
st.f64 [%r40+8],%r26;
.loc 1 97 1
ret;
}
lib_a-casinhf.o/1612277260  0     0     100666  2867      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casinhf
.visible .func casinhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casinhf.c"
// BEGIN GLOBAL FUNCTION DECL: __mulsc3
.extern .func __mulsc3 (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: casinf
.extern .func casinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casinhf
.visible .func casinhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[8];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r37;
.reg .u64 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .pred %r44;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r57;
.reg .pred %r58;
.reg .f32 %r62;
.reg .f32 %r63;
mov.u64 %r40,%ar0;
mov.f32 %r41,%ar1;
mov.f32 %r42,%ar2;
.loc 1 42 18
neg.f32 %r43,%r42;
fma.rn.f32 %r29,%r41,0f00000000,%r43;
fma.rn.f32 %r30,%r42,0f00000000,%r41;
setp.num.f32 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f32 %r49,0f3f800000;
mov.f32 %r48,0f00000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r42;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r48;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r49;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r29,[%frame];
ld.f32 %r30,[%frame+4];
$L2:
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r29;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r30;
call casinf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r24,[%frame];
ld.f32 %r25,[%frame+4];
.loc 1 42 4
fma.rn.f32 %r37,%r24,0f80000000,%r25;
neg.f32 %r57,%r24;
fma.rn.f32 %r26,%r25,0f80000000,%r57;
setp.num.f32 %r58,%r26,%r37;
@ %r58 bra $L3;
mov.f32 %r63,0fbf800000;
mov.f32 %r62,0f80000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r24;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r25;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r62;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r63;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r37,[%frame];
ld.f32 %r26,[%frame+4];
$L3:
.loc 1 43 9
st.f32 [%r40],%r37;
st.f32 [%r40+4],%r26;
.loc 1 44 1
ret;
}

lib_a-casinhl.o/1612277260  0     0     100666  2976      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casinhl
.visible .func casinhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casinhl.c"
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: casinl
.extern .func casinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casinhl
.visible .func casinhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[32];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r37;
.reg .u64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .pred %r44;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .u64 %r50;
.reg .f64 %r58;
.reg .pred %r59;
.reg .f64 %r63;
.reg .f64 %r64;
mov.u64 %r40,%ar0;
mov.f64 %r41,%ar1;
mov.f64 %r42,%ar2;
.loc 1 39 18
neg.f64 %r43,%r42;
fma.rn.f64 %r29,%r41,0d0000000000000000,%r43;
fma.rn.f64 %r30,%r42,0d0000000000000000,%r41;
setp.num.f64 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f64 %r49,0d3ff0000000000000;
mov.f64 %r48,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r42;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r48;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r49;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r29,[%frame];
ld.f64 %r30,[%frame+8];
$L2:
add.u64 %r50,%frame,16;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r50;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r30;
call casinl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r24,[%frame+16];
ld.f64 %r25,[%frame+24];
.loc 1 39 4
fma.rn.f64 %r37,%r24,0d8000000000000000,%r25;
neg.f64 %r58,%r24;
fma.rn.f64 %r26,%r25,0d8000000000000000,%r58;
setp.num.f64 %r59,%r26,%r37;
@ %r59 bra $L3;
mov.f64 %r64,0dbff0000000000000;
mov.f64 %r63,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r25;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r63;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r64;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r37,[%frame];
ld.f64 %r26,[%frame+8];
$L3:
.loc 1 40 9
st.f64 [%r40],%r37;
st.f64 [%r40+8],%r26;
.loc 1 41 1
ret;
}
lib_a-casinl.o/ 1612277260  0     0     100666  5485      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: casinl
.visible .func casinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/casinl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: csqrtl
.extern .func csqrtl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: clogl
.extern .func clogl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: casinl
.visible .func casinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[32];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r22;
.reg .f64 %r27;
.reg .f64 %r30;
.reg .f64 %r34;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r59;
.reg .u64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r68;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .pred %r73;
.reg .f64 %r77;
.reg .f64 %r78;
.reg .f64 %r79;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .f64 %r85;
.reg .f64 %r88;
.reg .f64 %r89;
.reg .f64 %r90;
.reg .f64 %r91;
.reg .u64 %r92;
.reg .f64 %r102;
.reg .f64 %r103;
.reg .f64 %r108;
.reg .pred %r109;
.reg .f64 %r113;
.reg .f64 %r114;
mov.u64 %r63,%ar0;
mov.f64 %r64,%ar1;
mov.f64 %r65,%ar2;
.loc 1 46 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r68,[%value_in];
}
.loc 1 47 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r71,[%value_in];
}
.loc 1 104 9
fma.rn.f64 %r22,%r71,0d0000000000000000,%r68;
.loc 1 105 5
neg.f64 %r72,%r71;
fma.rn.f64 %r47,%r22,0d0000000000000000,%r72;
fma.rn.f64 %r48,%r71,0d0000000000000000,%r22;
setp.num.f64 %r73,%r47,%r48;
@ %r73 bra $L2;
mov.f64 %r78,0d3ff0000000000000;
mov.f64 %r77,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r22;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r71;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r77;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r78;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r47,[%frame];
ld.f64 %r48,[%frame+8];
$L2:
.loc 1 109 33
add.f64 %r79,%r68,%r68;
.loc 1 109 37
mul.f64 %r34,%r79,%r71;
.loc 1 109 10
sub.f64 %r80,%r68,%r71;
.loc 1 109 20
add.f64 %r81,%r68,%r71;
.loc 1 109 25
mul.f64 %r82,%r34,0d0000000000000000;
fma.rn.f64 %r27,%r80,%r81,%r82;
.loc 1 111 27
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r85,[%value_in];
}
.loc 1 111 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r88,[%value_in];
}
.loc 1 111 25
neg.f64 %r89,%r85;
.loc 1 111 12
mov.f64 %r91,0d3ff0000000000000;
sub.f64 %r90,%r91,%r88;
.loc 1 111 25
fma.rn.f64 %r30,%r85,0d8000000000000000,%r90;
.loc 1 112 7
add.u64 %r92,%frame,16;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r92;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r89;
call csqrtl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r40,[%frame+16];
ld.f64 %r41,[%frame+24];
.loc 1 114 5
add.f64 %r102,%r40,%r47;
add.f64 %r103,%r41,%r48;
.loc 1 115 7
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r92;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r102;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r103;
call clogl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r44,[%frame+16];
ld.f64 %r45,[%frame+24];
.loc 1 117 4
fma.rn.f64 %r59,%r44,0d8000000000000000,%r45;
neg.f64 %r108,%r44;
fma.rn.f64 %r46,%r45,0d8000000000000000,%r108;
setp.num.f64 %r109,%r46,%r59;
@ %r109 bra $L3;
mov.f64 %r114,0dbff0000000000000;
mov.f64 %r113,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r44;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r45;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r113;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r114;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r59,[%frame];
ld.f64 %r46,[%frame+8];
$L3:
.loc 1 118 9
st.f64 [%r63],%r59;
st.f64 [%r63+8],%r46;
.loc 1 119 1
ret;
}

lib_a-catan.o/  1612277260  0     0     100666  4034      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: catan
.visible .func catan (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catan.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2
.extern .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _redupi
.extern .func (.param .f64 %value_out) _redupi (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{9221120237041090560,9218868437227405312 };
// BEGIN GLOBAL FUNCTION DEF: catan
.visible .func catan (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r26;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .u64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r46;
.reg .f64 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .pred %r55;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .pred %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
mov.u64 %r41,%ar0;
mov.f64 %r42,%ar1;
mov.f64 %r43,%ar2;
.loc 1 100 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r46,[%value_in];
}
.loc 1 101 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r49,[%value_in];
}
.loc 1 103 5
setp.neu.f64 %r50,%r46,0d0000000000000000;
@ %r50 bra $L2;
.loc 1 103 17
setp.gt.f64 %r51,%r49,0d3ff0000000000000;
@ %r51 bra $L3;
$L2:
.loc 1 106 5
mul.f64 %r31,%r46,%r46;
.loc 1 107 4
neg.f64 %r52,%r49;
.loc 1 107 10
mov.f64 %r54,0d3ff0000000000000;
sub.f64 %r53,%r54,%r31;
.loc 1 107 4
fma.rn.f64 %r32,%r52,%r49,%r53;
.loc 1 108 5
setp.eq.f64 %r55,%r32,0d0000000000000000;
@ %r55 bra $L3;
.loc 1 111 12
add.f64 %r58,%r46,%r46;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r58;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
.loc 1 111 4
mul.f64 %r61,%r59,0d3fe0000000000000;
.loc 1 112 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r61;
call (%value_in),_redupi,(%out_arg1);
ld.param.f64 %r62,[%value_in];
}
.loc 1 114 4
sub.f64 %r34,%r49,%r54;
.loc 1 115 4
fma.rn.f64 %r35,%r34,%r34,%r31;
.loc 1 116 5
setp.eq.f64 %r64,%r35,0d0000000000000000;
@ %r64 bra $L3;
.loc 1 119 4
add.f64 %r36,%r49,0d3ff0000000000000;
.loc 1 120 10
fma.rn.f64 %r26,%r36,%r36,%r31;
.loc 1 120 4
div.rn.f64 %r66,%r26,%r35;
.loc 1 121 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r66;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r67,[%value_in];
}
.loc 1 121 16
mul.f64 %r38,%r67,0d3fd0000000000000;
.loc 1 121 4
fma.rn.f64 %r39,%r38,0d0000000000000000,%r62;
.loc 1 122 9
st.f64 [%r41],%r39;
.loc 1 121 4
add.f64 %r68,%r38,0d0000000000000000;
.loc 1 122 9
st.f64 [%r41+8],%r68;
bra $L1;
$L3:
.loc 1 129 9
ld.const.f64 %r69,[$LC0];
st.f64 [%r41],%r69;
ld.const.f64 %r70,[$LC0+8];
st.f64 [%r41+8],%r70;
$L1:
.loc 1 130 1
ret;
}
lib_a-catanf.o/ 1612277260  0     0     100666  3930      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: catanf
.visible .func catanf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catanf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2f
.extern .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _redupif
.extern .func (.param .f32 %value_out) _redupif (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: logf
.extern .func (.param .f32 %value_out) logf (.param .f32 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 4 .u32 $LC0[2] =
{2143289344,2139095040 };
// BEGIN GLOBAL FUNCTION DEF: catanf
.visible .func catanf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r26;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .u64 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r46;
.reg .f32 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .pred %r55;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .pred %r64;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
mov.u64 %r41,%ar0;
mov.f32 %r42,%ar1;
mov.f32 %r43,%ar2;
.loc 1 49 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r43;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r46,[%value_in];
}
.loc 1 50 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r43;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r49,[%value_in];
}
.loc 1 52 5
setp.neu.f32 %r50,%r46,0f00000000;
@ %r50 bra $L2;
.loc 1 52 18
setp.gt.f32 %r51,%r49,0f3f800000;
@ %r51 bra $L3;
$L2:
.loc 1 55 5
mul.f32 %r31,%r46,%r46;
.loc 1 56 4
neg.f32 %r52,%r49;
.loc 1 56 11
mov.f32 %r54,0f3f800000;
sub.f32 %r53,%r54,%r31;
.loc 1 56 4
fma.rn.f32 %r32,%r52,%r49,%r53;
.loc 1 57 5
setp.eq.f32 %r55,%r32,0f00000000;
@ %r55 bra $L3;
.loc 1 60 13
add.f32 %r58,%r46,%r46;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r58;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r32;
call (%value_in),atan2f,(%out_arg1,%out_arg2);
ld.param.f32 %r59,[%value_in];
}
.loc 1 60 4
mul.f32 %r61,%r59,0f3f000000;
.loc 1 61 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),_redupif,(%out_arg1);
ld.param.f32 %r62,[%value_in];
}
.loc 1 63 4
sub.f32 %r34,%r49,%r54;
.loc 1 64 4
fma.rn.f32 %r35,%r34,%r34,%r31;
.loc 1 65 5
setp.eq.f32 %r64,%r35,0f00000000;
@ %r64 bra $L3;
.loc 1 68 4
add.f32 %r36,%r49,0f3f800000;
.loc 1 69 10
fma.rn.f32 %r26,%r36,%r36,%r31;
.loc 1 69 4
div.rn.f32 %r66,%r26,%r35;
.loc 1 70 19
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r66;
call (%value_in),logf,(%out_arg1);
ld.param.f32 %r67,[%value_in];
}
.loc 1 70 17
mul.f32 %r38,%r67,0f3e800000;
.loc 1 70 4
fma.rn.f32 %r39,%r38,0f00000000,%r62;
.loc 1 71 9
st.f32 [%r41],%r39;
.loc 1 70 4
add.f32 %r68,%r38,0f00000000;
.loc 1 71 9
st.f32 [%r41+4],%r68;
bra $L1;
$L3:
.loc 1 78 9
ld.const.f32 %r69,[$LC0];
st.f32 [%r41],%r69;
ld.const.f32 %r70,[$LC0+4];
st.f32 [%r41+4],%r70;
$L1:
.loc 1 79 1
ret;
}
lib_a-catanh.o/ 1612277260  0     0     100666  2924      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: catanh
.visible .func catanh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catanh.c"
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: catan
.extern .func catan (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: catanh
.visible .func catanh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r37;
.reg .u64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .pred %r44;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r57;
.reg .pred %r58;
.reg .f64 %r62;
.reg .f64 %r63;
mov.u64 %r40,%ar0;
mov.f64 %r41,%ar1;
mov.f64 %r42,%ar2;
.loc 1 88 17
neg.f64 %r43,%r42;
fma.rn.f64 %r29,%r41,0d0000000000000000,%r43;
fma.rn.f64 %r30,%r42,0d0000000000000000,%r41;
setp.num.f64 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f64 %r49,0d3ff0000000000000;
mov.f64 %r48,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r42;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r48;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r49;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r29,[%frame];
ld.f64 %r30,[%frame+8];
$L2:
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r30;
call catan,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r24,[%frame];
ld.f64 %r25,[%frame+8];
.loc 1 88 4
fma.rn.f64 %r37,%r24,0d8000000000000000,%r25;
neg.f64 %r57,%r24;
fma.rn.f64 %r26,%r25,0d8000000000000000,%r57;
setp.num.f64 %r58,%r26,%r37;
@ %r58 bra $L3;
mov.f64 %r63,0dbff0000000000000;
mov.f64 %r62,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r25;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r62;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r63;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r37,[%frame];
ld.f64 %r26,[%frame+8];
$L3:
.loc 1 89 9
st.f64 [%r40],%r37;
st.f64 [%r40+8],%r26;
.loc 1 90 1
ret;
}
lib_a-catanhf.o/1612277260  0     0     100666  2867      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: catanhf
.visible .func catanhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catanhf.c"
// BEGIN GLOBAL FUNCTION DECL: __mulsc3
.extern .func __mulsc3 (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: catanf
.extern .func catanf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: catanhf
.visible .func catanhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[8];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r37;
.reg .u64 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .pred %r44;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r57;
.reg .pred %r58;
.reg .f32 %r62;
.reg .f32 %r63;
mov.u64 %r40,%ar0;
mov.f32 %r41,%ar1;
mov.f32 %r42,%ar2;
.loc 1 42 18
neg.f32 %r43,%r42;
fma.rn.f32 %r29,%r41,0f00000000,%r43;
fma.rn.f32 %r30,%r42,0f00000000,%r41;
setp.num.f32 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f32 %r49,0f3f800000;
mov.f32 %r48,0f00000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r42;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r48;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r49;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r29,[%frame];
ld.f32 %r30,[%frame+4];
$L2:
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r29;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r30;
call catanf,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f32 %r24,[%frame];
ld.f32 %r25,[%frame+4];
.loc 1 42 4
fma.rn.f32 %r37,%r24,0f80000000,%r25;
neg.f32 %r57,%r24;
fma.rn.f32 %r26,%r25,0f80000000,%r57;
setp.num.f32 %r58,%r26,%r37;
@ %r58 bra $L3;
mov.f32 %r63,0fbf800000;
mov.f32 %r62,0f80000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r24;
.param .f32 %out_arg3;
st.param.f32 [%out_arg3],%r25;
.param .f32 %out_arg4;
st.param.f32 [%out_arg4],%r62;
.param .f32 %out_arg5;
st.param.f32 [%out_arg5],%r63;
call __mulsc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f32 %r37,[%frame];
ld.f32 %r26,[%frame+4];
$L3:
.loc 1 43 9
st.f32 [%r40],%r37;
st.f32 [%r40+4],%r26;
.loc 1 44 1
ret;
}

lib_a-catanhl.o/1612277260  0     0     100666  2976      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: catanhl
.visible .func catanhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catanhl.c"
// BEGIN GLOBAL FUNCTION DECL: __muldc3
.extern .func __muldc3 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
// BEGIN GLOBAL FUNCTION DECL: catanl
.extern .func catanl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: catanhl
.visible .func catanhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[32];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r37;
.reg .u64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .pred %r44;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .u64 %r50;
.reg .f64 %r58;
.reg .pred %r59;
.reg .f64 %r63;
.reg .f64 %r64;
mov.u64 %r40,%ar0;
mov.f64 %r41,%ar1;
mov.f64 %r42,%ar2;
.loc 1 39 18
neg.f64 %r43,%r42;
fma.rn.f64 %r29,%r41,0d0000000000000000,%r43;
fma.rn.f64 %r30,%r42,0d0000000000000000,%r41;
setp.num.f64 %r44,%r29,%r30;
@ %r44 bra $L2;
mov.f64 %r49,0d3ff0000000000000;
mov.f64 %r48,0d0000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r42;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r48;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r49;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r29,[%frame];
ld.f64 %r30,[%frame+8];
$L2:
add.u64 %r50,%frame,16;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r50;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r29;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r30;
call catanl,(%out_arg1,%out_arg2,%out_arg3);
}
ld.f64 %r24,[%frame+16];
ld.f64 %r25,[%frame+24];
.loc 1 39 4
fma.rn.f64 %r37,%r24,0d8000000000000000,%r25;
neg.f64 %r58,%r24;
fma.rn.f64 %r26,%r25,0d8000000000000000,%r58;
setp.num.f64 %r59,%r26,%r37;
@ %r59 bra $L3;
mov.f64 %r64,0dbff0000000000000;
mov.f64 %r63,0d8000000000000000;
{
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
.param .f64 %out_arg3;
st.param.f64 [%out_arg3],%r25;
.param .f64 %out_arg4;
st.param.f64 [%out_arg4],%r63;
.param .f64 %out_arg5;
st.param.f64 [%out_arg5],%r64;
call __muldc3,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5);
}
ld.f64 %r37,[%frame];
ld.f64 %r26,[%frame+8];
$L3:
.loc 1 40 9
st.f64 [%r40],%r37;
st.f64 [%r40+8],%r26;
.loc 1 41 1
ret;
}
lib_a-catanl.o/ 1612277260  0     0     100666  4028      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: catanl
.visible .func catanl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/catanl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2l
.extern .func (.param .f64 %value_out) atan2l (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _redupil
.extern .func (.param .f64 %value_out) _redupil (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: logl
.extern .func (.param .f64 %value_out) logl (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{9221120237041090560,9218868437227405312 };
// BEGIN GLOBAL FUNCTION DEF: catanl
.visible .func catanl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r26;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .u64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r46;
.reg .f64 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .pred %r55;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .pred %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
mov.u64 %r41,%ar0;
mov.f64 %r42,%ar1;
mov.f64 %r43,%ar2;
.loc 1 46 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r46,[%value_in];
}
.loc 1 47 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r49,[%value_in];
}
.loc 1 49 5
setp.neu.f64 %r50,%r46,0d0000000000000000;
@ %r50 bra $L2;
.loc 1 49 18
setp.gt.f64 %r51,%r49,0d3ff0000000000000;
@ %r51 bra $L3;
$L2:
.loc 1 52 5
mul.f64 %r31,%r46,%r46;
.loc 1 53 4
neg.f64 %r52,%r49;
.loc 1 53 11
mov.f64 %r54,0d3ff0000000000000;
sub.f64 %r53,%r54,%r31;
.loc 1 53 4
fma.rn.f64 %r32,%r52,%r49,%r53;
.loc 1 54 5
setp.eq.f64 %r55,%r32,0d0000000000000000;
@ %r55 bra $L3;
.loc 1 57 13
add.f64 %r58,%r46,%r46;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r58;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),atan2l,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
.loc 1 57 4
mul.f64 %r61,%r59,0d3fe0000000000000;
.loc 1 58 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r61;
call (%value_in),_redupil,(%out_arg1);
ld.param.f64 %r62,[%value_in];
}
.loc 1 60 4
sub.f64 %r34,%r49,%r54;
.loc 1 61 4
fma.rn.f64 %r35,%r34,%r34,%r31;
.loc 1 62 5
setp.eq.f64 %r64,%r35,0d0000000000000000;
@ %r64 bra $L3;
.loc 1 65 4
add.f64 %r36,%r49,0d3ff0000000000000;
.loc 1 66 10
fma.rn.f64 %r26,%r36,%r36,%r31;
.loc 1 66 4
div.rn.f64 %r66,%r26,%r35;
.loc 1 67 19
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r66;
call (%value_in),logl,(%out_arg1);
ld.param.f64 %r67,[%value_in];
}
.loc 1 67 17
mul.f64 %r38,%r67,0d3fd0000000000000;
.loc 1 67 4
fma.rn.f64 %r39,%r38,0d0000000000000000,%r62;
.loc 1 68 9
st.f64 [%r41],%r39;
.loc 1 67 4
add.f64 %r68,%r38,0d0000000000000000;
.loc 1 68 9
st.f64 [%r41+8],%r68;
bra $L1;
$L3:
.loc 1 75 9
ld.const.f64 %r69,[$LC0];
st.f64 [%r41],%r69;
ld.const.f64 %r70,[$LC0+8];
st.f64 [%r41+8],%r70;
$L1:
.loc 1 76 1
ret;
}
lib_a-cbrtl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cbrtl
.visible .func (.param .f64 %value_out) cbrtl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/cbrtl.c"
// BEGIN GLOBAL FUNCTION DECL: cbrt
.extern .func (.param .f64 %value_out) cbrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: cbrtl
.visible .func (.param .f64 %value_out) cbrtl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),cbrt,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-ccos.o/   1612277260  0     0     100666  3071      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccos
.visible .func ccos (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccos.c"
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchsh
.extern .func _cchsh (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccos
.visible .func ccos (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r30;
.reg .f64 %r32;
.reg .u64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .u64 %r43;
.reg .f64 %r46;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
mov.u64 %r34,%ar0;
mov.f64 %r35,%ar1;
mov.f64 %r36,%ar2;
.loc 1 78 2
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
add.u64 %r43,%frame,8;
{
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r43;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchsh,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 79 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r46,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r46;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r48,[%value_in];
}
.loc 1 79 42
ld.f64 %r49,[%frame];
mul.f64 %r32,%r48,%r49;
.loc 1 79 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r52,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r54,[%value_in];
}
.loc 1 79 25
mul.f64 %r56,%r32,0d8000000000000000;
ld.f64 %r57,[%frame+8];
fma.rn.f64 %r30,%r54,%r57,%r56;
.loc 1 80 9
st.f64 [%r34],%r30;
.loc 1 79 25
neg.f64 %r58,%r32;
.loc 1 80 9
st.f64 [%r34+8],%r58;
.loc 1 81 1
ret;
}

lib_a-ccosf.o/  1612277260  0     0     100666  3084      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccosf
.visible .func ccosf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccosf.c"
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchshf
.extern .func _cchshf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccosf
.visible .func ccosf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r30;
.reg .f32 %r32;
.reg .u64 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .u64 %r43;
.reg .f32 %r46;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r52;
.reg .f32 %r54;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
mov.u64 %r34,%ar0;
mov.f32 %r35,%ar1;
mov.f32 %r36,%ar2;
.loc 1 45 2
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r36;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
add.u64 %r43,%frame,4;
{
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r43;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchshf,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 46 30
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r36;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r46,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r48,[%value_in];
}
.loc 1 46 46
ld.f32 %r49,[%frame];
mul.f32 %r32,%r48,%r49;
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r36;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r52,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r52;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r54,[%value_in];
}
.loc 1 46 27
mul.f32 %r56,%r32,0f80000000;
ld.f32 %r57,[%frame+4];
fma.rn.f32 %r30,%r54,%r57,%r56;
.loc 1 47 9
st.f32 [%r34],%r30;
.loc 1 46 27
neg.f32 %r58,%r32;
.loc 1 47 9
st.f32 [%r34+4],%r58;
.loc 1 48 1
ret;
}
lib_a-ccosh.o/  1612277260  0     0     100666  2806      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccosh
.visible .func ccosh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccosh.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccosh
.visible .func ccosh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r27;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r47;
.reg .f64 %r48;
mov.u64 %r31,%ar0;
mov.f64 %r32,%ar1;
mov.f64 %r33,%ar2;
.loc 1 77 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r36,[%value_in];
}
.loc 1 78 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 79 26
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 79 36
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r43,[%value_in];
}
.loc 1 79 34
mul.f64 %r30,%r41,%r43;
.loc 1 79 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r45,[%value_in];
}
.loc 1 79 16
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 79 23
mul.f64 %r48,%r30,0d0000000000000000;
fma.rn.f64 %r27,%r45,%r47,%r48;
.loc 1 80 9
st.f64 [%r31],%r27;
st.f64 [%r31+8],%r30;
.loc 1 81 1
ret;
}
lib_a-ccoshf.o/ 1612277260  0     0     100666  2821      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccoshf
.visible .func ccoshf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccoshf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinhf
.extern .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: coshf
.extern .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccoshf
.visible .func ccoshf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r27;
.reg .f32 %r30;
.reg .u64 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r41;
.reg .f32 %r43;
.reg .f32 %r45;
.reg .f32 %r47;
.reg .f32 %r48;
mov.u64 %r31,%ar0;
mov.f32 %r32,%ar1;
mov.f32 %r33,%ar2;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r33;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r36,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r33;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
.loc 1 46 28
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r36;
call (%value_in),sinhf,(%out_arg1);
ld.param.f32 %r41,[%value_in];
}
.loc 1 46 39
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r43,[%value_in];
}
.loc 1 46 37
mul.f32 %r30,%r41,%r43;
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r36;
call (%value_in),coshf,(%out_arg1);
ld.param.f32 %r45,[%value_in];
}
.loc 1 46 17
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r47,[%value_in];
}
.loc 1 46 25
mul.f32 %r48,%r30,0f00000000;
fma.rn.f32 %r27,%r45,%r47,%r48;
.loc 1 47 9
st.f32 [%r31],%r27;
st.f32 [%r31+4],%r30;
.loc 1 48 1
ret;
}

lib_a-ccoshl.o/ 1612277260  0     0     100666  2829      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccoshl
.visible .func ccoshl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccoshl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinhl
.extern .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: coshl
.extern .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccoshl
.visible .func ccoshl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r27;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r47;
.reg .f64 %r48;
mov.u64 %r31,%ar0;
mov.f64 %r32,%ar1;
mov.f64 %r33,%ar2;
.loc 1 41 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r36,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 43 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),sinhl,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 43 39
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r43,[%value_in];
}
.loc 1 43 37
mul.f64 %r30,%r41,%r43;
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),coshl,(%out_arg1);
ld.param.f64 %r45,[%value_in];
}
.loc 1 43 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 43 25
mul.f64 %r48,%r30,0d0000000000000000;
fma.rn.f64 %r27,%r45,%r47,%r48;
.loc 1 44 9
st.f64 [%r31],%r27;
st.f64 [%r31+8],%r30;
.loc 1 45 1
ret;
}

lib_a-ccosl.o/  1612277260  0     0     100666  3092      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ccosl
.visible .func ccosl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ccosl.c"
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchshl
.extern .func _cchshl (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ccosl
.visible .func ccosl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r30;
.reg .f64 %r32;
.reg .u64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .u64 %r43;
.reg .f64 %r46;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
mov.u64 %r34,%ar0;
mov.f64 %r35,%ar1;
mov.f64 %r36,%ar2;
.loc 1 42 2
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
add.u64 %r43,%frame,8;
{
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r43;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchshl,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 43 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r46,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r46;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r48,[%value_in];
}
.loc 1 43 46
ld.f64 %r49,[%frame];
mul.f64 %r32,%r48,%r49;
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r52,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r54,[%value_in];
}
.loc 1 43 27
mul.f64 %r56,%r32,0d8000000000000000;
ld.f64 %r57,[%frame+8];
fma.rn.f64 %r30,%r54,%r57,%r56;
.loc 1 44 9
st.f64 [%r34],%r30;
.loc 1 43 27
neg.f64 %r58,%r32;
.loc 1 44 9
st.f64 [%r34+8],%r58;
.loc 1 45 1
ret;
}
lib_a-ceill.o/  1612277260  0     0     100666  557       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ceill
.visible .func (.param .f64 %value_out) ceill (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/ceill.c"
// BEGIN GLOBAL FUNCTION DEF: ceill
.visible .func (.param .f64 %value_out) ceill (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
cvt.rpi.f64.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}

/0              1612277260  0     0     100666  7592      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: _cchsh
.visible .func _cchsh (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cephes_subr.c"
// BEGIN GLOBAL FUNCTION DECL: _redupi
.visible .func (.param .f64 %value_out) _redupi (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctans
.visible .func (.param .f64 %value_out) _ctans (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: exp
.extern .func (.param .f64 %value_out) exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: _cchsh
.visible .func _cchsh (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .f64 %r34;
.reg .pred %r35;
.reg .f64 %r37;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
mov.f64 %r30,%ar0;
mov.u64 %r31,%ar1;
mov.u64 %r32,%ar2;
.loc 1 46 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r34,[%value_in];
}
.loc 1 46 5
setp.le.f64 %r35,%r34,0d3fe0000000000000;
@ ! %r35 bra $L6;
.loc 1 47 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r37,[%value_in];
}
.loc 1 47 6
st.f64 [%r31],%r37;
.loc 1 48 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r39,[%value_in];
}
.loc 1 48 6
st.f64 [%r32],%r39;
bra $L1;
$L6:
.loc 1 50 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),exp,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 51 6
mov.f64 %r42,0d3fe0000000000000;
div.rn.f64 %r28,%r42,%r41;
.loc 1 53 10
neg.f64 %r43,%r28;
fma.rn.f64 %r25,%r41,0d3fe0000000000000,%r43;
.loc 1 53 6
st.f64 [%r32],%r25;
.loc 1 54 10
fma.rn.f64 %r26,%r41,0d3fe0000000000000,%r28;
.loc 1 54 6
st.f64 [%r31],%r26;
$L1:
.loc 1 56 1
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _redupi
.visible .func (.param .f64 %value_out) _redupi (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .u64 %r26;
.reg .f64 %r27;
.reg .f64 %r32;
.reg .pred %r33;
.reg .f64 %r34;
mov.f64 %r32,%ar0;
.loc 1 72 4
div.rn.f64 %r25,%r32,0d400921fb54442d18;
.loc 1 73 5
setp.ge.f64 %r33,%r25,0d0000000000000000;
@ ! %r33 bra $L12;
.loc 1 74 5
add.f64 %r24,%r25,0d3fe0000000000000;
bra $L10;
$L12:
.loc 1 76 5
mov.f64 %r34,0d3fe0000000000000;
sub.f64 %r24,%r25,%r34;
$L10:
.loc 1 78 4
cvt.rzi.s64.f64 %r26,%r24;
.loc 1 79 4
cvt.rn.f64.s64 %r27,%r26;
.loc 1 80 10
fma.rn.f64 %r22,%r27,0dc00921fb54000000,%r32;
.loc 1 80 21
fma.rn.f64 %r23,%r27,0dbe210b4610000000,%r22;
.loc 1 80 4
fma.rn.f64 %value,%r27,0dbc6a62633145c06e,%r23;
.loc 1 82 1
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _ctans
.visible .func (.param .f64 %value_out) _ctans (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r70;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .pred %r74;
.reg .f64 %r75;
.reg .f64 %r78;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .pred %r82;
mov.f64 %r60,%ar0;
mov.f64 %r61,%ar1;
.loc 1 92 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r60;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r61;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r64,[%value_in];
}
.loc 1 92 6
add.f64 %r66,%r64,%r64;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r66;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r67,[%value_in];
}
.loc 1 93 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r60;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r61;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r70,[%value_in];
}
.loc 1 93 6
add.f64 %r72,%r70,%r70;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r72;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r73,[%value_in];
}
.loc 1 72 4
div.rn.f64 %r49,%r67,0d400921fb54442d18;
.loc 1 73 5
setp.ge.f64 %r74,%r49,0d0000000000000000;
@ ! %r74 bra $L20;
.loc 1 74 5
add.f64 %r50,%r49,0d3fe0000000000000;
bra $L16;
$L20:
.loc 1 76 5
mov.f64 %r75,0d3fe0000000000000;
sub.f64 %r50,%r49,%r75;
$L16:
.loc 1 78 4
cvt.rzi.s64.f64 %r51,%r50;
.loc 1 79 4
cvt.rn.f64.s64 %r52,%r51;
.loc 1 80 10
fma.rn.f64 %r53,%r52,0dc00921fb54000000,%r67;
.loc 1 80 21
fma.rn.f64 %r54,%r52,0dbe210b4610000000,%r53;
.loc 1 80 4
fma.rn.f64 %r55,%r52,0dbc6a62633145c06e,%r54;
.loc 1 97 4
mul.f64 %r34,%r55,%r55;
.loc 1 98 4
mul.f64 %r35,%r73,%r73;
.loc 1 103 4
mov.f64 %r59,0d0000000000000000;
.loc 1 102 5
mov.f64 %r31,%r59;
.loc 1 100 5
mov.f64 %r30,0d3ff0000000000000;
.loc 1 99 5
mov.f64 %r29,%r30;
.loc 1 101 4
mov.f64 %r28,%r30;
$L17:
.loc 1 105 6
add.f64 %r36,%r31,0d3ff0000000000000;
.loc 1 106 5
mul.f64 %r37,%r28,%r36;
.loc 1 107 6
add.f64 %r38,%r36,0d3ff0000000000000;
.loc 1 108 5
mul.f64 %r39,%r37,%r38;
.loc 1 109 6
mul.f64 %r40,%r29,%r34;
.loc 1 110 6
mul.f64 %r41,%r30,%r35;
.loc 1 111 5
add.f64 %r42,%r40,%r41;
.loc 1 112 5
div.rn.f64 %r78,%r42,%r39;
.loc 1 113 5
add.f64 %r44,%r78,%r59;
.loc 1 115 6
add.f64 %r45,%r38,0d3ff0000000000000;
.loc 1 116 5
mul.f64 %r46,%r39,%r45;
.loc 1 117 6
add.f64 %r31,%r45,0d3ff0000000000000;
.loc 1 118 5
mul.f64 %r28,%r46,%r31;
.loc 1 119 6
mul.f64 %r29,%r34,%r40;
.loc 1 120 6
mul.f64 %r30,%r35,%r41;
.loc 1 121 5
sub.f64 %r47,%r30,%r29;
.loc 1 122 5
div.rn.f64 %r48,%r47,%r28;
.loc 1 123 5
add.f64 %r59,%r44,%r48;
.loc 1 124 11
div.rn.f64 %r80,%r48,%r59;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r80;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r81,[%value_in];
}
.loc 1 124 2
setp.gt.f64 %r82,%r81,0d3c9fb49140a1644f;
@ %r82 bra $L17;
.loc 1 126 1
mov.f64 %value,%r59;
st.param.f64 [%value_out],%value;
ret;
}
/21             1612277260  0     0     100666  7830      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: _cchshf
.visible .func _cchshf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cephes_subrf.c"
// BEGIN GLOBAL FUNCTION DECL: _redupif
.visible .func (.param .f32 %value_out) _redupif (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctansf
.visible .func (.param .f32 %value_out) _ctansf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: coshf
.extern .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhf
.extern .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expf
.extern .func (.param .f32 %value_out) expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: _cchshf
.visible .func _cchshf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .f32 %r34;
.reg .pred %r35;
.reg .f32 %r37;
.reg .f32 %r39;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
mov.f32 %r30,%ar0;
mov.u64 %r31,%ar1;
mov.u64 %r32,%ar2;
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r34,[%value_in];
}
.loc 1 46 5
setp.le.f32 %r35,%r34,0f3f000000;
@ ! %r35 bra $L6;
.loc 1 47 8
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
call (%value_in),coshf,(%out_arg1);
ld.param.f32 %r37,[%value_in];
}
.loc 1 47 6
st.f32 [%r31],%r37;
.loc 1 48 8
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
call (%value_in),sinhf,(%out_arg1);
ld.param.f32 %r39,[%value_in];
}
.loc 1 48 6
st.f32 [%r32],%r39;
bra $L1;
$L6:
.loc 1 50 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
call (%value_in),expf,(%out_arg1);
ld.param.f32 %r41,[%value_in];
}
.loc 1 51 6
mov.f32 %r42,0f3f000000;
div.rn.f32 %r28,%r42,%r41;
.loc 1 53 10
neg.f32 %r43,%r28;
fma.rn.f32 %r25,%r41,0f3f000000,%r43;
.loc 1 53 6
st.f32 [%r32],%r25;
.loc 1 54 10
fma.rn.f32 %r26,%r41,0f3f000000,%r28;
.loc 1 54 6
st.f32 [%r31],%r26;
$L1:
.loc 1 56 1
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _redupif
.visible .func (.param .f32 %value_out) _redupif (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .u64 %r29;
.reg .f32 %r35;
.reg .pred %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f64 %r40;
mov.f32 %r35,%ar0;
.loc 1 72 4
div.rn.f32 %r28,%r35,0f40490fdb;
.loc 1 73 5
setp.ge.f32 %r36,%r28,0f00000000;
@ ! %r36 bra $L12;
.loc 1 74 5
add.f32 %r27,%r28,0f3f000000;
bra $L10;
$L12:
.loc 1 76 5
mov.f32 %r37,0f3f000000;
sub.f32 %r27,%r28,%r37;
$L10:
.loc 1 78 4
cvt.rzi.s64.f32 %r29,%r27;
.loc 1 79 4
cvt.rn.f32.s64 %r38,%r29;
.loc 1 80 14
cvt.f64.f32 %r23,%r38;
.loc 1 80 10
cvt.f64.f32 %r40,%r35;
fma.rn.f64 %r24,%r23,0dc009200000000000,%r40;
.loc 1 80 21
fma.rn.f64 %r25,%r23,0dbf4fb40000000000,%r24;
.loc 1 80 32
fma.rn.f64 %r26,%r23,0dbe84442d18469899,%r25;
.loc 1 80 4
cvt.rn.f32.f64 %value,%r26;
.loc 1 82 1
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _ctansf
.visible .func (.param .f32 %value_out) _ctansf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .u64 %r52;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f32 %r59;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r68;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r74;
.reg .f32 %r76;
.reg .f32 %r77;
.reg .pred %r78;
.reg .f32 %r79;
.reg .f32 %r80;
.reg .f64 %r82;
.reg .f32 %r85;
.reg .f32 %r87;
.reg .f32 %r88;
.reg .f64 %r89;
.reg .pred %r90;
mov.f32 %r64,%ar0;
mov.f32 %r65,%ar1;
.loc 1 91 19
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r64;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r65;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r68,[%value_in];
}
.loc 1 91 6
add.f32 %r70,%r68,%r68;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r70;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r71,[%value_in];
}
.loc 1 92 19
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r64;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r65;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r74,[%value_in];
}
.loc 1 92 6
add.f32 %r76,%r74,%r74;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r76;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r77,[%value_in];
}
.loc 1 72 4
div.rn.f32 %r50,%r71,0f40490fdb;
.loc 1 73 5
setp.ge.f32 %r78,%r50,0f00000000;
@ ! %r78 bra $L20;
.loc 1 74 5
add.f32 %r51,%r50,0f3f000000;
bra $L16;
$L20:
.loc 1 76 5
mov.f32 %r79,0f3f000000;
sub.f32 %r51,%r50,%r79;
$L16:
.loc 1 78 4
cvt.rzi.s64.f32 %r52,%r51;
.loc 1 79 4
cvt.rn.f32.s64 %r80,%r52;
.loc 1 80 14
cvt.f64.f32 %r55,%r80;
.loc 1 80 10
cvt.f64.f32 %r82,%r71;
fma.rn.f64 %r56,%r55,0dc009200000000000,%r82;
.loc 1 80 21
fma.rn.f64 %r57,%r55,0dbf4fb40000000000,%r56;
.loc 1 80 32
fma.rn.f64 %r58,%r55,0dbe84442d18469899,%r57;
.loc 1 80 4
cvt.rn.f32.f64 %r59,%r58;
.loc 1 96 4
mul.f32 %r35,%r59,%r59;
.loc 1 97 4
mul.f32 %r36,%r77,%r77;
.loc 1 102 4
mov.f32 %r63,0f00000000;
.loc 1 101 5
mov.f32 %r32,%r63;
.loc 1 99 5
mov.f32 %r31,0f3f800000;
.loc 1 98 5
mov.f32 %r30,%r31;
.loc 1 100 4
mov.f32 %r29,%r31;
$L17:
.loc 1 104 6
add.f32 %r37,%r32,0f3f800000;
.loc 1 105 5
mul.f32 %r38,%r29,%r37;
.loc 1 106 6
add.f32 %r39,%r37,0f3f800000;
.loc 1 107 5
mul.f32 %r40,%r38,%r39;
.loc 1 108 6
mul.f32 %r41,%r30,%r35;
.loc 1 109 6
mul.f32 %r42,%r31,%r36;
.loc 1 110 5
add.f32 %r43,%r41,%r42;
.loc 1 111 5
div.rn.f32 %r85,%r43,%r40;
.loc 1 112 5
add.f32 %r45,%r85,%r63;
.loc 1 114 6
add.f32 %r46,%r39,0f3f800000;
.loc 1 115 5
mul.f32 %r47,%r40,%r46;
.loc 1 116 6
add.f32 %r32,%r46,0f3f800000;
.loc 1 117 5
mul.f32 %r29,%r47,%r32;
.loc 1 118 6
mul.f32 %r30,%r35,%r41;
.loc 1 119 6
mul.f32 %r31,%r36,%r42;
.loc 1 120 5
sub.f32 %r48,%r31,%r30;
.loc 1 121 5
div.rn.f32 %r49,%r48,%r29;
.loc 1 122 5
add.f32 %r63,%r45,%r49;
.loc 1 123 11
div.rn.f32 %r87,%r49,%r63;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r87;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r88,[%value_in];
}
cvt.f64.f32 %r89,%r88;
.loc 1 123 2
setp.gt.f64 %r90,%r89,0d3e601b2b29a4692b;
@ %r90 bra $L17;
.loc 1 125 1
mov.f32 %value,%r63;
st.param.f32 [%value_out],%value;
ret;
}
/43             1612277260  0     0     100666  7628      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: _cchshl
.visible .func _cchshl (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cephes_subrl.c"
// BEGIN GLOBAL FUNCTION DECL: _redupil
.visible .func (.param .f64 %value_out) _redupil (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctansl
.visible .func (.param .f64 %value_out) _ctansl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsl
.extern .func (.param .f64 %value_out) fabsl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: coshl
.extern .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhl
.extern .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expl
.extern .func (.param .f64 %value_out) expl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: _cchshl
.visible .func _cchshl (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .f64 %r34;
.reg .pred %r35;
.reg .f64 %r37;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
mov.f64 %r30,%ar0;
mov.u64 %r31,%ar1;
mov.u64 %r32,%ar2;
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r34,[%value_in];
}
.loc 1 43 5
setp.le.f64 %r35,%r34,0d3fe0000000000000;
@ ! %r35 bra $L6;
.loc 1 44 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),coshl,(%out_arg1);
ld.param.f64 %r37,[%value_in];
}
.loc 1 44 6
st.f64 [%r31],%r37;
.loc 1 45 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),sinhl,(%out_arg1);
ld.param.f64 %r39,[%value_in];
}
.loc 1 45 6
st.f64 [%r32],%r39;
bra $L1;
$L6:
.loc 1 47 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),expl,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 48 6
mov.f64 %r42,0d3fe0000000000000;
div.rn.f64 %r28,%r42,%r41;
.loc 1 50 10
neg.f64 %r43,%r28;
fma.rn.f64 %r25,%r41,0d3fe0000000000000,%r43;
.loc 1 50 6
st.f64 [%r32],%r25;
.loc 1 51 10
fma.rn.f64 %r26,%r41,0d3fe0000000000000,%r28;
.loc 1 51 6
st.f64 [%r31],%r26;
$L1:
.loc 1 53 1
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _redupil
.visible .func (.param .f64 %value_out) _redupil (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .u64 %r26;
.reg .f64 %r27;
.reg .f64 %r32;
.reg .pred %r33;
.reg .f64 %r34;
mov.f64 %r32,%ar0;
.loc 1 74 4
div.rn.f64 %r25,%r32,0d400921fb54442d18;
.loc 1 75 5
setp.ge.f64 %r33,%r25,0d0000000000000000;
@ ! %r33 bra $L12;
.loc 1 76 5
add.f64 %r24,%r25,0d3fe0000000000000;
bra $L10;
$L12:
.loc 1 78 5
mov.f64 %r34,0d3fe0000000000000;
sub.f64 %r24,%r25,%r34;
$L10:
.loc 1 80 4
cvt.rzi.s64.f64 %r26,%r24;
.loc 1 81 4
cvt.rn.f64.s64 %r27,%r26;
.loc 1 82 10
fma.rn.f64 %r22,%r27,0dc00921fb54442d18,%r32;
.loc 1 82 21
fma.rn.f64 %r23,%r27,0dbc0898cc51701b84,%r22;
.loc 1 82 4
fma.rn.f64 %value,%r27,0db7e48127044533e6,%r23;
.loc 1 84 1
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: _ctansl
.visible .func (.param .f64 %value_out) _ctansl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r70;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .pred %r74;
.reg .f64 %r75;
.reg .f64 %r78;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .pred %r82;
mov.f64 %r60,%ar0;
mov.f64 %r61,%ar1;
.loc 1 94 19
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r60;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r61;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r64,[%value_in];
}
.loc 1 94 6
add.f64 %r66,%r64,%r64;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r66;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r67,[%value_in];
}
.loc 1 95 19
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r60;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r61;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r70,[%value_in];
}
.loc 1 95 6
add.f64 %r72,%r70,%r70;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r72;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r73,[%value_in];
}
.loc 1 74 4
div.rn.f64 %r49,%r67,0d400921fb54442d18;
.loc 1 75 5
setp.ge.f64 %r74,%r49,0d0000000000000000;
@ ! %r74 bra $L20;
.loc 1 76 5
add.f64 %r50,%r49,0d3fe0000000000000;
bra $L16;
$L20:
.loc 1 78 5
mov.f64 %r75,0d3fe0000000000000;
sub.f64 %r50,%r49,%r75;
$L16:
.loc 1 80 4
cvt.rzi.s64.f64 %r51,%r50;
.loc 1 81 4
cvt.rn.f64.s64 %r52,%r51;
.loc 1 82 10
fma.rn.f64 %r53,%r52,0dc00921fb54442d18,%r67;
.loc 1 82 21
fma.rn.f64 %r54,%r52,0dbc0898cc51701b84,%r53;
.loc 1 82 4
fma.rn.f64 %r55,%r52,0db7e48127044533e6,%r54;
.loc 1 99 4
mul.f64 %r34,%r55,%r55;
.loc 1 100 4
mul.f64 %r35,%r73,%r73;
.loc 1 105 4
mov.f64 %r59,0d0000000000000000;
.loc 1 104 5
mov.f64 %r31,%r59;
.loc 1 102 5
mov.f64 %r30,0d3ff0000000000000;
.loc 1 101 5
mov.f64 %r29,%r30;
.loc 1 103 4
mov.f64 %r28,%r30;
$L17:
.loc 1 107 6
add.f64 %r36,%r31,0d3ff0000000000000;
.loc 1 108 5
mul.f64 %r37,%r28,%r36;
.loc 1 109 6
add.f64 %r38,%r36,0d3ff0000000000000;
.loc 1 110 5
mul.f64 %r39,%r37,%r38;
.loc 1 111 6
mul.f64 %r40,%r29,%r34;
.loc 1 112 6
mul.f64 %r41,%r30,%r35;
.loc 1 113 5
add.f64 %r42,%r40,%r41;
.loc 1 114 5
div.rn.f64 %r78,%r42,%r39;
.loc 1 115 5
add.f64 %r44,%r78,%r59;
.loc 1 117 6
add.f64 %r45,%r38,0d3ff0000000000000;
.loc 1 118 5
mul.f64 %r46,%r39,%r45;
.loc 1 119 6
add.f64 %r31,%r45,0d3ff0000000000000;
.loc 1 120 5
mul.f64 %r28,%r46,%r31;
.loc 1 121 6
mul.f64 %r29,%r34,%r40;
.loc 1 122 6
mul.f64 %r30,%r35,%r41;
.loc 1 123 5
sub.f64 %r47,%r30,%r29;
.loc 1 124 5
div.rn.f64 %r48,%r47,%r28;
.loc 1 125 5
add.f64 %r59,%r44,%r48;
.loc 1 126 11
div.rn.f64 %r80,%r48,%r59;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r80;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r81,[%value_in];
}
.loc 1 126 2
setp.gt.f64 %r82,%r81,0d380df1e193d51e95;
@ %r82 bra $L17;
.loc 1 128 1
mov.f64 %value,%r59;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-cexp.o/   1612277260  0     0     100666  2508      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cexp
.visible .func cexp (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cexp.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: exp
.extern .func (.param .f64 %value_out) exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: cexp
.visible .func cexp (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r29;
.reg .u64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r35;
.reg .f64 %r38;
.reg .f64 %r40;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r45;
mov.u64 %r30,%ar0;
mov.f64 %r31,%ar1;
mov.f64 %r32,%ar2;
.loc 1 77 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r35,[%value_in];
}
.loc 1 78 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
.loc 1 79 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
call (%value_in),exp,(%out_arg1);
ld.param.f64 %r40,[%value_in];
}
.loc 1 80 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r42,[%value_in];
}
.loc 1 80 21
mul.f64 %r29,%r42,%r40;
.loc 1 80 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r44,[%value_in];
}
.loc 1 80 17
mul.f64 %r45,%r29,0d0000000000000000;
fma.rn.f64 %r25,%r44,%r40,%r45;
.loc 1 81 9
st.f64 [%r30],%r25;
st.f64 [%r30+8],%r29;
.loc 1 82 1
ret;
}
lib_a-cexpf.o/  1612277260  0     0     100666  2520      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cexpf
.visible .func cexpf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cexpf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: expf
.extern .func (.param .f32 %value_out) expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: cexpf
.visible .func cexpf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r25;
.reg .f32 %r29;
.reg .u64 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r35;
.reg .f32 %r38;
.reg .f32 %r40;
.reg .f32 %r42;
.reg .f32 %r44;
.reg .f32 %r45;
mov.u64 %r30,%ar0;
mov.f32 %r31,%ar1;
mov.f32 %r32,%ar2;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r31;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r32;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r35,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r31;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r32;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r38,[%value_in];
}
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
call (%value_in),expf,(%out_arg1);
ld.param.f32 %r40,[%value_in];
}
.loc 1 47 24
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r42,[%value_in];
}
.loc 1 47 22
mul.f32 %r29,%r42,%r40;
.loc 1 47 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r44,[%value_in];
}
.loc 1 47 18
mul.f32 %r45,%r29,0f00000000;
fma.rn.f32 %r25,%r44,%r40,%r45;
.loc 1 48 9
st.f32 [%r30],%r25;
st.f32 [%r30+4],%r29;
.loc 1 49 1
ret;
}
lib_a-cexpl.o/  1612277260  0     0     100666  2528      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cexpl
.visible .func cexpl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cexpl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: expl
.extern .func (.param .f64 %value_out) expl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: cexpl
.visible .func cexpl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r29;
.reg .u64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r35;
.reg .f64 %r38;
.reg .f64 %r40;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r45;
mov.u64 %r30,%ar0;
mov.f64 %r31,%ar1;
mov.f64 %r32,%ar2;
.loc 1 41 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r35,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
call (%value_in),expl,(%out_arg1);
ld.param.f64 %r40,[%value_in];
}
.loc 1 44 24
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r42,[%value_in];
}
.loc 1 44 22
mul.f64 %r29,%r42,%r40;
.loc 1 44 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r44,[%value_in];
}
.loc 1 44 18
mul.f64 %r45,%r29,0d0000000000000000;
fma.rn.f64 %r25,%r44,%r40,%r45;
.loc 1 45 9
st.f64 [%r30],%r25;
st.f64 [%r30+8],%r29;
.loc 1 46 1
ret;
}
lib_a-cimag.o/  1612277260  0     0     100666  588       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cimag
.visible .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cimag.c"
// BEGIN GLOBAL FUNCTION DEF: cimag
.visible .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
mov.f64 %value,%ar1;
.loc 1 59 1
st.param.f64 [%value_out],%value;
ret;
}
lib_a-cimagf.o/ 1612277260  0     0     100666  593       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cimagf
.visible .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cimagf.c"
// BEGIN GLOBAL FUNCTION DEF: cimagf
.visible .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
mov.f32 %value,%ar1;
.loc 1 20 1
st.param.f32 [%value_out],%value;
ret;
}

lib_a-cimagl.o/ 1612277260  0     0     100666  593       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cimagl
.visible .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/cimagl.c"
// BEGIN GLOBAL FUNCTION DEF: cimagl
.visible .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
mov.f64 %value,%ar1;
.loc 1 16 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-clog.o/   1612277260  0     0     100666  2564      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: clog
.visible .func clog (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/clog.c"
// BEGIN GLOBAL FUNCTION DECL: cabs
.extern .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2
.extern .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: clog
.visible .func clog (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r24;
.reg .u64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r33;
.reg .f64 %r35;
.reg .f64 %r38;
.reg .f64 %r41;
.reg .f64 %r44;
mov.u64 %r28,%ar0;
mov.f64 %r29,%ar1;
mov.f64 %r30,%ar2;
.loc 1 86 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cabs,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
.loc 1 87 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r35,[%value_in];
}
.loc 1 88 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r41,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r41;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r38;
call (%value_in),atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 89 8
fma.rn.f64 %r24,%r44,0d0000000000000000,%r35;
.loc 1 90 9
st.f64 [%r28],%r24;
st.f64 [%r28+8],%r44;
.loc 1 91 1
ret;
}
lib_a-clog10.o/ 1612277260  0     0     100666  2649      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: clog10
.visible .func clog10 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/clog10.c"
// BEGIN GLOBAL FUNCTION DECL: cabs
.extern .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: log10
.extern .func (.param .f64 %value_out) log10 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2
.extern .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: clog10
.visible .func clog10 (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r28;
.reg .u64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r34;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r42;
.reg .f64 %r45;
mov.u64 %r29,%ar0;
mov.f64 %r30,%ar1;
mov.f64 %r31,%ar2;
.loc 1 41 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r31;
call (%value_in),cabs,(%out_arg1,%out_arg2);
ld.param.f64 %r34,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r34;
call (%value_in),log10,(%out_arg1);
ld.param.f64 %r36,[%value_in];
}
.loc 1 43 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r31;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r31;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r45,[%value_in];
}
.loc 1 43 5
mul.f64 %r28,%r45,0d3fdbcb7b1526e50e;
.loc 1 44 8
fma.rn.f64 %r25,%r28,0d0000000000000000,%r36;
.loc 1 45 9
st.f64 [%r29],%r25;
st.f64 [%r29+8],%r28;
.loc 1 46 1
ret;
}

lib_a-clog10f.o/1612277260  0     0     100666  2653      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: clog10f
.visible .func clog10f (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/clog10f.c"
// BEGIN GLOBAL FUNCTION DECL: cabsf
.extern .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: log10f
.extern .func (.param .f32 %value_out) log10f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2f
.extern .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: clog10f
.visible .func clog10f (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r25;
.reg .f32 %r28;
.reg .u64 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r34;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r42;
.reg .f32 %r45;
mov.u64 %r29,%ar0;
mov.f32 %r30,%ar1;
mov.f32 %r31,%ar2;
.loc 1 10 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r31;
call (%value_in),cabsf,(%out_arg1,%out_arg2);
ld.param.f32 %r34,[%value_in];
}
.loc 1 11 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r34;
call (%value_in),log10f,(%out_arg1);
ld.param.f32 %r36,[%value_in];
}
.loc 1 12 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r31;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r31;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r42,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r39;
call (%value_in),atan2f,(%out_arg1,%out_arg2);
ld.param.f32 %r45,[%value_in];
}
.loc 1 12 5
mul.f32 %r28,%r45,0f3ede5bd9;
.loc 1 13 8
fma.rn.f32 %r25,%r28,0f00000000,%r36;
.loc 1 14 9
st.f32 [%r29],%r25;
st.f32 [%r29+4],%r28;
.loc 1 15 1
ret;
}

lib_a-clogf.o/  1612277260  0     0     100666  2576      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: clogf
.visible .func clogf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/clogf.c"
// BEGIN GLOBAL FUNCTION DECL: cabsf
.extern .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: logf
.extern .func (.param .f32 %value_out) logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2f
.extern .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: clogf
.visible .func clogf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r24;
.reg .u64 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r33;
.reg .f32 %r35;
.reg .f32 %r38;
.reg .f32 %r41;
.reg .f32 %r44;
mov.u64 %r28,%ar0;
mov.f32 %r29,%ar1;
mov.f32 %r30,%ar2;
.loc 1 44 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),cabsf,(%out_arg1,%out_arg2);
ld.param.f32 %r33,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
call (%value_in),logf,(%out_arg1);
ld.param.f32 %r35,[%value_in];
}
.loc 1 46 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r38,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r41,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r41;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r38;
call (%value_in),atan2f,(%out_arg1,%out_arg2);
ld.param.f32 %r44,[%value_in];
}
.loc 1 47 8
fma.rn.f32 %r24,%r44,0f00000000,%r35;
.loc 1 48 9
st.f32 [%r28],%r24;
st.f32 [%r28+4],%r44;
.loc 1 49 1
ret;
}
lib_a-clogl.o/  1612277260  0     0     100666  2584      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: clogl
.visible .func clogl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/clogl.c"
// BEGIN GLOBAL FUNCTION DECL: cabsl
.extern .func (.param .f64 %value_out) cabsl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: logl
.extern .func (.param .f64 %value_out) logl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: atan2l
.extern .func (.param .f64 %value_out) atan2l (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: clogl
.visible .func clogl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r24;
.reg .u64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r33;
.reg .f64 %r35;
.reg .f64 %r38;
.reg .f64 %r41;
.reg .f64 %r44;
mov.u64 %r28,%ar0;
mov.f64 %r29,%ar1;
mov.f64 %r30,%ar2;
.loc 1 41 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cabsl,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),logl,(%out_arg1);
ld.param.f64 %r35,[%value_in];
}
.loc 1 43 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r38,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r41,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r41;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r38;
call (%value_in),atan2l,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 44 8
fma.rn.f64 %r24,%r44,0d0000000000000000,%r35;
.loc 1 45 9
st.f64 [%r28],%r24;
st.f64 [%r28+8],%r44;
.loc 1 46 1
ret;
}
lib_a-conj.o/   1612277260  0     0     100666  856       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: conj
.visible .func conj (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/conj.c"
// BEGIN GLOBAL FUNCTION DEF: conj
.visible .func conj (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
mov.u64 %r26,%ar0;
mov.f64 %r27,%ar1;
mov.f64 %r28,%ar2;
.loc 1 52 17
neg.f64 %r29,%r28;
.loc 1 54 11
st.f64 [%r26],%r27;
st.f64 [%r26+8],%r29;
.loc 1 55 1
ret;
}
lib_a-conjf.o/  1612277260  0     0     100666  861       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: conjf
.visible .func conjf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/conjf.c"
// BEGIN GLOBAL FUNCTION DEF: conjf
.visible .func conjf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
mov.u64 %r26,%ar0;
mov.f32 %r27,%ar1;
mov.f32 %r28,%ar2;
.loc 1 19 17
neg.f32 %r29,%r28;
.loc 1 21 11
st.f32 [%r26],%r27;
st.f32 [%r26+4],%r29;
.loc 1 22 1
ret;
}

lib_a-conjl.o/  1612277260  0     0     100666  861       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: conjl
.visible .func conjl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/conjl.c"
// BEGIN GLOBAL FUNCTION DEF: conjl
.visible .func conjl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
mov.u64 %r26,%ar0;
mov.f64 %r27,%ar1;
mov.f64 %r28,%ar2;
.loc 1 43 17
neg.f64 %r29,%r28;
.loc 1 45 11
st.f64 [%r26],%r27;
st.f64 [%r26+8],%r29;
.loc 1 46 1
ret;
}

/65             1612277260  0     0     100666  705       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: copysignl
.visible .func (.param .f64 %value_out) copysignl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/copysignl.c"
// BEGIN GLOBAL FUNCTION DEF: copysignl
.visible .func (.param .f64 %value_out) copysignl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
copysign.f64 %value,%r24,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-cosf.o/   1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-coshl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: coshl
.visible .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/coshl.c"
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: coshl
.visible .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-cosl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cosl
.visible .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/cosl.c"
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: cosl
.visible .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-cpow.o/   1612277260  0     0     100666  4868      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: cpow
.visible .func cpow (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
.file 1 "../../../../../newlib/libm/complex/cpow.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cabs
.extern .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: carg
.extern .func (.param .f64 %value_out) carg (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: pow
.extern .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: exp
.extern .func (.param .f64 %value_out) exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{0,0 };
// BEGIN GLOBAL FUNCTION DEF: cpow
.visible .func cpow (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %ar3;
ld.param.f64 %ar3,[%in_ar3];
.reg .f64 %ar4;
ld.param.f64 %ar4,[%in_ar4];
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r36;
.reg .u64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .pred %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r56;
.reg .f64 %r59;
.reg .pred %r60;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r66;
.reg .f64 %r68;
.reg .f64 %r70;
.reg .f64 %r71;
mov.u64 %r37,%ar0;
mov.f64 %r38,%ar1;
mov.f64 %r39,%ar2;
mov.f64 %r40,%ar3;
mov.f64 %r41,%ar4;
.loc 1 86 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 87 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r47,[%value_in];
}
.loc 1 88 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),cabs,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
.loc 1 89 5
setp.neu.f64 %r51,%r50,0d0000000000000000;
@ %r51 bra $L2;
.loc 1 90 15
ld.const.f64 %r52,[$LC0];
st.f64 [%r37],%r52;
ld.const.f64 %r53,[$LC0+8];
st.f64 [%r37+8],%r53;
bra $L1;
$L2:
.loc 1 92 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),carg,(%out_arg1,%out_arg2);
ld.param.f64 %r56,[%value_in];
}
.loc 1 93 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r44;
call (%value_in),pow,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
mov.f64 %r30,%r59;
.loc 1 94 8
mul.f64 %r31,%r44,%r56;
.loc 1 95 5
setp.eq.f64 %r60,%r47,0d0000000000000000;
@ %r60 bra $L4;
.loc 1 96 15
neg.f64 %r62,%r47;
.loc 1 96 11
mul.f64 %r63,%r62,%r56;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),exp,(%out_arg1);
ld.param.f64 %r64,[%value_in];
}
.loc 1 96 5
mul.f64 %r30,%r30,%r64;
.loc 1 97 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r66,[%value_in];
}
.loc 1 97 9
fma.rn.f64 %r31,%r66,%r47,%r31;
$L4:
.loc 1 99 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 99 26
mul.f64 %r36,%r68,%r30;
.loc 1 99 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r70,[%value_in];
}
.loc 1 99 21
mul.f64 %r71,%r36,0d0000000000000000;
fma.rn.f64 %r29,%r70,%r30,%r71;
.loc 1 100 9
st.f64 [%r37],%r29;
st.f64 [%r37+8],%r36;
$L1:
.loc 1 101 1
ret;
}
lib_a-cpowf.o/  1612277260  0     0     100666  4874      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: cpowf
.visible .func cpowf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4);
.file 1 "../../../../../newlib/libm/complex/cpowf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cabsf
.extern .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cargf
.extern .func (.param .f32 %value_out) cargf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: powf
.extern .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: expf
.extern .func (.param .f32 %value_out) expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: logf
.extern .func (.param .f32 %value_out) logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 4 .u32 $LC0[2] =
{0,0 };
// BEGIN GLOBAL FUNCTION DEF: cpowf
.visible .func cpowf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2, .param .f32 %in_ar3, .param .f32 %in_ar4)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %ar3;
ld.param.f32 %ar3,[%in_ar3];
.reg .f32 %ar4;
ld.param.f32 %ar4,[%in_ar4];
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r36;
.reg .u64 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r44;
.reg .f32 %r47;
.reg .f32 %r50;
.reg .pred %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r56;
.reg .f32 %r59;
.reg .pred %r60;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r66;
.reg .f32 %r68;
.reg .f32 %r70;
.reg .f32 %r71;
mov.u64 %r37,%ar0;
mov.f32 %r38,%ar1;
mov.f32 %r39,%ar2;
mov.f32 %r40,%ar3;
mov.f32 %r41,%ar4;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r44,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r47,[%value_in];
}
.loc 1 46 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r39;
call (%value_in),cabsf,(%out_arg1,%out_arg2);
ld.param.f32 %r50,[%value_in];
}
.loc 1 47 5
setp.neu.f32 %r51,%r50,0f00000000;
@ %r51 bra $L2;
.loc 1 48 16
ld.const.f32 %r52,[$LC0];
st.f32 [%r37],%r52;
ld.const.f32 %r53,[$LC0+4];
st.f32 [%r37+4],%r53;
bra $L1;
$L2:
.loc 1 50 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r39;
call (%value_in),cargf,(%out_arg1,%out_arg2);
ld.param.f32 %r56,[%value_in];
}
.loc 1 51 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r44;
call (%value_in),powf,(%out_arg1,%out_arg2);
ld.param.f32 %r59,[%value_in];
}
mov.f32 %r30,%r59;
.loc 1 52 8
mul.f32 %r31,%r44,%r56;
.loc 1 53 5
setp.eq.f32 %r60,%r47,0f00000000;
@ %r60 bra $L4;
.loc 1 54 16
neg.f32 %r62,%r47;
.loc 1 54 11
mul.f32 %r63,%r62,%r56;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r63;
call (%value_in),expf,(%out_arg1);
ld.param.f32 %r64,[%value_in];
}
.loc 1 54 5
mul.f32 %r30,%r30,%r64;
.loc 1 55 23
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
call (%value_in),logf,(%out_arg1);
ld.param.f32 %r66,[%value_in];
}
.loc 1 55 9
fma.rn.f32 %r31,%r66,%r47,%r31;
$L4:
.loc 1 57 29
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r31;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r68,[%value_in];
}
.loc 1 57 27
mul.f32 %r36,%r68,%r30;
.loc 1 57 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r31;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r70,[%value_in];
}
.loc 1 57 22
mul.f32 %r71,%r36,0f00000000;
fma.rn.f32 %r29,%r70,%r30,%r71;
.loc 1 58 9
st.f32 [%r37],%r29;
st.f32 [%r37+4],%r36;
$L1:
.loc 1 59 1
ret;
}
lib_a-cpowl.o/  1612277260  0     0     100666  4898      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: cpowl
.visible .func cpowl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4);
.file 1 "../../../../../newlib/libm/complex/cpowl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cabsl
.extern .func (.param .f64 %value_out) cabsl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cargl
.extern .func (.param .f64 %value_out) cargl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: powl
.extern .func (.param .f64 %value_out) powl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: expl
.extern .func (.param .f64 %value_out) expl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: logl
.extern .func (.param .f64 %value_out) logl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{0,0 };
// BEGIN GLOBAL FUNCTION DEF: cpowl
.visible .func cpowl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2, .param .f64 %in_ar3, .param .f64 %in_ar4)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %ar3;
ld.param.f64 %ar3,[%in_ar3];
.reg .f64 %ar4;
ld.param.f64 %ar4,[%in_ar4];
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r36;
.reg .u64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .pred %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r56;
.reg .f64 %r59;
.reg .pred %r60;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r66;
.reg .f64 %r68;
.reg .f64 %r70;
.reg .f64 %r71;
mov.u64 %r37,%ar0;
mov.f64 %r38,%ar1;
mov.f64 %r39,%ar2;
mov.f64 %r40,%ar3;
mov.f64 %r41,%ar4;
.loc 1 41 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r47,[%value_in];
}
.loc 1 43 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),cabsl,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
.loc 1 44 5
setp.neu.f64 %r51,%r50,0d0000000000000000;
@ %r51 bra $L2;
.loc 1 45 16
ld.const.f64 %r52,[$LC0];
st.f64 [%r37],%r52;
ld.const.f64 %r53,[$LC0+8];
st.f64 [%r37+8],%r53;
bra $L1;
$L2:
.loc 1 47 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),cargl,(%out_arg1,%out_arg2);
ld.param.f64 %r56,[%value_in];
}
.loc 1 48 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r44;
call (%value_in),powl,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
mov.f64 %r30,%r59;
.loc 1 49 8
mul.f64 %r31,%r44,%r56;
.loc 1 50 5
setp.eq.f64 %r60,%r47,0d0000000000000000;
@ %r60 bra $L4;
.loc 1 51 16
neg.f64 %r62,%r47;
.loc 1 51 11
mul.f64 %r63,%r62,%r56;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),expl,(%out_arg1);
ld.param.f64 %r64,[%value_in];
}
.loc 1 51 5
mul.f64 %r30,%r30,%r64;
.loc 1 52 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),logl,(%out_arg1);
ld.param.f64 %r66,[%value_in];
}
.loc 1 52 9
fma.rn.f64 %r31,%r66,%r47,%r31;
$L4:
.loc 1 54 29
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 54 27
mul.f64 %r36,%r68,%r30;
.loc 1 54 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r70,[%value_in];
}
.loc 1 54 22
mul.f64 %r71,%r36,0d0000000000000000;
fma.rn.f64 %r29,%r70,%r30,%r71;
.loc 1 55 9
st.f64 [%r37],%r29;
st.f64 [%r37+8],%r36;
$L1:
.loc 1 56 1
ret;
}
lib_a-cproj.o/  1612277260  0     0     100666  2685      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cproj
.visible .func cproj (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cproj.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: copysign
.extern .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cproj
.visible .func cproj (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .pred %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r42;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .pred %r47;
mov.u64 %r28,%ar0;
mov.f64 %r29,%ar1;
mov.f64 %r30,%ar2;
.loc 1 96 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
abs.f64 %r34,%r33;
.loc 1 96 5
setp.leu.f64 %r35,%r34,0d7fefffffffffffff;
@ %r35 bra $L2;
$L4:
.loc 1 100 16
mov.f64 %r36,0d7ff0000000000000;
st.f64 [%frame],%r36;
.loc 1 102 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
mov.f64 %r40,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),copysign,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
.loc 1 105 11
ld.f64 %r29,[%frame];
mov.f64 %r30,%r42;
bra $L3;
$L2:
.loc 1 96 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r45,[%value_in];
}
abs.f64 %r46,%r45;
.loc 1 96 5
setp.leu.f64 %r47,%r46,0d7fefffffffffffff;
@ ! %r47 bra $L4;
$L3:
.loc 1 105 11
st.f64 [%r28],%r29;
st.f64 [%r28+8],%r30;
.loc 1 106 1
ret;
}

lib_a-cprojf.o/ 1612277260  0     0     100666  2663      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cprojf
.visible .func cprojf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cprojf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: copysignf
.extern .func (.param .f32 %value_out) copysignf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cprojf
.visible .func cprojf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .pred %r35;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r42;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .pred %r47;
mov.u64 %r28,%ar0;
mov.f32 %r29,%ar1;
mov.f32 %r30,%ar2;
.loc 1 58 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r33,[%value_in];
}
abs.f32 %r34,%r33;
.loc 1 58 5
setp.leu.f32 %r35,%r34,0f7f7fffff;
@ %r35 bra $L2;
$L4:
.loc 1 62 16
mov.f32 %r36,0f7f800000;
st.f32 [%frame],%r36;
.loc 1 64 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
mov.f32 %r40,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r39;
call (%value_in),copysignf,(%out_arg1,%out_arg2);
ld.param.f32 %r42,[%value_in];
}
.loc 1 67 11
ld.f32 %r29,[%frame];
mov.f32 %r30,%r42;
bra $L3;
$L2:
.loc 1 58 26
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r30;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r45,[%value_in];
}
abs.f32 %r46,%r45;
.loc 1 58 5
setp.leu.f32 %r47,%r46,0f7f7fffff;
@ ! %r47 bra $L4;
$L3:
.loc 1 67 11
st.f32 [%r28],%r29;
st.f32 [%r28+4],%r30;
.loc 1 68 1
ret;
}

lib_a-cprojl.o/ 1612277260  0     0     100666  2695      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cprojl
.visible .func cprojl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/cprojl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: copysignl
.extern .func (.param .f64 %value_out) copysignl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: cprojl
.visible .func cprojl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .pred %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r42;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .pred %r47;
mov.u64 %r28,%ar0;
mov.f64 %r29,%ar1;
mov.f64 %r30,%ar2;
.loc 1 54 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
abs.f64 %r34,%r33;
.loc 1 54 5
setp.leu.f64 %r35,%r34,0d7fefffffffffffff;
@ %r35 bra $L2;
$L4:
.loc 1 58 16
mov.f64 %r36,0d7ff0000000000000;
st.f64 [%frame],%r36;
.loc 1 60 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
mov.f64 %r40,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r39;
call (%value_in),copysignl,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
.loc 1 63 11
ld.f64 %r29,[%frame];
mov.f64 %r30,%r42;
bra $L3;
$L2:
.loc 1 54 26
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r30;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r45,[%value_in];
}
abs.f64 %r46,%r45;
.loc 1 54 5
setp.leu.f64 %r47,%r46,0d7fefffffffffffff;
@ ! %r47 bra $L4;
$L3:
.loc 1 63 11
st.f64 [%r28],%r29;
st.f64 [%r28+8],%r30;
.loc 1 64 1
ret;
}

lib_a-creal.o/  1612277260  0     0     100666  588       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: creal
.visible .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/creal.c"
// BEGIN GLOBAL FUNCTION DEF: creal
.visible .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
mov.f64 %value,%ar0;
.loc 1 59 1
st.param.f64 [%value_out],%value;
ret;
}
lib_a-crealf.o/ 1612277260  0     0     100666  593       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: crealf
.visible .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/crealf.c"
// BEGIN GLOBAL FUNCTION DEF: crealf
.visible .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
mov.f32 %value,%ar0;
.loc 1 20 1
st.param.f32 [%value_out],%value;
ret;
}

lib_a-creall.o/ 1612277260  0     0     100666  593       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: creall
.visible .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/complex/creall.c"
// BEGIN GLOBAL FUNCTION DEF: creall
.visible .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
mov.f64 %value,%ar0;
.loc 1 16 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-csin.o/   1612277260  0     0     100666  3007      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csin
.visible .func csin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csin.c"
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchsh
.extern .func _cchsh (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csin
.visible .func csin (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .u64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r37;
.reg .u64 %r41;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
mov.u64 %r32,%ar0;
mov.f64 %r33,%ar1;
mov.f64 %r34,%ar2;
.loc 1 78 2
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r37,[%value_in];
}
add.u64 %r41,%frame,8;
{
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r37;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r41;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchsh,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 79 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r46,[%value_in];
}
.loc 1 79 42
ld.f64 %r47,[%frame];
mul.f64 %r31,%r46,%r47;
.loc 1 79 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r52,[%value_in];
}
.loc 1 79 25
mul.f64 %r53,%r31,0d0000000000000000;
ld.f64 %r54,[%frame+8];
fma.rn.f64 %r30,%r52,%r54,%r53;
.loc 1 80 9
st.f64 [%r32],%r30;
st.f64 [%r32+8],%r31;
.loc 1 81 1
ret;
}

lib_a-csinf.o/  1612277260  0     0     100666  3020      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csinf
.visible .func csinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csinf.c"
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchshf
.extern .func _cchshf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csinf
.visible .func csinf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .u64 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r37;
.reg .u64 %r41;
.reg .f32 %r44;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r50;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
mov.u64 %r32,%ar0;
mov.f32 %r33,%ar1;
mov.f32 %r34,%ar2;
.loc 1 45 2
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r37,[%value_in];
}
add.u64 %r41,%frame,4;
{
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r37;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r41;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchshf,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 46 30
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r44,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r44;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r46,[%value_in];
}
.loc 1 46 46
ld.f32 %r47,[%frame];
mul.f32 %r31,%r46,%r47;
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r50,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r52,[%value_in];
}
.loc 1 46 27
mul.f32 %r53,%r31,0f00000000;
ld.f32 %r54,[%frame+4];
fma.rn.f32 %r30,%r52,%r54,%r53;
.loc 1 47 9
st.f32 [%r32],%r30;
st.f32 [%r32+4],%r31;
.loc 1 48 1
ret;
}
lib_a-csinh.o/  1612277260  0     0     100666  2806      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csinh
.visible .func csinh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csinh.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csinh
.visible .func csinh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r27;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r47;
.reg .f64 %r48;
mov.u64 %r31,%ar0;
mov.f64 %r32,%ar1;
mov.f64 %r33,%ar2;
.loc 1 76 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r36,[%value_in];
}
.loc 1 77 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 78 26
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 78 36
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r43,[%value_in];
}
.loc 1 78 34
mul.f64 %r30,%r41,%r43;
.loc 1 78 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r45,[%value_in];
}
.loc 1 78 16
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 78 23
mul.f64 %r48,%r30,0d0000000000000000;
fma.rn.f64 %r27,%r45,%r47,%r48;
.loc 1 79 9
st.f64 [%r31],%r27;
st.f64 [%r31+8],%r30;
.loc 1 80 1
ret;
}
lib_a-csinhf.o/ 1612277260  0     0     100666  2821      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csinhf
.visible .func csinhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csinhf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshf
.extern .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhf
.extern .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csinhf
.visible .func csinhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r27;
.reg .f32 %r30;
.reg .u64 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r41;
.reg .f32 %r43;
.reg .f32 %r45;
.reg .f32 %r47;
.reg .f32 %r48;
mov.u64 %r31,%ar0;
mov.f32 %r32,%ar1;
mov.f32 %r33,%ar2;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r33;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r36,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r33;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
.loc 1 46 28
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r36;
call (%value_in),coshf,(%out_arg1);
ld.param.f32 %r41,[%value_in];
}
.loc 1 46 39
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r43,[%value_in];
}
.loc 1 46 37
mul.f32 %r30,%r41,%r43;
.loc 1 46 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r36;
call (%value_in),sinhf,(%out_arg1);
ld.param.f32 %r45,[%value_in];
}
.loc 1 46 17
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r47,[%value_in];
}
.loc 1 46 25
mul.f32 %r48,%r30,0f00000000;
fma.rn.f32 %r27,%r45,%r47,%r48;
.loc 1 47 9
st.f32 [%r31],%r27;
st.f32 [%r31+4],%r30;
.loc 1 48 1
ret;
}

lib_a-csinhl.o/ 1612277260  0     0     100666  2829      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csinhl
.visible .func csinhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csinhl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshl
.extern .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhl
.extern .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csinhl
.visible .func csinhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r27;
.reg .f64 %r30;
.reg .u64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r47;
.reg .f64 %r48;
mov.u64 %r31,%ar0;
mov.f64 %r32,%ar1;
mov.f64 %r33,%ar2;
.loc 1 41 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r36,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r33;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 43 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),coshl,(%out_arg1);
ld.param.f64 %r41,[%value_in];
}
.loc 1 43 39
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r43,[%value_in];
}
.loc 1 43 37
mul.f64 %r30,%r41,%r43;
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),sinhl,(%out_arg1);
ld.param.f64 %r45,[%value_in];
}
.loc 1 43 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r39;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 43 25
mul.f64 %r48,%r30,0d0000000000000000;
fma.rn.f64 %r27,%r45,%r47,%r48;
.loc 1 44 9
st.f64 [%r31],%r27;
st.f64 [%r31+8],%r30;
.loc 1 45 1
ret;
}

lib_a-csinl.o/  1612277260  0     0     100666  3028      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csinl
.visible .func csinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csinl.c"
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: _cchshl
.extern .func _cchshl (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csinl
.visible .func csinl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .u64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r37;
.reg .u64 %r41;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
mov.u64 %r32,%ar0;
mov.f64 %r33,%ar1;
mov.f64 %r34,%ar2;
.loc 1 42 2
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r37,[%value_in];
}
add.u64 %r41,%frame,8;
{
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r37;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r41;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%frame;
call _cchshl,(%out_arg1,%out_arg2,%out_arg3);
}
.loc 1 43 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r46,[%value_in];
}
.loc 1 43 46
ld.f64 %r47,[%frame];
mul.f64 %r31,%r46,%r47;
.loc 1 43 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r52,[%value_in];
}
.loc 1 43 27
mul.f64 %r53,%r31,0d0000000000000000;
ld.f64 %r54,[%frame+8];
fma.rn.f64 %r30,%r52,%r54,%r53;
.loc 1 44 9
st.f64 [%r32],%r30;
st.f64 [%r32+8],%r31;
.loc 1 45 1
ret;
}
lib_a-csqrt.o/  1612277260  0     0     100666  7077      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csqrt
.visible .func csqrt (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csqrt.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sqrt
.extern .func (.param .f64 %value_out) sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cabs
.extern .func (.param .f64 %value_out) cabs (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: csqrt
.visible .func csqrt (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f64 %r31;
.reg .f64 %r33;
.reg .f64 %r38;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r69;
.reg .u64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r75;
.reg .f64 %r78;
.reg .pred %r79;
.reg .pred %r80;
.reg .f64 %r82;
.reg .f64 %r84;
.reg .pred %r85;
.reg .pred %r86;
.reg .f64 %r88;
.reg .f64 %r90;
.reg .pred %r91;
.reg .f64 %r95;
.reg .pred %r96;
.reg .f64 %r98;
.reg .pred %r99;
.reg .f64 %r106;
.reg .pred %r107;
.reg .f64 %r108;
.reg .f64 %r110;
.reg .f64 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r116;
.reg .f64 %r118;
.reg .f64 %r120;
.reg .f64 %r121;
.reg .f64 %r122;
.reg .pred %r123;
mov.u64 %r70,%ar0;
mov.f64 %r71,%ar1;
mov.f64 %r72,%ar2;
.loc 1 79 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r72;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r75,[%value_in];
}
.loc 1 80 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r72;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r78,[%value_in];
}
.loc 1 82 5
setp.neu.f64 %r79,%r78,0d0000000000000000;
@ %r79 bra $L2;
.loc 1 83 6
setp.neu.f64 %r80,%r75,0d0000000000000000;
@ %r80 bra $L3;
.loc 1 84 12
fma.rn.f64 %r45,%r78,0d0000000000000000,0d0000000000000000;
.loc 1 84 6
mov.f64 %r46,%r78;
bra $L4;
$L3:
.loc 1 86 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r75;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r82,[%value_in];
}
.loc 1 87 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r82;
call (%value_in),sqrt,(%out_arg1);
ld.param.f64 %r84,[%value_in];
}
.loc 1 88 7
setp.lt.f64 %r85,%r75,0d0000000000000000;
@ ! %r85 bra $L26;
.loc 1 89 13
fma.rn.f64 %r45,%r84,0d0000000000000000,0d0000000000000000;
.loc 1 89 7
mov.f64 %r46,%r84;
bra $L4;
$L26:
.loc 1 91 11
fma.rn.f64 %r45,%r78,0d0000000000000000,%r84;
.loc 1 91 7
mov.f64 %r46,%r78;
$L4:
.loc 1 94 10
st.f64 [%r70],%r45;
st.f64 [%r70+8],%r46;
bra $L1;
$L2:
.loc 1 96 5
setp.neu.f64 %r86,%r75,0d0000000000000000;
@ %r86 bra $L8;
.loc 1 97 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r78;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r88,[%value_in];
}
.loc 1 98 7
mul.f64 %r25,%r88,0d3fe0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),sqrt,(%out_arg1);
ld.param.f64 %r90,[%value_in];
}
.loc 1 99 6
setp.gt.f64 %r91,%r78,0d0000000000000000;
@ ! %r91 bra $L27;
.loc 1 100 10
fma.rn.f64 %r47,%r90,0d0000000000000000,%r90;
.loc 1 100 6
mov.f64 %r48,%r90;
bra $L11;
$L27:
.loc 1 102 10
fma.rn.f64 %r47,%r90,0d8000000000000000,%r90;
.loc 1 102 6
neg.f64 %r48,%r90;
$L11:
.loc 1 103 10
st.f64 [%r70],%r47;
st.f64 [%r70+8],%r48;
bra $L1;
$L8:
.loc 1 106 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r75;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r95,[%value_in];
}
.loc 1 106 5
setp.gt.f64 %r96,%r95,0d4010000000000000;
@ ! %r96 bra $L28;
$L15:
.loc 1 107 5
mul.f64 %r51,%r75,0d3fd0000000000000;
.loc 1 108 5
mul.f64 %r52,%r78,0d3fd0000000000000;
.loc 1 109 9
mov.f64 %r55,0d4000000000000000;
bra $L14;
$L28:
.loc 1 106 26
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r78;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r98,[%value_in];
}
.loc 1 106 22
setp.gt.f64 %r99,%r98,0d4010000000000000;
@ %r99 bra $L15;
.loc 1 112 5
mul.f64 %r51,%r75,0d4350000000000000;
.loc 1 113 5
mul.f64 %r52,%r78,0d4350000000000000;
.loc 1 114 9
mov.f64 %r55,0d3e40000000000000;
$L14:
.loc 1 121 8
fma.rn.f64 %r31,%r52,0d0000000000000000,%r51;
.loc 1 122 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r52;
call (%value_in),cabs,(%out_arg1,%out_arg2);
ld.param.f64 %r106,[%value_in];
}
.loc 1 123 5
setp.gt.f64 %r107,%r51,0d0000000000000000;
@ ! %r107 bra $L29;
.loc 1 124 26
mul.f64 %r108,%r51,0d3fe0000000000000;
.loc 1 124 7
fma.rn.f64 %r33,%r106,0d3fe0000000000000,%r108;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),sqrt,(%out_arg1);
ld.param.f64 %r110,[%value_in];
}
.loc 1 125 25
mul.f64 %r112,%r52,0d3fe0000000000000;
.loc 1 125 15
div.rn.f64 %r113,%r112,%r110;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r113;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r114,[%value_in];
}
.loc 1 125 5
mul.f64 %r53,%r114,%r55;
.loc 1 126 5
mul.f64 %r54,%r55,%r110;
bra $L18;
$L29:
.loc 1 128 7
mul.f64 %r116,%r51,0dbfe0000000000000;
fma.rn.f64 %r38,%r106,0d3fe0000000000000,%r116;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),sqrt,(%out_arg1);
ld.param.f64 %r118,[%value_in];
}
.loc 1 129 25
mul.f64 %r120,%r52,0d3fe0000000000000;
.loc 1 129 15
div.rn.f64 %r121,%r120,%r118;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r121;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r122,[%value_in];
}
.loc 1 129 5
mul.f64 %r54,%r122,%r55;
.loc 1 130 5
mul.f64 %r53,%r55,%r118;
$L18:
.loc 1 133 9
mul.f64 %r69,%r53,0d0000000000000000;
.loc 1 132 5
setp.lt.f64 %r123,%r52,0d0000000000000000;
@ ! %r123 bra $L30;
.loc 1 133 5
sub.f64 %r49,%r54,%r69;
neg.f64 %r50,%r53;
bra $L21;
$L30:
.loc 1 135 9
add.f64 %r49,%r54,%r69;
.loc 1 135 5
mov.f64 %r50,%r53;
$L21:
.loc 1 136 9
st.f64 [%r70],%r49;
st.f64 [%r70+8],%r50;
$L1:
.loc 1 137 1
ret;
}

lib_a-csqrtf.o/ 1612277260  0     0     100666  6878      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csqrtf
.visible .func csqrtf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csqrtf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sqrtf
.extern .func (.param .f32 %value_out) sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cabsf
.extern .func (.param .f32 %value_out) cabsf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: csqrtf
.visible .func csqrtf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r33;
.reg .f32 %r35;
.reg .f32 %r40;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r68;
.reg .u64 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r74;
.reg .f32 %r77;
.reg .pred %r78;
.reg .pred %r79;
.reg .f32 %r81;
.reg .f32 %r82;
.reg .pred %r83;
.reg .f32 %r85;
.reg .pred %r86;
.reg .f32 %r88;
.reg .f32 %r90;
.reg .pred %r91;
.reg .f32 %r95;
.reg .pred %r96;
.reg .f32 %r98;
.reg .pred %r99;
.reg .f32 %r106;
.reg .pred %r107;
.reg .f32 %r108;
.reg .f32 %r110;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .f32 %r114;
.reg .f32 %r116;
.reg .f32 %r118;
.reg .f32 %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .pred %r123;
mov.u64 %r69,%ar0;
mov.f32 %r70,%ar1;
mov.f32 %r71,%ar2;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r70;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r71;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r74,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r70;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r71;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r77,[%value_in];
}
.loc 1 47 5
setp.neu.f32 %r78,%r77,0f00000000;
@ %r78 bra $L2;
.loc 1 48 6
setp.lt.f32 %r79,%r74,0f00000000;
@ ! %r79 bra $L25;
.loc 1 49 15
neg.f32 %r81,%r74;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r81;
call (%value_in),sqrtf,(%out_arg1);
ld.param.f32 %r82,[%value_in];
}
.loc 1 49 13
fma.rn.f32 %r23,%r82,0f00000000,0f00000000;
.loc 1 50 11
st.f32 [%r69],%r23;
st.f32 [%r69+4],%r82;
bra $L1;
$L25:
.loc 1 51 13
setp.neu.f32 %r83,%r74,0f00000000;
@ %r83 bra $L6;
.loc 1 52 17
fma.rn.f32 %r24,%r77,0f00000000,0f00000000;
st.f32 [%r69],%r24;
st.f32 [%r69+4],%r77;
bra $L1;
$L6:
.loc 1 54 8
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r74;
call (%value_in),sqrtf,(%out_arg1);
ld.param.f32 %r85,[%value_in];
}
.loc 1 54 17
fma.rn.f32 %r26,%r77,0f00000000,%r85;
.loc 1 55 11
st.f32 [%r69],%r26;
st.f32 [%r69+4],%r77;
bra $L1;
$L2:
.loc 1 59 5
setp.neu.f32 %r86,%r74,0f00000000;
@ %r86 bra $L7;
.loc 1 60 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r77;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r88,[%value_in];
}
.loc 1 61 7
mul.f32 %r27,%r88,0f3f000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
call (%value_in),sqrtf,(%out_arg1);
ld.param.f32 %r90,[%value_in];
}
.loc 1 62 6
setp.gt.f32 %r91,%r77,0f00000000;
@ ! %r91 bra $L26;
.loc 1 63 10
fma.rn.f32 %r47,%r90,0f00000000,%r90;
.loc 1 63 6
mov.f32 %r48,%r90;
bra $L10;
$L26:
.loc 1 65 10
fma.rn.f32 %r47,%r90,0f80000000,%r90;
.loc 1 65 6
neg.f32 %r48,%r90;
$L10:
.loc 1 66 10
st.f32 [%r69],%r47;
st.f32 [%r69+4],%r48;
bra $L1;
$L7:
.loc 1 70 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r74;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r95,[%value_in];
}
.loc 1 70 5
setp.gt.f32 %r96,%r95,0f40800000;
@ ! %r96 bra $L27;
$L14:
.loc 1 71 5
mul.f32 %r51,%r74,0f3e800000;
.loc 1 72 5
mul.f32 %r52,%r77,0f3e800000;
.loc 1 73 9
mov.f32 %r55,0f40000000;
bra $L13;
$L27:
.loc 1 70 28
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r77;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r98,[%value_in];
}
.loc 1 70 24
setp.gt.f32 %r99,%r98,0f40800000;
@ %r99 bra $L14;
.loc 1 76 5
mul.f32 %r51,%r74,0f4c800000;
.loc 1 77 5
mul.f32 %r52,%r77,0f4c800000;
.loc 1 78 9
mov.f32 %r55,0f39000000;
$L13:
.loc 1 85 8
fma.rn.f32 %r33,%r52,0f00000000,%r51;
.loc 1 86 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r52;
call (%value_in),cabsf,(%out_arg1,%out_arg2);
ld.param.f32 %r106,[%value_in];
}
.loc 1 87 4
setp.gt.f32 %r107,%r51,0f00000000;
@ ! %r107 bra $L28;
.loc 1 88 29
mul.f32 %r108,%r51,0f3f000000;
.loc 1 88 7
fma.rn.f32 %r35,%r106,0f3f000000,%r108;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
call (%value_in),sqrtf,(%out_arg1);
ld.param.f32 %r110,[%value_in];
}
.loc 1 89 27
mul.f32 %r112,%r52,0f3f000000;
.loc 1 89 15
div.rn.f32 %r113,%r112,%r110;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r113;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r114,[%value_in];
}
.loc 1 89 5
mul.f32 %r53,%r114,%r55;
.loc 1 90 5
mul.f32 %r54,%r55,%r110;
bra $L17;
$L28:
.loc 1 92 7
mul.f32 %r116,%r51,0fbf000000;
fma.rn.f32 %r40,%r106,0f3f000000,%r116;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
call (%value_in),sqrtf,(%out_arg1);
ld.param.f32 %r118,[%value_in];
}
.loc 1 93 27
mul.f32 %r120,%r52,0f3f000000;
.loc 1 93 15
div.rn.f32 %r121,%r120,%r118;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r121;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r122,[%value_in];
}
.loc 1 93 5
mul.f32 %r54,%r122,%r55;
.loc 1 94 5
mul.f32 %r53,%r55,%r118;
$L17:
.loc 1 98 9
mul.f32 %r68,%r53,0f00000000;
.loc 1 97 5
setp.lt.f32 %r123,%r52,0f00000000;
@ ! %r123 bra $L29;
.loc 1 98 5
sub.f32 %r49,%r54,%r68;
neg.f32 %r50,%r53;
bra $L20;
$L29:
.loc 1 100 9
add.f32 %r49,%r54,%r68;
.loc 1 100 5
mov.f32 %r50,%r53;
$L20:
.loc 1 101 9
st.f32 [%r69],%r49;
st.f32 [%r69+4],%r50;
$L1:
.loc 1 102 1
ret;
}
lib_a-csqrtl.o/ 1612277260  0     0     100666  7641      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: csqrtl
.visible .func csqrtl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/csqrtl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: copysignl
.extern .func (.param .f64 %value_out) copysignl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsl
.extern .func (.param .f64 %value_out) fabsl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: hypotl
.extern .func (.param .f64 %value_out) hypotl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sqrtl
.extern .func (.param .f64 %value_out) sqrtl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: csqrtl
.visible .func csqrtl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r22;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r31;
.reg .f64 %r33;
.reg .f64 %r40;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u32 %r51;
.reg .f64 %r54;
.reg .f64 %r57;
.reg .u64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r67;
.reg .f64 %r70;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r75;
.reg .u32 %r76;
.reg .u16 %r77;
.reg .u16 %r78;
.reg .u16 %r79;
.reg .u32 %r80;
.reg .f64 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .f64 %r85;
.reg .pred %r86;
.reg .u64 %r87;
.reg .u64 %r88;
.reg .u32 %r90;
.reg .pred %r91;
.reg .f64 %r94;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r100;
.reg .f64 %r101;
.reg .f64 %r103;
.reg .pred %r104;
.reg .f64 %r106;
.reg .pred %r107;
.reg .pred %r108;
.reg .f64 %r111;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r115;
.reg .f64 %r116;
.reg .f64 %r119;
.reg .f64 %r121;
.reg .f64 %r122;
.reg .f64 %r123;
.reg .f64 %r126;
.reg .f64 %r128;
.reg .f64 %r129;
.reg .f64 %r130;
.reg .f64 %r132;
.reg .f64 %r133;
.reg .pred %r134;
mov.u64 %r62,%ar0;
mov.f64 %r63,%ar1;
mov.f64 %r64,%ar2;
.loc 1 60 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r64;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r67,[%value_in];
}
mov.f64 %r49,%r67;
.loc 1 61 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r64;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r70,[%value_in];
}
mov.f64 %r50,%r70;
.loc 1 64 5
set.u32.eq.f64 %r72,%r63,0d0000000000000000;
neg.s32 %r73,%r72;
set.u32.eq.f64 %r75,%r64,0d0000000000000000;
neg.s32 %r76,%r75;
cvt.u16.u32 %r78,%r73;
cvt.u16.u32 %r79,%r76;
and.b16 %r77,%r78,%r79;
cvt.u32.u16 %r80,%r77;
cvt.u32.u8 %r51,%r80;
setp.eq.u32 %r134,%r51,0;
@ %r134 bra $L2;
.loc 1 65 11
fma.rn.f64 %r22,%r70,0d0000000000000000,0d0000000000000000;
st.f64 [%r62],%r22;
st.f64 [%r62+8],%r70;
bra $L1;
$L2:
.loc 1 66 6
abs.f64 %r82,%r70;
.loc 1 66 5
setp.leu.f64 %r83,%r82,0d7fefffffffffffff;
@ %r83 bra $L4;
.loc 1 67 11
fma.rn.f64 %r24,%r70,0d0000000000000000,0d7ff0000000000000;
st.f64 [%r62],%r24;
st.f64 [%r62+8],%r70;
bra $L1;
$L4:
.loc 1 68 5
setp.num.f64 %r84,%r67,%r67;
@ %r84 bra $L5;
.loc 1 69 10
sub.f64 %r25,%r70,%r70;
.loc 1 69 5
div.rn.f64 %r57,%r25,%r25;
.loc 1 70 11
fma.rn.f64 %r26,%r57,0d0000000000000000,%r67;
st.f64 [%r62],%r26;
st.f64 [%r62+8],%r57;
bra $L1;
$L5:
.loc 1 72 6
abs.f64 %r85,%r67;
.loc 1 72 5
setp.leu.f64 %r86,%r85,0d7fefffffffffffff;
@ %r86 bra $L6;
.loc 1 79 7
mov.b64 %r87,%r67;
shr.u64 %r88,%r87,63;
cvt.u32.u64 %r90,%r88;
.loc 1 79 6
setp.eq.u32 %r91,%r90,0;
@ %r91 bra $L7;
.loc 1 80 12
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r70;
call (%value_in),copysignl,(%out_arg1,%out_arg2);
ld.param.f64 %r94,[%value_in];
}
sub.f64 %r96,%r70,%r70;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r96;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r97,[%value_in];
}
fma.rn.f64 %r31,%r94,0d0000000000000000,%r97;
st.f64 [%r62],%r31;
st.f64 [%r62+8],%r94;
bra $L1;
$L7:
.loc 1 82 12
sub.f64 %r100,%r70,%r70;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r100;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r70;
call (%value_in),copysignl,(%out_arg1,%out_arg2);
ld.param.f64 %r101,[%value_in];
}
fma.rn.f64 %r33,%r101,0d0000000000000000,%r67;
st.f64 [%r62],%r33;
st.f64 [%r62+8],%r101;
bra $L1;
$L6:
.loc 1 90 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r103,[%value_in];
}
.loc 1 90 5
setp.ge.f64 %r104,%r103,0d7fda827999fcef32;
@ ! %r104 bra $L17;
$L11:
.loc 1 91 5
mul.f64 %r49,%r67,0d3fd0000000000000;
.loc 1 92 5
mul.f64 %r50,%r70,0d3fd0000000000000;
setp.eq.u32 %r134,1,0;
.loc 1 93 9
bra $L10;
$L17:
.loc 1 90 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r70;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r106,[%value_in];
}
.loc 1 90 25
setp.ge.f64 %r107,%r106,0d7fda827999fcef32;
@ %r107 bra $L11;
$L10:
.loc 1 99 5
setp.ge.f64 %r108,%r49,0d0000000000000000;
@ ! %r108 bra $L18;
.loc 1 100 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r50;
call (%value_in),hypotl,(%out_arg1,%out_arg2);
ld.param.f64 %r111,[%value_in];
}
.loc 1 100 16
add.f64 %r113,%r111,%r49;
.loc 1 100 7
mul.f64 %r114,%r113,0d3fe0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r114;
call (%value_in),sqrtl,(%out_arg1);
ld.param.f64 %r115,[%value_in];
}
.loc 1 101 12
add.f64 %r116,%r115,%r115;
div.rn.f64 %r54,%r50,%r116;
fma.rn.f64 %r40,%r54,0d0000000000000000,%r115;
bra $L14;
$L18:
.loc 1 103 19
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r50;
call (%value_in),hypotl,(%out_arg1,%out_arg2);
ld.param.f64 %r119,[%value_in];
}
.loc 1 103 17
sub.f64 %r121,%r119,%r49;
.loc 1 103 7
mul.f64 %r122,%r121,0d3fe0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r122;
call (%value_in),sqrtl,(%out_arg1);
ld.param.f64 %r123,[%value_in];
}
.loc 1 104 12
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r123;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r50;
call (%value_in),copysignl,(%out_arg1,%out_arg2);
ld.param.f64 %r126,[%value_in];
}
mov.f64 %r54,%r126;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r128,[%value_in];
}
add.f64 %r129,%r123,%r123;
div.rn.f64 %r130,%r128,%r129;
fma.rn.f64 %r40,%r54,0d0000000000000000,%r130;
$L14:
.loc 1 108 5
@ %r134 bra $L15;
.loc 1 109 18
add.f64 %r132,%r40,%r40;
st.f64 [%r62],%r132;
add.f64 %r133,%r54,%r54;
st.f64 [%r62+8],%r133;
bra $L1;
$L15:
.loc 1 111 10
st.f64 [%r62],%r40;
st.f64 [%r62+8],%r54;
$L1:
.loc 1 112 1
ret;
}

lib_a-ctan.o/   1612277260  0     0     100666  4702      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: ctan
.visible .func ctan (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctan.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctans
.extern .func (.param .f64 %value_out) _ctans (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{9221120237041090560,9218868437227405312 };
// BEGIN GLOBAL FUNCTION DEF: ctan
.visible .func ctan (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r55;
.reg .pred %r56;
.reg .f64 %r59;
.reg .pred %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r65;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r71;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
mov.u64 %r39,%ar0;
mov.f64 %r40,%ar1;
mov.f64 %r41,%ar2;
.loc 1 78 16
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 78 6
add.f64 %r46,%r44,%r44;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r46;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 78 39
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
.loc 1 78 28
add.f64 %r52,%r50,%r50;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r53,[%value_in];
}
.loc 1 78 4
add.f64 %r37,%r47,%r53;
.loc 1 80 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r37;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r55,[%value_in];
}
.loc 1 80 5
setp.lt.f64 %r56,%r55,0d3fd0000000000000;
@ ! %r56 bra $L2;
.loc 1 81 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),_ctans,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
mov.f64 %r37,%r59;
$L2:
.loc 1 83 5
setp.neu.f64 %r60,%r37,0d0000000000000000;
@ %r60 bra $L4;
.loc 1 86 10
ld.const.f64 %r61,[$LC0];
st.f64 [%r39],%r61;
ld.const.f64 %r62,[$LC0+8];
st.f64 [%r39+8],%r62;
bra $L1;
$L4:
.loc 1 89 44
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r65,[%value_in];
}
.loc 1 89 33
add.f64 %r67,%r65,%r65;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 89 54
div.rn.f64 %r38,%r68,%r37;
.loc 1 89 16
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r71,[%value_in];
}
.loc 1 89 6
add.f64 %r73,%r71,%r71;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r73;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r74,[%value_in];
}
.loc 1 89 26
div.rn.f64 %r75,%r74,%r37;
.loc 1 89 30
fma.rn.f64 %r36,%r38,0d0000000000000000,%r75;
.loc 1 90 9
st.f64 [%r39],%r36;
st.f64 [%r39+8],%r38;
$L1:
.loc 1 91 1
ret;
}
lib_a-ctanf.o/  1612277260  0     0     100666  4691      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: ctanf
.visible .func ctanf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctanf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshf
.extern .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctansf
.extern .func (.param .f32 %value_out) _ctansf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinhf
.extern .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 4 .u32 $LC0[2] =
{2143289344,2139095040 };
// BEGIN GLOBAL FUNCTION DEF: ctanf
.visible .func ctanf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .u64 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r44;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r50;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r55;
.reg .pred %r56;
.reg .f32 %r59;
.reg .pred %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r65;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r71;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
mov.u64 %r39,%ar0;
mov.f32 %r40,%ar1;
mov.f32 %r41,%ar2;
.loc 1 45 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r44,[%value_in];
}
.loc 1 45 6
add.f32 %r46,%r44,%r44;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r47,[%value_in];
}
.loc 1 45 44
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r50,[%value_in];
}
.loc 1 45 31
add.f32 %r52,%r50,%r50;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r52;
call (%value_in),coshf,(%out_arg1);
ld.param.f32 %r53,[%value_in];
}
.loc 1 45 4
add.f32 %r37,%r47,%r53;
.loc 1 47 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r37;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r55,[%value_in];
}
.loc 1 47 5
setp.lt.f32 %r56,%r55,0f3e800000;
@ ! %r56 bra $L2;
.loc 1 48 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),_ctansf,(%out_arg1,%out_arg2);
ld.param.f32 %r59,[%value_in];
}
mov.f32 %r37,%r59;
$L2:
.loc 1 50 5
setp.neu.f32 %r60,%r37,0f00000000;
@ %r60 bra $L4;
.loc 1 53 10
ld.const.f32 %r61,[$LC0];
st.f32 [%r39],%r61;
ld.const.f32 %r62,[$LC0+4];
st.f32 [%r39+4],%r62;
bra $L1;
$L4:
.loc 1 56 49
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r65,[%value_in];
}
.loc 1 56 36
add.f32 %r67,%r65,%r65;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r67;
call (%value_in),sinhf,(%out_arg1);
ld.param.f32 %r68,[%value_in];
}
.loc 1 56 60
div.rn.f32 %r38,%r68,%r37;
.loc 1 56 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r71,[%value_in];
}
.loc 1 56 6
add.f32 %r73,%r71,%r71;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r73;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r74,[%value_in];
}
.loc 1 56 29
div.rn.f32 %r75,%r74,%r37;
.loc 1 56 33
fma.rn.f32 %r36,%r38,0f00000000,%r75;
.loc 1 57 9
st.f32 [%r39],%r36;
st.f32 [%r39+4],%r38;
$L1:
.loc 1 58 1
ret;
}

lib_a-ctanh.o/  1612277260  0     0     100666  2964      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ctanh
.visible .func ctanh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctanh.c"
// BEGIN GLOBAL FUNCTION DECL: creal
.extern .func (.param .f64 %value_out) creal (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimag
.extern .func (.param .f64 %value_out) cimag (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosh
.extern .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ctanh
.visible .func ctanh (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r22;
.reg .f64 %r24;
.reg .f64 %r29;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .u64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r48;
.reg .f64 %r50;
.reg .f64 %r51;
mov.u64 %r34,%ar0;
mov.f64 %r35,%ar1;
mov.f64 %r36,%ar2;
.loc 1 77 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creal,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 78 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),cimag,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
.loc 1 79 6
add.f64 %r22,%r39,%r39;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r22;
call (%value_in),cosh,(%out_arg1);
ld.param.f64 %r44,[%value_in];
}
.loc 1 79 22
add.f64 %r24,%r42,%r42;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r46,[%value_in];
}
.loc 1 79 4
add.f64 %r32,%r44,%r46;
.loc 1 80 29
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r48,[%value_in];
}
.loc 1 80 42
div.rn.f64 %r33,%r48,%r32;
.loc 1 80 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r22;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r50,[%value_in];
}
.loc 1 80 20
div.rn.f64 %r51,%r50,%r32;
.loc 1 80 25
fma.rn.f64 %r29,%r33,0d0000000000000000,%r51;
.loc 1 82 9
st.f64 [%r34],%r29;
st.f64 [%r34+8],%r33;
.loc 1 83 1
ret;
}
lib_a-ctanhf.o/ 1612277260  0     0     100666  2979      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ctanhf
.visible .func ctanhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctanhf.c"
// BEGIN GLOBAL FUNCTION DECL: crealf
.extern .func (.param .f32 %value_out) crealf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagf
.extern .func (.param .f32 %value_out) cimagf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshf
.extern .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhf
.extern .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ctanhf
.visible .func ctanhf (.param .u64 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f32 %r22;
.reg .f32 %r24;
.reg .f32 %r29;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .u64 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r42;
.reg .f32 %r44;
.reg .f32 %r46;
.reg .f32 %r48;
.reg .f32 %r50;
.reg .f32 %r51;
mov.u64 %r34,%ar0;
mov.f32 %r35,%ar1;
mov.f32 %r36,%ar2;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r36;
call (%value_in),crealf,(%out_arg1,%out_arg2);
ld.param.f32 %r39,[%value_in];
}
.loc 1 45 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r35;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r36;
call (%value_in),cimagf,(%out_arg1,%out_arg2);
ld.param.f32 %r42,[%value_in];
}
.loc 1 46 6
add.f32 %r22,%r39,%r39;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r22;
call (%value_in),coshf,(%out_arg1);
ld.param.f32 %r44,[%value_in];
}
.loc 1 46 24
add.f32 %r24,%r42,%r42;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r46,[%value_in];
}
.loc 1 46 4
add.f32 %r32,%r44,%r46;
.loc 1 47 31
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r48,[%value_in];
}
.loc 1 47 46
div.rn.f32 %r33,%r48,%r32;
.loc 1 47 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r22;
call (%value_in),sinhf,(%out_arg1);
ld.param.f32 %r50,[%value_in];
}
.loc 1 47 22
div.rn.f32 %r51,%r50,%r32;
.loc 1 47 27
fma.rn.f32 %r29,%r33,0f00000000,%r51;
.loc 1 49 9
st.f32 [%r34],%r29;
st.f32 [%r34+4],%r33;
.loc 1 50 1
ret;
}

lib_a-ctanhl.o/ 1612277260  0     0     100666  2987      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ctanhl
.visible .func ctanhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctanhl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshl
.extern .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinhl
.extern .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ctanhl
.visible .func ctanhl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r22;
.reg .f64 %r24;
.reg .f64 %r29;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .u64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .f64 %r42;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r48;
.reg .f64 %r50;
.reg .f64 %r51;
mov.u64 %r34,%ar0;
mov.f64 %r35,%ar1;
mov.f64 %r36,%ar2;
.loc 1 41 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
.loc 1 42 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
.loc 1 43 6
add.f64 %r22,%r39,%r39;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r22;
call (%value_in),coshl,(%out_arg1);
ld.param.f64 %r44,[%value_in];
}
.loc 1 43 24
add.f64 %r24,%r42,%r42;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r46,[%value_in];
}
.loc 1 43 4
add.f64 %r32,%r44,%r46;
.loc 1 44 31
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r48,[%value_in];
}
.loc 1 44 46
div.rn.f64 %r33,%r48,%r32;
.loc 1 44 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r22;
call (%value_in),sinhl,(%out_arg1);
ld.param.f64 %r50,[%value_in];
}
.loc 1 44 22
div.rn.f64 %r51,%r50,%r32;
.loc 1 44 27
fma.rn.f64 %r29,%r33,0d0000000000000000,%r51;
.loc 1 46 9
st.f64 [%r34],%r29;
st.f64 [%r34+8],%r33;
.loc 1 47 1
ret;
}

lib_a-ctanl.o/  1612277260  0     0     100666  4733      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: ctanl
.visible .func ctanl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/complex/ctanl.c"
// BEGIN GLOBAL FUNCTION DECL: creall
.extern .func (.param .f64 %value_out) creall (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: cosl
.extern .func (.param .f64 %value_out) cosl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cimagl
.extern .func (.param .f64 %value_out) cimagl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: coshl
.extern .func (.param .f64 %value_out) coshl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsl
.extern .func (.param .f64 %value_out) fabsl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: _ctansl
.extern .func (.param .f64 %value_out) _ctansl (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: sinhl
.extern .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinl
.extern .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 8 .u64 $LC0[2] =
{9221120237041090560,9218868437227405312 };
// BEGIN GLOBAL FUNCTION DEF: ctanl
.visible .func ctanl (.param .u64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r44;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r55;
.reg .pred %r56;
.reg .f64 %r59;
.reg .pred %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r65;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r71;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
mov.u64 %r39,%ar0;
mov.f64 %r40,%ar1;
mov.f64 %r41,%ar2;
.loc 1 43 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
.loc 1 43 6
add.f64 %r46,%r44,%r44;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r46;
call (%value_in),cosl,(%out_arg1);
ld.param.f64 %r47,[%value_in];
}
.loc 1 43 44
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
.loc 1 43 31
add.f64 %r52,%r50,%r50;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
call (%value_in),coshl,(%out_arg1);
ld.param.f64 %r53,[%value_in];
}
.loc 1 43 4
add.f64 %r37,%r47,%r53;
.loc 1 45 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r37;
call (%value_in),fabsl,(%out_arg1);
ld.param.f64 %r55,[%value_in];
}
.loc 1 45 5
setp.lt.f64 %r56,%r55,0d3fd0000000000000;
@ ! %r56 bra $L2;
.loc 1 46 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),_ctansl,(%out_arg1,%out_arg2);
ld.param.f64 %r59,[%value_in];
}
mov.f64 %r37,%r59;
$L2:
.loc 1 48 5
setp.neu.f64 %r60,%r37,0d0000000000000000;
@ %r60 bra $L4;
.loc 1 51 10
ld.const.f64 %r61,[$LC0];
st.f64 [%r39],%r61;
ld.const.f64 %r62,[$LC0+8];
st.f64 [%r39+8],%r62;
bra $L1;
$L4:
.loc 1 54 49
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),cimagl,(%out_arg1,%out_arg2);
ld.param.f64 %r65,[%value_in];
}
.loc 1 54 36
add.f64 %r67,%r65,%r65;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
call (%value_in),sinhl,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 54 60
div.rn.f64 %r38,%r68,%r37;
.loc 1 54 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r40;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r41;
call (%value_in),creall,(%out_arg1,%out_arg2);
ld.param.f64 %r71,[%value_in];
}
.loc 1 54 6
add.f64 %r73,%r71,%r71;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r73;
call (%value_in),sinl,(%out_arg1);
ld.param.f64 %r74,[%value_in];
}
.loc 1 54 29
div.rn.f64 %r75,%r74,%r37;
.loc 1 54 33
fma.rn.f64 %r36,%r38,0d0000000000000000,%r75;
.loc 1 55 9
st.f64 [%r39],%r36;
st.f64 [%r39+8],%r38;
$L1:
.loc 1 56 1
ret;
}

lib_a-e_acos.o/ 1612277259  0     0     100666  6166      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acos
.visible .func (.param .f64 %value_out) __ieee754_acos (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_acos.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_acos
.visible .func (.param .f64 %value_out) __ieee754_acos (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r47;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .f64 %r60;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .u64 %r83;
.reg .f64 %r84;
.reg .f64 %r85;
.reg .u64 %r86;
.reg .u64 %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .pred %r95;
.reg .pred %r96;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .pred %r101;
.reg .f64 %r102;
.reg .f64 %r104;
.reg .f64 %r105;
.reg .f64 %r106;
.reg .f64 %r108;
.reg .f64 %r109;
.reg .f64 %r111;
.reg .u64 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r115;
.reg .f64 %r116;
mov.f64 %r85,%ar0;
.loc 1 71 2
mov.b64 %r86,%r85;
shr.u64 %r87,%r86,32;
cvt.u32.u64 %r58,%r87;
.loc 1 72 5
and.b32 %r59,%r58,2147483647;
.loc 1 73 4
setp.le.s32 %r88,%r59,1072693247;
@ %r88 bra $L2;
.loc 1 76 13
add.u32 %r89,%r59,-1072693248;
.loc 1 76 25
cvt.u32.u64 %r92,%r86;
or.b32 %r91,%r89,%r92;
.loc 1 76 8
setp.ne.u32 %r93,%r91,0;
@ %r93 bra $L3;
.loc 1 77 5
setp.gt.s32 %r94,%r58,0;
.loc 1 78 17
selp.f64 %r84,0d0000000000000000,0d400921fb54442d18,%r94;
bra $L1;
$L3:
.loc 1 80 15
sub.f64 %r25,%r85,%r85;
.loc 1 80 18
div.rn.f64 %r84,%r25,%r25;
bra $L1;
$L2:
.loc 1 82 4
setp.gt.s32 %r95,%r59,1071644671;
@ %r95 bra $L5;
.loc 1 83 8
setp.le.s32 %r96,%r59,1012924416;
@ %r96 bra $L8;
.loc 1 84 8
mul.f64 %r74,%r85,%r85;
.loc 1 85 44
fma.rn.f64 %r26,%r74,0d3f023de10dfdf709,0d3f49efe07501b288;
.loc 1 85 37
fma.rn.f64 %r27,%r26,%r74,0dbfa48228b5688f3b;
.loc 1 85 30
fma.rn.f64 %r28,%r27,%r74,0d3fc9c1550e884455;
.loc 1 85 23
fma.rn.f64 %r29,%r28,%r74,0dbfd4d61203eb6f7d;
.loc 1 85 16
fma.rn.f64 %r30,%r29,%r74,0d3fc5555555555555;
.loc 1 85 8
mul.f64 %r75,%r30,%r74;
.loc 1 86 34
fma.rn.f64 %r31,%r74,0d3fb3b8c5b12e9282,0dbfe6066c1b8d0159;
.loc 1 86 27
fma.rn.f64 %r32,%r31,%r74,0d40002ae59c598ac8;
.loc 1 86 20
fma.rn.f64 %r33,%r32,%r74,0dc0033a271c8a2d4b;
.loc 1 86 8
fma.rn.f64 %r76,%r33,%r74,0d3ff0000000000000;
.loc 1 88 36
neg.f64 %r97,%r85;
.loc 1 87 8
div.rn.f64 %r98,%r75,%r76;
.loc 1 88 36
fma.rn.f64 %r34,%r97,%r98,0d3c91a62633145c07;
.loc 1 88 26
sub.f64 %r99,%r85,%r34;
.loc 1 88 21
mov.f64 %r100,0d3ff921fb54442d18;
sub.f64 %r84,%r100,%r99;
bra $L1;
$L5:
.loc 1 89 13
setp.ge.s32 %r101,%r58,0;
@ %r101 bra $L6;
.loc 1 90 14
add.f64 %r102,%r85,0d3ff0000000000000;
.loc 1 90 8
mul.f64 %r68,%r102,0d3fe0000000000000;
.loc 1 91 44
fma.rn.f64 %r37,%r68,0d3f023de10dfdf709,0d3f49efe07501b288;
.loc 1 91 37
fma.rn.f64 %r38,%r37,%r68,0dbfa48228b5688f3b;
.loc 1 91 30
fma.rn.f64 %r39,%r38,%r68,0d3fc9c1550e884455;
.loc 1 91 23
fma.rn.f64 %r40,%r39,%r68,0dbfd4d61203eb6f7d;
.loc 1 91 16
fma.rn.f64 %r41,%r40,%r68,0d3fc5555555555555;
.loc 1 91 8
mul.f64 %r69,%r41,%r68;
.loc 1 92 34
fma.rn.f64 %r42,%r68,0d3fb3b8c5b12e9282,0dbfe6066c1b8d0159;
.loc 1 92 27
fma.rn.f64 %r43,%r42,%r68,0d40002ae59c598ac8;
.loc 1 92 20
fma.rn.f64 %r44,%r43,%r68,0dc0033a271c8a2d4b;
.loc 1 92 8
fma.rn.f64 %r70,%r44,%r68,0d3ff0000000000000;
.loc 1 93 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r104,[%value_in];
}
.loc 1 94 8
div.rn.f64 %r105,%r69,%r70;
.loc 1 95 8
fma.rn.f64 %r73,%r104,%r105,0dbc91a62633145c07;
.loc 1 96 24
add.f64 %r106,%r104,%r73;
.loc 1 96 16
fma.rn.f64 %r84,%r106,0dc000000000000000,0d400921fb54442d18;
bra $L1;
$L6:
.loc 1 98 14
mov.f64 %r109,0d3ff0000000000000;
sub.f64 %r108,%r109,%r85;
.loc 1 98 8
mul.f64 %r60,%r108,0d3fe0000000000000;
.loc 1 99 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r60;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r111,[%value_in];
}
.loc 1 101 6
mov.b64 %r83,%r111;
and.b64 %r112,%r83,-4294967296;
mov.b64 %r62,%r112;
.loc 1 102 13
neg.f64 %r113,%r62;
fma.rn.f64 %r47,%r113,%r62,%r60;
.loc 1 102 23
add.f64 %r114,%r111,%r62;
.loc 1 102 9
div.rn.f64 %r63,%r47,%r114;
.loc 1 103 44
fma.rn.f64 %r49,%r60,0d3f023de10dfdf709,0d3f49efe07501b288;
.loc 1 103 37
fma.rn.f64 %r50,%r49,%r60,0dbfa48228b5688f3b;
.loc 1 103 30
fma.rn.f64 %r51,%r50,%r60,0d3fc9c1550e884455;
.loc 1 103 23
fma.rn.f64 %r52,%r51,%r60,0dbfd4d61203eb6f7d;
.loc 1 103 16
fma.rn.f64 %r53,%r52,%r60,0d3fc5555555555555;
.loc 1 103 8
mul.f64 %r64,%r53,%r60;
.loc 1 104 34
fma.rn.f64 %r54,%r60,0d3fb3b8c5b12e9282,0dbfe6066c1b8d0159;
.loc 1 104 27
fma.rn.f64 %r55,%r54,%r60,0d40002ae59c598ac8;
.loc 1 104 20
fma.rn.f64 %r56,%r55,%r60,0dc0033a271c8a2d4b;
.loc 1 104 8
fma.rn.f64 %r65,%r56,%r60,0d3ff0000000000000;
.loc 1 105 8
div.rn.f64 %r115,%r64,%r65;
.loc 1 106 8
fma.rn.f64 %r67,%r111,%r115,%r63;
.loc 1 107 20
add.f64 %r116,%r62,%r67;
.loc 1 107 16
add.f64 %r84,%r116,%r116;
bra $L1;
$L8:
.loc 1 83 39
mov.f64 %r84,0d3ff921fb54442d18;
$L1:
.loc 1 109 1
mov.f64 %value,%r84;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_acosh.o/1612277259  0     0     100666  3573      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acosh
.visible .func (.param .f64 %value_out) __ieee754_acosh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_acosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log1p
.extern .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_acosh
.visible .func (.param .f64 %value_out) __ieee754_acosh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r27;
.reg .f64 %r31;
.reg .f64 %r33;
.reg .u32 %r36;
.reg .f64 %r37;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .u64 %r43;
.reg .u64 %r44;
.reg .pred %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .f64 %r49;
.reg .u32 %r50;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r67;
.reg .f64 %r69;
.reg .f64 %r70;
mov.f64 %r42,%ar0;
.loc 1 51 2
mov.b64 %r43,%r42;
shr.u64 %r44,%r43,32;
cvt.u32.u64 %r36,%r44;
.loc 1 52 4
setp.gt.s32 %r45,%r36,1072693247;
@ %r45 bra $L2;
.loc 1 53 15
sub.f64 %r22,%r42,%r42;
.loc 1 53 18
div.rn.f64 %r41,%r22,%r22;
bra $L1;
$L2:
.loc 1 54 11
setp.le.s32 %r46,%r36,1102053375;
@ %r46 bra $L4;
.loc 1 55 8
setp.le.s32 %r47,%r36,2146435071;
@ %r47 bra $L5;
.loc 1 56 18
add.f64 %r41,%r42,%r42;
bra $L1;
$L5:
.loc 1 58 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r49,[%value_in];
}
.loc 1 58 26
add.f64 %r41,%r49,0d3fe62e42fefa39ef;
bra $L1;
$L4:
.loc 1 59 16
add.u32 %r50,%r36,-1072693248;
.loc 1 59 28
cvt.u32.u64 %r53,%r43;
or.b32 %r52,%r50,%r53;
.loc 1 59 11
setp.eq.u32 %r54,%r52,0;
@ %r54 bra $L7;
.loc 1 61 12
setp.le.s32 %r55,%r36,1073741824;
@ %r55 bra $L6;
.loc 1 63 40
fma.rn.f64 %r27,%r42,%r42,0dbff0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r57,[%value_in];
}
.loc 1 63 39
add.f64 %r58,%r57,%r42;
.loc 1 63 36
mov.f64 %r60,0d3ff0000000000000;
div.rn.f64 %r59,%r60,%r58;
.loc 1 63 13
neg.f64 %r61,%r59;
fma.rn.f64 %r31,%r42,0d4000000000000000,%r61;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r63,[%value_in];
}
mov.f64 %r41,%r63;
bra $L1;
$L6:
.loc 1 65 8
mov.f64 %r64,0d3ff0000000000000;
sub.f64 %r37,%r42,%r64;
.loc 1 66 43
mul.f64 %r65,%r37,%r37;
.loc 1 66 21
fma.rn.f64 %r33,%r37,0d4000000000000000,%r65;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r67,[%value_in];
}
.loc 1 66 13
add.f64 %r69,%r67,%r37;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r69;
call (%value_in),log1p,(%out_arg1);
ld.param.f64 %r70,[%value_in];
}
mov.f64 %r41,%r70;
bra $L1;
$L7:
.loc 1 60 13
mov.f64 %r41,0d0000000000000000;
$L1:
.loc 1 68 1
mov.f64 %value,%r41;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_asin.o/ 1612277259  0     0     100666  5759      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_asin
.visible .func (.param .f64 %value_out) __ieee754_asin (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_asin.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_asin
.visible .func (.param .f64 %value_out) __ieee754_asin (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r50;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r63;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .u64 %r75;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .u64 %r78;
.reg .u64 %r79;
.reg .pred %r80;
.reg .u32 %r81;
.reg .u32 %r83;
.reg .u32 %r84;
.reg .pred %r85;
.reg .f64 %r86;
.reg .pred %r87;
.reg .pred %r88;
.reg .f64 %r89;
.reg .pred %r90;
.reg .f64 %r91;
.reg .f64 %r93;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .f64 %r97;
.reg .pred %r98;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .u64 %r101;
.reg .f64 %r102;
.reg .f64 %r103;
.reg .f64 %r104;
.reg .f64 %r106;
.reg .f64 %r107;
.reg .f64 %r109;
.reg .f64 %r110;
.reg .pred %r111;
mov.f64 %r77,%ar0;
.loc 1 80 2
mov.b64 %r78,%r77;
shr.u64 %r79,%r78,32;
cvt.u32.u64 %r52,%r79;
.loc 1 81 5
and.b32 %r53,%r52,2147483647;
.loc 1 82 4
setp.le.s32 %r80,%r53,1072693247;
@ %r80 bra $L2;
.loc 1 85 13
add.u32 %r81,%r53,-1072693248;
.loc 1 85 25
cvt.u32.u64 %r84,%r78;
or.b32 %r83,%r81,%r84;
.loc 1 85 8
setp.ne.u32 %r85,%r83,0;
@ %r85 bra $L3;
.loc 1 87 21
mul.f64 %r86,%r77,0d3c91a62633145c07;
.loc 1 87 19
fma.rn.f64 %r76,%r77,0d3ff921fb54442d18,%r86;
bra $L1;
$L3:
.loc 1 88 15
sub.f64 %r26,%r77,%r77;
.loc 1 88 18
div.rn.f64 %r76,%r26,%r26;
bra $L1;
$L2:
.loc 1 89 12
setp.gt.s32 %r87,%r53,1071644671;
@ %r87 bra $L5;
.loc 1 90 8
setp.gt.s32 %r88,%r53,1044381695;
@ %r88 bra $L6;
.loc 1 91 10
add.f64 %r89,%r77,0d7e37e43c8800759c;
.loc 1 91 5
setp.gt.f64 %r90,%r89,0d3ff0000000000000;
@ ! %r90 bra $L5;
bra $L9;
$L6:
.loc 1 93 5
mul.f64 %r54,%r77,%r77;
.loc 1 94 41
fma.rn.f64 %r28,%r54,0d3f023de10dfdf709,0d3f49efe07501b288;
.loc 1 94 34
fma.rn.f64 %r29,%r28,%r54,0dbfa48228b5688f3b;
.loc 1 94 27
fma.rn.f64 %r30,%r29,%r54,0d3fc9c1550e884455;
.loc 1 94 20
fma.rn.f64 %r31,%r30,%r54,0dbfd4d61203eb6f7d;
.loc 1 94 13
fma.rn.f64 %r32,%r31,%r54,0d3fc5555555555555;
.loc 1 94 5
mul.f64 %r55,%r32,%r54;
.loc 1 95 31
fma.rn.f64 %r33,%r54,0d3fb3b8c5b12e9282,0dbfe6066c1b8d0159;
.loc 1 95 24
fma.rn.f64 %r34,%r33,%r54,0d40002ae59c598ac8;
.loc 1 95 17
fma.rn.f64 %r35,%r34,%r54,0dc0033a271c8a2d4b;
.loc 1 95 5
fma.rn.f64 %r56,%r35,%r54,0d3ff0000000000000;
.loc 1 96 5
div.rn.f64 %r91,%r55,%r56;
.loc 1 97 11
fma.rn.f64 %r76,%r77,%r91,%r77;
bra $L1;
$L5:
.loc 1 101 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r77;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r93,[%value_in];
}
.loc 1 101 4
mov.f64 %r95,0d3ff0000000000000;
sub.f64 %r94,%r95,%r93;
.loc 1 102 4
mul.f64 %r59,%r94,0d3fe0000000000000;
.loc 1 103 40
fma.rn.f64 %r37,%r59,0d3f023de10dfdf709,0d3f49efe07501b288;
.loc 1 103 33
fma.rn.f64 %r38,%r37,%r59,0dbfa48228b5688f3b;
.loc 1 103 26
fma.rn.f64 %r39,%r38,%r59,0d3fc9c1550e884455;
.loc 1 103 19
fma.rn.f64 %r40,%r39,%r59,0dbfd4d61203eb6f7d;
.loc 1 103 12
fma.rn.f64 %r41,%r40,%r59,0d3fc5555555555555;
.loc 1 103 4
mul.f64 %r60,%r41,%r59;
.loc 1 104 30
fma.rn.f64 %r42,%r59,0d3fb3b8c5b12e9282,0dbfe6066c1b8d0159;
.loc 1 104 23
fma.rn.f64 %r43,%r42,%r59,0d40002ae59c598ac8;
.loc 1 104 16
fma.rn.f64 %r44,%r43,%r59,0dc0033a271c8a2d4b;
.loc 1 104 4
fma.rn.f64 %r61,%r44,%r59,0d3ff0000000000000;
.loc 1 105 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r59;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r97,[%value_in];
}
.loc 1 106 4
setp.le.s32 %r98,%r53,1072640818;
@ %r98 bra $L7;
.loc 1 107 8
div.rn.f64 %r99,%r60,%r61;
.loc 1 108 25
fma.rn.f64 %r45,%r97,%r99,%r97;
.loc 1 108 30
fma.rn.f64 %r46,%r45,0d4000000000000000,0dbc91a62633145c07;
.loc 1 108 8
mov.f64 %r100,0d3ff921fb54442d18;
sub.f64 %r76,%r100,%r46;
bra $L8;
$L7:
.loc 1 111 6
mov.b64 %r75,%r97;
and.b64 %r101,%r75,-4294967296;
mov.b64 %r63,%r101;
.loc 1 112 13
neg.f64 %r102,%r63;
fma.rn.f64 %r47,%r102,%r63,%r59;
.loc 1 113 9
div.rn.f64 %r65,%r60,%r61;
.loc 1 112 21
add.f64 %r103,%r97,%r63;
.loc 1 112 9
div.rn.f64 %r104,%r47,%r103;
.loc 1 114 27
fma.rn.f64 %r50,%r104,0dc000000000000000,0d3c91a62633145c07;
.loc 1 114 14
add.f64 %r106,%r97,%r97;
.loc 1 114 9
neg.f64 %r107,%r50;
fma.rn.f64 %r66,%r106,%r65,%r107;
.loc 1 115 9
fma.rn.f64 %r67,%r102,0d4000000000000000,0d3fe921fb54442d18;
.loc 1 116 21
sub.f64 %r109,%r66,%r67;
.loc 1 116 9
mov.f64 %r110,0d3fe921fb54442d18;
sub.f64 %r76,%r110,%r109;
$L8:
.loc 1 118 4
setp.gt.s32 %r111,%r52,0;
@ %r111 bra $L1;
.loc 1 118 33
neg.f64 %r76,%r76;
bra $L1;
$L9:
.loc 1 91 25
mov.f64 %r76,%r77;
$L1:
.loc 1 119 1
mov.f64 %value,%r76;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_atan2.o/1612277259  0     0     100666  7043      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atan2
.visible .func (.param .f64 %value_out) __ieee754_atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_atan2.c"
// BEGIN GLOBAL FUNCTION DECL: atan
.extern .func (.param .f64 %value_out) atan (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN VAR DEF: CSWTCH$8
.const .align 8 .u64 CSWTCH$8[3] =
{-4618122579557470952,4612488097114038738,-4610883939740737070 };
// BEGIN VAR DEF: CSWTCH$9
.const .align 8 .u64 CSWTCH$9[3] =
{-9223372036854775808,4614256656552045848,-4609115380302729960 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_atan2
.visible .func (.param .f64 %value_out) __ieee754_atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %r35;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r61;
.reg .u64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .u64 %r67;
.reg .u64 %r68;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .pred %r74;
.reg .u64 %r75;
.reg .u64 %r76;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u32 %r81;
.reg .pred %r82;
.reg .u32 %r83;
.reg .u32 %r84;
.reg .pred %r85;
.reg .f64 %r87;
.reg .u32 %r88;
.reg .u32 %r89;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .pred %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .u32 %r95;
.reg .pred %r96;
.reg .pred %r97;
.reg .pred %r98;
.reg .pred %r99;
.reg .pred %r100;
.reg .u64 %r101;
.reg .u64 %r102;
.reg .u64 %r103;
.reg .u64 %r104;
.reg .pred %r105;
.reg .u64 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .pred %r110;
.reg .pred %r111;
.reg .u32 %r112;
.reg .pred %r113;
.reg .u32 %r115;
.reg .u32 %r117;
.reg .u32 %r118;
.reg .u16 %r120;
.reg .u16 %r121;
.reg .u16 %r122;
.reg .u32 %r123;
.reg .u16 %r124;
.reg .pred %r125;
.reg .f64 %r127;
.reg .f64 %r128;
.reg .f64 %r130;
.reg .pred %r131;
.reg .pred %r132;
.reg .pred %r133;
.reg .u64 %r135;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u64 %r138;
.reg .u64 %r139;
.reg .u64 %r140;
.reg .u64 %r141;
.reg .f64 %r142;
.reg .f64 %r143;
.reg .f64 %r144;
.reg .f64 %r145;
.reg .f64 %r146;
.reg .f64 %r147;
mov.f64 %r65,%ar0;
mov.f64 %r66,%ar1;
.loc 1 69 2
mov.b64 %r67,%r66;
shr.u64 %r68,%r67,32;
cvt.u32.u64 %r51,%r68;
cvt.u32.u64 %r57,%r67;
.loc 1 70 5
and.b32 %r52,%r51,2147483647;
.loc 1 73 15
neg.s32 %r70,%r57;
.loc 1 73 14
or.b32 %r71,%r70,%r57;
.loc 1 73 19
shr.u32 %r72,%r71,31;
.loc 1 73 9
or.b32 %r73,%r72,%r52;
.loc 1 73 4
setp.gt.u32 %r74,%r73,2146435072;
@ %r74 bra $L2;
mov.b64 %r75,%r65;
shr.u64 %r76,%r75,32;
cvt.u32.u64 %r58,%r76;
cvt.u32.u64 %r59,%r75;
.loc 1 72 5
and.b32 %r54,%r58,2147483647;
.loc 1 74 15
neg.s32 %r78,%r59;
.loc 1 74 14
or.b32 %r79,%r78,%r59;
.loc 1 74 19
shr.u32 %r80,%r79,31;
.loc 1 74 9
or.b32 %r81,%r80,%r54;
.loc 1 73 37
setp.le.u32 %r82,%r81,2146435072;
@ %r82 bra $L3;
$L2:
.loc 1 75 13
add.f64 %r64,%r66,%r65;
bra $L1;
$L3:
.loc 1 76 9
add.u32 %r83,%r51,-1072693248;
.loc 1 76 21
or.b32 %r84,%r83,%r57;
.loc 1 76 4
setp.ne.u32 %r85,%r84,0;
@ %r85 bra $L5;
.loc 1 76 37
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r65;
call (%value_in),atan,(%out_arg1);
ld.param.f64 %r87,[%value_in];
}
mov.f64 %r64,%r87;
bra $L1;
$L5:
.loc 1 77 23
shr.s32 %r88,%r51,30;
.loc 1 77 28
and.b32 %r89,%r88,2;
.loc 1 77 15
shr.u32 %r90,%r58,31;
.loc 1 77 4
or.b32 %r55,%r89,%r90;
.loc 1 80 8
or.b32 %r91,%r54,%r59;
.loc 1 80 4
setp.ne.u32 %r92,%r91,0;
@ %r92 bra $L6;
.loc 1 81 6
setp.eq.u32 %r93,%r55,2;
@ %r93 bra $L15;
setp.ne.u32 %r94,%r55,3;
.loc 1 85 21
selp.f64 %r64,%r65,0dc00921fb54442d18,%r94;
bra $L1;
$L6:
.loc 1 89 8
or.b32 %r95,%r52,%r57;
.loc 1 89 4
setp.ne.u32 %r96,%r95,0;
@ %r96 bra $L7;
.loc 1 89 45
setp.ge.s32 %r97,%r58,0;
selp.f64 %r64,0d3ff921fb54442d18,0dbff921fb54442d18,%r97;
bra $L1;
$L7:
.loc 1 92 4
setp.ne.u32 %r98,%r52,2146435072;
@ %r98 bra $L8;
add.u32 %r35,%r55,-1;
.loc 1 93 8
setp.ne.u32 %r99,%r54,2146435072;
@ %r99 bra $L9;
setp.gt.u32 %r100,%r35,2;
@ %r100 bra $L18;
cvta.const.u64 %r101,CSWTCH$8;
cvt.u64.u32 %r102,%r35;
shl.b64 %r103,%r102,3;
add.u64 %r104,%r101,%r103;
ld.f64 %r64,[%r104];
bra $L1;
$L9:
setp.gt.u32 %r105,%r35,2;
@ %r105 bra $L19;
cvta.const.u64 %r106,CSWTCH$9;
cvt.u64.u32 %r107,%r35;
shl.b64 %r108,%r107,3;
add.u64 %r109,%r106,%r108;
ld.f64 %r64,[%r109];
bra $L1;
$L8:
.loc 1 110 4
setp.ne.u32 %r110,%r54,2146435072;
@ %r110 bra $L10;
.loc 1 110 48
setp.ge.s32 %r111,%r58,0;
.loc 1 89 45
selp.f64 %r64,0d3ff921fb54442d18,0dbff921fb54442d18,%r111;
bra $L1;
$L10:
.loc 1 113 9
sub.u32 %r112,%r54,%r52;
.loc 1 113 4
shr.s32 %r61,%r112,20;
.loc 1 114 4
setp.gt.s32 %r113,%r112,63963135;
@ %r113 bra $L21;
.loc 1 115 12
shr.u32 %r115,%r51,31;
.loc 1 115 17
set.u32.lt.s32 %r117,%r61,-60;
neg.s32 %r118,%r117;
.loc 1 115 14
cvt.u16.u32 %r121,%r115;
cvt.u16.u32 %r122,%r118;
and.b16 %r120,%r121,%r122;
.loc 1 115 9
cvt.u32.u16 %r123,%r120;
cvt.u16.u8 %r124,%r123;
setp.ne.u16 %r125,%r124,0;
@ %r125 bra $L22;
.loc 1 116 9
div.rn.f64 %r127,%r65,%r66;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r127;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r128,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),atan,(%out_arg1);
ld.param.f64 %r130,[%value_in];
}
mov.f64 %r64,%r130;
bra $L11;
$L21:
.loc 1 114 14
mov.f64 %r64,0d3ff921fb54442d18;
bra $L11;
$L22:
.loc 1 115 24
mov.f64 %r64,0d0000000000000000;
$L11:
.loc 1 117 2
setp.eq.u32 %r131,%r55,1;
@ %r131 bra $L12;
setp.eq.u32 %r132,%r55,2;
@ %r132 bra $L13;
setp.eq.u32 %r133,%r55,0;
@ ! %r133 bra $L26;
bra $L1;
$L12:
.loc 1 122 9
mov.b64 %r63,%r64;
shr.u64 %r135,%r63,32;
cvt.u32.u64 %r137,%r135;
add.u32 %r136,%r137,-2147483648;
cvt.u64.u32 %r138,%r136;
shl.b64 %r139,%r138,32;
and.b64 %r140,%r63,4294967295;
or.b64 %r141,%r140,%r139;
mov.b64 %r64,%r141;
.loc 1 124 20
bra $L1;
$L13:
.loc 1 125 27
mov.f64 %r143,0d3ca1a62633145c07;
sub.f64 %r142,%r64,%r143;
.loc 1 125 24
mov.f64 %r144,0d400921fb54442d18;
sub.f64 %r64,%r144,%r142;
bra $L1;
$L26:
.loc 1 127 21
mov.f64 %r146,0d3ca1a62633145c07;
sub.f64 %r145,%r64,%r146;
.loc 1 127 28
mov.f64 %r147,0d400921fb54442d18;
sub.f64 %r64,%r145,%r147;
bra $L1;
$L15:
.loc 1 81 6
mov.f64 %r64,0d400921fb54442d18;
bra $L1;
$L18:
.loc 1 93 8
mov.f64 %r64,0d3fe921fb54442d18;
bra $L1;
$L19:
mov.f64 %r64,0d0000000000000000;
$L1:
.loc 1 129 1
mov.f64 %value,%r64;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_atanh.o/1612277259  0     0     100666  3492      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atanh
.visible .func (.param .f64 %value_out) __ieee754_atanh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_atanh.c"
// BEGIN GLOBAL FUNCTION DECL: log1p
.extern .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_atanh
.visible .func (.param .f64 %value_out) __ieee754_atanh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r27;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .f64 %r40;
.reg .u32 %r42;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .u64 %r47;
.reg .u64 %r48;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .f64 %r57;
.reg .pred %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .u64 %r61;
.reg .u64 %r62;
.reg .pred %r63;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .pred %r77;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .u64 %r81;
.reg .u64 %r82;
mov.f64 %r46,%ar0;
.loc 1 59 2
mov.b64 %r47,%r46;
shr.u64 %r48,%r47,32;
cvt.u32.u64 %r38,%r48;
cvt.u32.u64 %r42,%r47;
.loc 1 60 5
and.b32 %r39,%r38,2147483647;
.loc 1 61 16
neg.s32 %r50,%r42;
.loc 1 61 14
or.b32 %r51,%r50,%r42;
.loc 1 61 21
shr.u32 %r52,%r51,31;
.loc 1 61 9
or.b32 %r53,%r52,%r39;
.loc 1 61 5
setp.le.u32 %r54,%r53,1072693248;
@ %r54 bra $L2;
.loc 1 62 15
sub.f64 %r27,%r46,%r46;
.loc 1 62 18
div.rn.f64 %r45,%r27,%r27;
bra $L1;
$L2:
.loc 1 63 4
setp.ne.u32 %r55,%r39,1072693248;
@ %r55 bra $L4;
.loc 1 64 14
div.rn.f64 %r45,%r46,0d0000000000000000;
bra $L1;
$L4:
.loc 1 65 4
setp.gt.s32 %r56,%r39,1043333119;
@ %r56 bra $L5;
.loc 1 65 25
add.f64 %r57,%r46,0d7e37e43c8800759c;
.loc 1 65 18
setp.gt.f64 %r58,%r57,0d0000000000000000;
@ ! %r58 bra $L11;
bra $L10;
$L5:
.loc 1 66 2
cvt.u64.u32 %r59,%r39;
shl.b64 %r60,%r59,32;
and.b64 %r61,%r47,4294967295;
or.b64 %r62,%r61,%r60;
mov.b64 %r43,%r62;
.loc 1 67 4
setp.gt.s32 %r63,%r39,1071644671;
@ %r63 bra $L7;
$L9:
.loc 1 68 8
add.f64 %r40,%r43,%r43;
.loc 1 69 23
mul.f64 %r65,%r40,%r43;
.loc 1 69 30
mov.f64 %r67,0d3ff0000000000000;
sub.f64 %r66,%r67,%r43;
.loc 1 69 25
div.rn.f64 %r68,%r65,%r66;
.loc 1 69 14
add.f64 %r69,%r68,%r40;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r69;
call (%value_in),log1p,(%out_arg1);
ld.param.f64 %r70,[%value_in];
}
.loc 1 69 8
mul.f64 %r45,%r70,0d3fe0000000000000;
bra $L8;
$L7:
.loc 1 71 22
add.f64 %r72,%r43,%r43;
.loc 1 71 30
mov.f64 %r74,0d3ff0000000000000;
sub.f64 %r73,%r74,%r43;
.loc 1 71 14
div.rn.f64 %r75,%r72,%r73;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r75;
call (%value_in),log1p,(%out_arg1);
ld.param.f64 %r76,[%value_in];
}
.loc 1 71 8
mul.f64 %r45,%r76,0d3fe0000000000000;
$L8:
.loc 1 72 4
setp.ge.s32 %r77,%r38,0;
@ %r77 bra $L1;
.loc 1 72 34
neg.f64 %r45,%r45;
bra $L1;
$L10:
.loc 1 65 42
mov.f64 %r45,%r46;
bra $L1;
$L11:
.loc 1 66 2
cvt.u64.u32 %r79,%r39;
shl.b64 %r80,%r79,32;
and.b64 %r81,%r47,4294967295;
or.b64 %r82,%r81,%r80;
mov.b64 %r43,%r82;
bra $L9;
$L1:
.loc 1 73 1
mov.f64 %value,%r45;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_cosh.o/ 1612277259  0     0     100666  4787      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_cosh
.visible .func (.param .f64 %value_out) __ieee754_cosh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_cosh.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1
.extern .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.extern .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflow
.extern .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_cosh
.visible .func (.param .f64 %value_out) __ieee754_cosh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r35;
.reg .u32 %r36;
.reg .u32 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .u64 %r45;
.reg .u64 %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .pred %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .pred %r57;
.reg .f64 %r59;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .pred %r64;
.reg .f64 %r66;
.reg .f64 %r68;
.reg .pred %r70;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r75;
.reg .u32 %r76;
.reg .u16 %r77;
.reg .u16 %r78;
.reg .u16 %r79;
.reg .u32 %r80;
.reg .u16 %r81;
.reg .pred %r82;
.reg .f64 %r84;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .f64 %r88;
.reg .u32 %r89;
.reg .f64 %r90;
mov.f64 %r44,%ar0;
.loc 1 58 2
mov.b64 %r45,%r44;
shr.u64 %r46,%r45,32;
cvt.u32.u64 %r35,%r46;
.loc 1 59 5
and.b32 %r36,%r35,2147483647;
.loc 1 62 4
setp.le.s32 %r47,%r36,2146435071;
@ %r47 bra $L2;
.loc 1 62 29
mul.f64 %r43,%r44,%r44;
bra $L1;
$L2:
.loc 1 65 4
setp.gt.s32 %r48,%r36,1071001154;
@ %r48 bra $L4;
.loc 1 66 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r50,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r50;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r52,[%value_in];
}
.loc 1 67 8
add.f64 %r43,%r52,0d3ff0000000000000;
.loc 1 68 9
setp.le.s32 %r53,%r36,1015021567;
@ %r53 bra $L1;
.loc 1 69 19
mul.f64 %r54,%r52,%r52;
.loc 1 69 25
add.f64 %r55,%r43,%r43;
.loc 1 69 22
div.rn.f64 %r56,%r54,%r55;
.loc 1 69 16
add.f64 %r43,%r56,0d3ff0000000000000;
bra $L1;
$L4:
.loc 1 73 5
setp.gt.s32 %r57,%r36,1077280767;
@ %r57 bra $L5;
.loc 1 74 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r59,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r59;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r61,[%value_in];
}
.loc 1 75 21
mov.f64 %r63,0d3fe0000000000000;
div.rn.f64 %r62,%r63,%r61;
.loc 1 75 16
fma.rn.f64 %r43,%r61,0d3fe0000000000000,%r62;
bra $L1;
$L5:
.loc 1 79 5
setp.gt.s32 %r64,%r36,1082535489;
@ %r64 bra $L6;
.loc 1 79 36
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r66,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r66;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 79 35
mul.f64 %r43,%r68,0d3fe0000000000000;
bra $L1;
$L6:
cvt.u32.u64 %r42,%r45;
.loc 1 83 5
setp.le.s32 %r70,%r36,1082536909;
@ %r70 bra $L7;
.loc 1 84 17
set.u32.eq.u32 %r72,%r36,1082536910;
neg.s32 %r73,%r72;
.loc 1 84 35
set.u32.le.u32 %r75,%r42,-1883637635;
neg.s32 %r76,%r75;
.loc 1 84 30
cvt.u16.u32 %r78,%r73;
cvt.u16.u32 %r79,%r76;
and.b16 %r77,%r78,%r79;
.loc 1 83 20
cvt.u32.u16 %r80,%r77;
cvt.u16.u8 %r81,%r80;
setp.eq.u16 %r82,%r81,0;
@ %r82 bra $L8;
$L7:
.loc 1 85 29
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r84,[%value_in];
}
.loc 1 85 10
mul.f64 %r86,%r84,0d3fe0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r86;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r87,[%value_in];
}
.loc 1 86 8
mul.f64 %r88,%r87,0d3fe0000000000000;
.loc 1 87 14
mul.f64 %r43,%r88,%r87;
bra $L1;
$L8:
.loc 1 91 9
mov.u32 %r89,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r89;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r90,[%value_in];
}
mov.f64 %r43,%r90;
$L1:
.loc 1 92 1
mov.f64 %value,%r43;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_exp.o/  1612277259  0     0     100666  7232      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.visible .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_exp.c"
// BEGIN GLOBAL FUNCTION DECL: __math_oflow
.extern .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflow
.extern .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0);
// BEGIN VAR DEF: ln2LO
.const .align 8 .u64 ln2LO[2] =
{4461442080421002358,-4761929956433773450 };
// BEGIN VAR DEF: halF
.const .align 8 .u64 halF[2] =
{4602678819172646912,-4620693217682128896 };
// BEGIN VAR DEF: ln2HI
.const .align 8 .u64 ln2HI[2] =
{4604418534311723008,-4618953502543052800 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_exp
.visible .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .f64 %r28;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .u32 %r70;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .u64 %r75;
.reg .u64 %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .u32 %r79;
.reg .u32 %r81;
.reg .u32 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .u32 %r86;
.reg .f64 %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .f64 %r90;
.reg .pred %r91;
.reg .pred %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u64 %r96;
.reg .f64 %r97;
.reg .u64 %r98;
.reg .u64 %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .u64 %r104;
.reg .u64 %r105;
.reg .u64 %r106;
.reg .u64 %r107;
.reg .f64 %r108;
.reg .f64 %r110;
.reg .pred %r111;
.reg .pred %r112;
.reg .f64 %r113;
.reg .pred %r114;
.reg .f64 %r116;
.reg .f64 %r117;
.reg .f64 %r118;
.reg .f64 %r119;
.reg .f64 %r120;
.reg .f64 %r121;
.reg .f64 %r122;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .f64 %r126;
.reg .u64 %r127;
.reg .u64 %r128;
.reg .pred %r129;
.reg .u32 %r130;
.reg .u32 %r131;
.reg .u64 %r132;
.reg .u64 %r133;
.reg .u64 %r134;
.reg .u64 %r135;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u64 %r139;
.reg .u64 %r140;
.reg .u64 %r141;
.reg .u64 %r142;
.reg .f64 %r144;
.reg .f64 %r145;
mov.f64 %r74,%ar0;
mov.b64 %r75,%r74;
shr.u64 %r76,%r75,32;
cvt.u32.u64 %r55,%r76;
.loc 1 118 16
shr.u32 %r22,%r55,31;
.loc 1 119 5
and.b32 %r54,%r55,2147483647;
.loc 1 122 4
setp.le.u32 %r77,%r54,1082535489;
@ %r77 bra $L2;
.loc 1 123 15
setp.le.u32 %r78,%r54,2146435071;
@ %r78 bra $L3;
.loc 1 126 10
and.b32 %r79,%r55,1048575;
.loc 1 126 19
cvt.u32.u64 %r82,%r75;
or.b32 %r81,%r79,%r82;
.loc 1 126 5
setp.eq.u32 %r83,%r81,0;
@ %r83 bra $L4;
.loc 1 127 16
add.f64 %r73,%r74,%r74;
bra $L1;
$L4:
.loc 1 128 26
setp.eq.u32 %r84,%r22,0;
selp.f64 %r73,%r74,0d0000000000000000,%r84;
bra $L1;
$L3:
.loc 1 130 8
setp.gt.f64 %r85,%r74,0d40862e42fefa39ef;
@ ! %r85 bra $L24;
.loc 1 130 33
mov.u32 %r86,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r86;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r87,[%value_in];
}
mov.f64 %r73,%r87;
bra $L1;
$L24:
.loc 1 131 8
setp.lt.f64 %r88,%r74,0dc0874910d52d3051;
@ ! %r88 bra $L8;
.loc 1 131 33
mov.u32 %r89,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r89;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r90,[%value_in];
}
mov.f64 %r73,%r90;
bra $L1;
$L2:
.loc 1 135 4
setp.le.u32 %r91,%r54,1071001154;
@ %r91 bra $L10;
.loc 1 136 8
setp.gt.u32 %r92,%r54,1072734897;
@ %r92 bra $L8;
.loc 1 137 15
cvta.const.u64 %r93,ln2HI;
cvt.s64.s32 %r94,%r22;
shl.b64 %r95,%r94,3;
add.u64 %r96,%r93,%r95;
.loc 1 137 6
ld.f64 %r97,[%r96];
sub.f64 %r50,%r74,%r97;
.loc 1 137 24
cvta.const.u64 %r98,ln2LO;
add.u64 %r101,%r98,%r95;
ld.f64 %r51,[%r101];
.loc 1 137 42
mov.u32 %r103,1;
sub.u32 %r102,%r103,%r22;
.loc 1 137 39
sub.u32 %r52,%r102,%r22;
bra $L11;
$L8:
.loc 1 139 21
cvta.const.u64 %r104,halF;
cvt.s64.s32 %r105,%r22;
shl.b64 %r106,%r105,3;
add.u64 %r107,%r104,%r106;
.loc 1 139 16
ld.f64 %r108,[%r107];
fma.rn.f64 %r28,%r74,0d3ff71547652b82fe,%r108;
.loc 1 139 6
cvt.rzi.s32.f64 %r52,%r28;
.loc 1 140 6
cvt.rn.f64.s32 %r56,%r52;
.loc 1 141 6
fma.rn.f64 %r50,%r56,0dbfe62e42fee00000,%r74;
.loc 1 142 6
mul.f64 %r51,%r56,0d3dea39ef35793c76;
$L11:
.loc 1 144 9
sub.f64 %r74,%r50,%r51;
.loc 1 151 5
mul.f64 %r57,%r74,%r74;
.loc 1 152 34
fma.rn.f64 %r31,%r57,0d3e66376972bea4d0,0dbebbbd41c5d26bf1;
.loc 1 152 28
fma.rn.f64 %r32,%r31,%r57,0d3f11566aaf25de2c;
.loc 1 152 22
fma.rn.f64 %r33,%r32,%r57,0dbf66c16c16bebd93;
.loc 1 152 16
fma.rn.f64 %r34,%r33,%r57,0d3fc555555555553e;
.loc 1 152 5
neg.f64 %r110,%r34;
fma.rn.f64 %r65,%r110,%r57,%r74;
.loc 1 154 24
mul.f64 %r145,%r74,%r65;
.loc 1 153 4
setp.eq.u32 %r111,%r52,0;
@ ! %r111 bra $L25;
bra $L12;
$L10:
.loc 1 146 9
setp.gt.u32 %r112,%r54,1039138815;
@ %r112 bra $L14;
.loc 1 147 13
add.f64 %r113,%r74,0d7e37e43c8800759c;
.loc 1 147 8
setp.gt.f64 %r114,%r113,0d3ff0000000000000;
@ ! %r114 bra $L14;
.loc 1 147 31
add.f64 %r73,%r74,0d3ff0000000000000;
bra $L1;
$L12:
.loc 1 153 32
mov.f64 %r117,0d4000000000000000;
sub.f64 %r116,%r65,%r117;
.loc 1 153 29
div.rn.f64 %r118,%r145,%r116;
.loc 1 153 37
sub.f64 %r119,%r118,%r74;
.loc 1 153 22
mov.f64 %r120,0d3ff0000000000000;
sub.f64 %r73,%r120,%r119;
bra $L1;
$L25:
.loc 1 154 32
mov.f64 %r122,0d4000000000000000;
sub.f64 %r121,%r122,%r65;
.loc 1 154 27
div.rn.f64 %r123,%r145,%r121;
.loc 1 154 21
sub.f64 %r124,%r51,%r123;
.loc 1 154 36
sub.f64 %r125,%r124,%r50;
.loc 1 154 11
mov.f64 %r126,0d3ff0000000000000;
sub.f64 %r58,%r126,%r125;
mov.b64 %r127,%r58;
shr.u64 %r128,%r127,32;
cvt.u32.u64 %r70,%r128;
.loc 1 155 4
setp.lt.s32 %r129,%r52,-1021;
@ %r129 bra $L16;
.loc 1 158 6
shl.b32 %r130,%r52,20;
add.u32 %r131,%r130,%r70;
cvt.u64.u32 %r132,%r131;
shl.b64 %r133,%r132,32;
and.b64 %r134,%r127,4294967295;
or.b64 %r135,%r134,%r133;
mov.b64 %r73,%r135;
.loc 1 159 13
bra $L1;
$L16:
.loc 1 163 6
add.u32 %r136,%r52,1000;
shl.b32 %r137,%r136,20;
add.u32 %r138,%r137,%r70;
cvt.u64.u32 %r139,%r138;
shl.b64 %r140,%r139,32;
and.b64 %r141,%r127,4294967295;
or.b64 %r142,%r141,%r140;
mov.b64 %r59,%r142;
.loc 1 164 14
mul.f64 %r73,%r59,0d0170000000000000;
bra $L1;
$L14:
.loc 1 151 5
mul.f64 %r60,%r74,%r74;
.loc 1 152 34
fma.rn.f64 %r61,%r60,0d3e66376972bea4d0,0dbebbbd41c5d26bf1;
.loc 1 152 28
fma.rn.f64 %r62,%r60,%r61,0d3f11566aaf25de2c;
.loc 1 152 22
fma.rn.f64 %r63,%r60,%r62,0dbf66c16c16bebd93;
.loc 1 152 16
fma.rn.f64 %r64,%r60,%r63,0d3fc555555555553e;
.loc 1 152 5
neg.f64 %r144,%r60;
fma.rn.f64 %r65,%r144,%r64,%r74;
mul.f64 %r145,%r74,%r65;
bra $L12;
$L1:
.loc 1 166 1
mov.f64 %value,%r73;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_fmod.o/ 1612277259  0     0     100666  12246     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmod
.visible .func (.param .f64 %value_out) __ieee754_fmod (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_fmod.c"
// BEGIN VAR DEF: Zero
.const .align 8 .u64 Zero[2] =
{0,-9223372036854775808 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_fmod
.visible .func (.param .f64 %value_out) __ieee754_fmod (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r30;
.reg .u32 %r38;
.reg .u32 %r46;
.reg .u32 %r80;
.reg .u32 %r87;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u32 %r96;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .u32 %r100;
.reg .u32 %r101;
.reg .u32 %r103;
.reg .u32 %r104;
.reg .u32 %r107;
.reg .u32 %r108;
.reg .u32 %r110;
.reg .u32 %r111;
.reg .u32 %r112;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .u32 %r117;
.reg .u32 %r118;
.reg .u32 %r119;
.reg .u32 %r120;
.reg .u32 %r121;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .f64 %r126;
.reg .u64 %r127;
.reg .u64 %r128;
.reg .u64 %r129;
.reg .u64 %r130;
.reg .u32 %r132;
.reg .u32 %r134;
.reg .u32 %r135;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u16 %r139;
.reg .u16 %r140;
.reg .u16 %r141;
.reg .u32 %r142;
.reg .u16 %r143;
.reg .pred %r144;
.reg .u32 %r145;
.reg .u32 %r146;
.reg .u32 %r147;
.reg .u32 %r148;
.reg .pred %r149;
.reg .pred %r151;
.reg .u32 %r153;
.reg .u32 %r154;
.reg .u32 %r156;
.reg .u32 %r157;
.reg .u16 %r158;
.reg .u16 %r159;
.reg .u16 %r160;
.reg .u32 %r161;
.reg .u16 %r162;
.reg .pred %r163;
.reg .pred %r164;
.reg .u64 %r165;
.reg .u32 %r166;
.reg .u64 %r167;
.reg .u64 %r168;
.reg .u64 %r169;
.reg .u32 %r170;
.reg .pred %r171;
.reg .pred %r172;
.reg .pred %r173;
.reg .pred %r175;
.reg .pred %r176;
.reg .pred %r178;
.reg .u32 %r179;
.reg .u32 %r180;
.reg .pred %r181;
.reg .pred %r182;
.reg .pred %r183;
.reg .pred %r185;
.reg .pred %r186;
.reg .pred %r188;
.reg .u32 %r189;
.reg .pred %r190;
.reg .u32 %r191;
.reg .pred %r192;
.reg .u32 %r193;
.reg .u32 %r194;
.reg .u32 %r195;
.reg .u32 %r196;
.reg .u32 %r197;
.reg .u32 %r199;
.reg .pred %r200;
.reg .u32 %r201;
.reg .u32 %r202;
.reg .u32 %r203;
.reg .u32 %r204;
.reg .u32 %r205;
.reg .pred %r206;
.reg .pred %r207;
.reg .pred %r208;
.reg .pred %r209;
.reg .u32 %r210;
.reg .u32 %r211;
.reg .u32 %r213;
.reg .pred %r214;
.reg .u64 %r215;
.reg .u32 %r216;
.reg .u64 %r217;
.reg .u64 %r218;
.reg .u64 %r219;
.reg .u32 %r220;
.reg .u32 %r221;
.reg .pred %r223;
.reg .pred %r224;
.reg .pred %r225;
.reg .u32 %r226;
.reg .pred %r227;
.reg .pred %r228;
.reg .u64 %r229;
.reg .u32 %r230;
.reg .u64 %r231;
.reg .u64 %r232;
.reg .u64 %r233;
.reg .u32 %r234;
.reg .u32 %r235;
.reg .pred %r237;
.reg .u32 %r239;
.reg .u32 %r240;
.reg .u32 %r241;
.reg .u32 %r242;
.reg .u32 %r243;
.reg .u64 %r244;
.reg .u64 %r248;
.reg .u64 %r249;
.reg .u64 %r250;
.reg .u32 %r251;
.reg .pred %r252;
.reg .u32 %r253;
.reg .u32 %r254;
.reg .u32 %r255;
.reg .pred %r256;
.reg .u32 %r257;
.reg .u32 %r258;
.reg .u32 %r259;
.reg .u32 %r260;
.reg .u64 %r261;
.reg .u64 %r265;
.reg .u64 %r266;
.reg .u64 %r267;
.reg .pred %r269;
mov.f64 %r125,%ar0;
mov.f64 %r126,%ar1;
.loc 1 40 2
mov.b64 %r127,%r125;
shr.u64 %r128,%r127,32;
cvt.u32.u64 %r98,%r128;
.loc 1 41 2
mov.b64 %r129,%r126;
shr.u64 %r130,%r129,32;
cvt.u32.u64 %r101,%r130;
cvt.u32.u64 %r96,%r129;
.loc 1 43 5
and.b32 %r103,%r98,2147483647;
.loc 1 44 5
and.b32 %r104,%r101,2147483647;
.loc 1 47 8
or.b32 %r132,%r104,%r96;
.loc 1 47 4
set.u32.eq.u32 %r134,%r132,0;
neg.s32 %r135,%r134;
.loc 1 47 15
set.u32.gt.s32 %r137,%r103,2146435071;
neg.s32 %r138,%r137;
cvt.u16.u32 %r140,%r135;
cvt.u16.u32 %r141,%r138;
or.b16 %r139,%r140,%r141;
cvt.u32.u16 %r142,%r139;
cvt.u16.u8 %r143,%r142;
setp.ne.u16 %r144,%r143,0;
@ %r144 bra $L2;
.loc 1 48 14
neg.s32 %r145,%r96;
.loc 1 48 13
or.b32 %r146,%r145,%r96;
.loc 1 48 18
shr.u32 %r147,%r146,31;
.loc 1 48 8
or.b32 %r148,%r147,%r104;
.loc 1 47 33
setp.le.u32 %r149,%r148,2146435072;
@ %r149 bra $L3;
$L2:
.loc 1 49 15
mul.f64 %r30,%r125,%r126;
.loc 1 49 18
div.rn.f64 %r124,%r30,%r30;
bra $L1;
$L3:
cvt.u32.u64 %r99,%r127;
.loc 1 42 5
and.b32 %r120,%r98,-2147483648;
.loc 1 50 4
setp.gt.s32 %r151,%r103,%r104;
@ %r151 bra $L5;
.loc 1 51 12
set.u32.lt.s32 %r153,%r103,%r104;
neg.s32 %r154,%r153;
.loc 1 51 21
set.u32.lt.u32 %r156,%r99,%r96;
neg.s32 %r157,%r156;
.loc 1 51 16
cvt.u16.u32 %r159,%r154;
cvt.u16.u32 %r160,%r157;
or.b16 %r158,%r159,%r160;
.loc 1 51 8
cvt.u32.u16 %r161,%r158;
cvt.u16.u8 %r162,%r161;
setp.ne.u16 %r163,%r162,0;
@ %r163 bra $L39;
.loc 1 52 8
setp.ne.u32 %r164,%r99,%r96;
@ %r164 bra $L5;
.loc 1 53 14
cvta.const.u64 %r165,Zero;
.loc 1 53 29
shr.u32 %r166,%r120,31;
.loc 1 53 14
cvt.u64.u32 %r167,%r166;
shl.b64 %r168,%r167,3;
add.u64 %r169,%r165,%r168;
ld.f64 %r124,[%r169];
bra $L1;
$L5:
.loc 1 57 4
and.b32 %r170,%r98,2146435072;
setp.ne.u32 %r171,%r170,0;
@ %r171 bra $L6;
.loc 1 58 8
setp.ne.u32 %r172,%r103,0;
@ %r172 bra $L7;
.loc 1 59 21
mov.u32 %r108,%r99;
.loc 1 59 3
setp.le.s32 %r173,%r99,0;
@ %r173 bra $L40;
.loc 1 59 11
mov.u32 %r94,-1043;
$L9:
.loc 1 59 41
add.u32 %r94,%r94,-1;
.loc 1 59 32
add.u32 %r108,%r108,%r108;
.loc 1 59 3
setp.gt.s32 %r175,%r108,0;
@ %r175 bra $L9;
bra $L8;
$L7:
.loc 1 61 20
shl.b32 %r107,%r103,11;
.loc 1 61 3
setp.le.s32 %r176,%r107,0;
@ %r176 bra $L41;
.loc 1 61 11
mov.u32 %r94,-1022;
$L10:
.loc 1 61 46
add.u32 %r94,%r94,-1;
.loc 1 61 37
add.u32 %r107,%r107,%r107;
.loc 1 61 3
setp.gt.s32 %r178,%r107,0;
@ %r178 bra $L10;
bra $L8;
$L6:
.loc 1 63 17
shr.s32 %r179,%r103,20;
.loc 1 63 12
add.u32 %r94,%r179,-1023;
bra $L8;
$L40:
.loc 1 59 11
mov.u32 %r94,-1043;
bra $L8;
$L41:
.loc 1 61 11
mov.u32 %r94,-1022;
$L8:
.loc 1 66 4
and.b32 %r180,%r101,2146435072;
setp.ne.u32 %r181,%r180,0;
@ %r181 bra $L11;
.loc 1 67 8
setp.ne.u32 %r182,%r104,0;
@ %r182 bra $L12;
.loc 1 68 21
mov.u32 %r111,%r96;
.loc 1 68 3
setp.le.s32 %r183,%r96,0;
@ %r183 bra $L42;
.loc 1 68 11
mov.u32 %r117,-1043;
$L14:
.loc 1 68 41
add.u32 %r117,%r117,-1;
.loc 1 68 32
add.u32 %r111,%r111,%r111;
.loc 1 68 3
setp.gt.s32 %r185,%r111,0;
@ %r185 bra $L14;
bra $L13;
$L12:
.loc 1 70 20
shl.b32 %r110,%r104,11;
.loc 1 70 3
setp.le.s32 %r186,%r110,0;
@ %r186 bra $L43;
.loc 1 70 11
mov.u32 %r117,-1022;
$L15:
.loc 1 70 46
add.u32 %r117,%r117,-1;
.loc 1 70 37
add.u32 %r110,%r110,%r110;
.loc 1 70 3
setp.gt.s32 %r188,%r110,0;
@ %r188 bra $L15;
bra $L13;
$L11:
.loc 1 72 17
shr.s32 %r189,%r104,20;
.loc 1 72 12
add.u32 %r117,%r189,-1023;
bra $L13;
$L42:
.loc 1 68 11
mov.u32 %r117,-1043;
bra $L13;
$L43:
.loc 1 70 11
mov.u32 %r117,-1022;
$L13:
.loc 1 75 4
setp.lt.s32 %r190,%r94,-1022;
@ %r190 bra $L16;
.loc 1 76 33
and.b32 %r38,%r98,1048575;
.loc 1 76 9
or.b32 %r100,%r38,1048576;
bra $L17;
$L16:
.loc 1 78 8
mov.u32 %r191,-1022;
sub.u32 %r112,%r191,%r94;
.loc 1 79 8
setp.gt.s32 %r192,%r112,31;
@ %r192 bra $L18;
.loc 1 80 31
add.u32 %r193,%r94,1054;
.loc 1 80 26
shr.u32 %r194,%r99,%r193;
.loc 1 80 18
shl.b32 %r195,%r103,%r112;
.loc 1 80 22
or.b32 %r100,%r194,%r195;
.loc 1 81 13
shl.b32 %r99,%r99,%r112;
bra $L17;
$L18:
.loc 1 83 14
mov.u32 %r197,-1054;
sub.u32 %r196,%r197,%r94;
.loc 1 83 10
shl.b32 %r100,%r99,%r196;
.loc 1 84 6
mov.u32 %r99,0;
$L17:
.loc 1 87 4
setp.lt.s32 %r269,%r117,-1022;
@ %r269 bra $L19;
.loc 1 88 33
and.b32 %r46,%r101,1048575;
.loc 1 88 9
or.b32 %r91,%r46,1048576;
.loc 1 103 17
sub.u32 %r119,%r99,%r96;
bra $L20;
$L19:
.loc 1 90 8
mov.u32 %r199,-1022;
sub.u32 %r114,%r199,%r117;
.loc 1 91 8
setp.gt.s32 %r200,%r114,31;
@ %r200 bra $L21;
.loc 1 92 31
add.u32 %r201,%r117,1054;
.loc 1 92 26
shr.u32 %r202,%r96,%r201;
.loc 1 92 18
shl.b32 %r203,%r104,%r114;
.loc 1 92 22
or.b32 %r91,%r202,%r203;
.loc 1 93 13
shl.b32 %r96,%r96,%r114;
.loc 1 103 17
sub.u32 %r119,%r99,%r96;
bra $L20;
$L21:
.loc 1 95 14
mov.u32 %r205,-1054;
sub.u32 %r204,%r205,%r117;
.loc 1 95 10
shl.b32 %r91,%r96,%r204;
.loc 1 101 4
sub.u32 %r95,%r94,%r117;
.loc 1 102 7
setp.ne.u32 %r206,%r94,%r117;
@ %r206 bra $L44;
bra $L55;
$L20:
.loc 1 101 4
sub.u32 %r95,%r94,%r117;
.loc 1 102 7
setp.eq.u32 %r207,%r94,%r117;
@ ! %r207 bra $L22;
bra $L24;
$L44:
.loc 1 96 6
mov.u32 %r96,0;
$L22:
mov.u32 %r121,%r95;
$L29:
.loc 1 103 8
sub.u32 %r92,%r100,%r91;
.loc 1 103 27
setp.le.u32 %r208,%r96,%r99;
@ %r208 bra $L25;
.loc 1 103 38
add.u32 %r92,%r92,-1;
$L25:
.loc 1 104 8
setp.ge.s32 %r209,%r92,0;
@ %r209 bra $L26;
.loc 1 104 22
add.u32 %r210,%r100,%r100;
.loc 1 104 29
shr.u32 %r211,%r99,31;
.loc 1 104 25
add.u32 %r100,%r210,%r211;
.loc 1 104 39
add.u32 %r99,%r99,%r99;
bra $L27;
$L26:
.loc 1 103 17
sub.u32 %r118,%r99,%r96;
.loc 1 106 13
or.b32 %r213,%r92,%r118;
.loc 1 106 9
setp.ne.u32 %r214,%r213,0;
@ %r214 bra $L28;
.loc 1 107 18
cvta.const.u64 %r215,Zero;
.loc 1 107 33
shr.u32 %r216,%r120,31;
.loc 1 107 18
cvt.u64.u32 %r217,%r216;
shl.b64 %r218,%r217,3;
add.u64 %r219,%r215,%r218;
ld.f64 %r124,[%r219];
bra $L1;
$L28:
.loc 1 108 14
add.u32 %r220,%r92,%r92;
.loc 1 108 21
shr.u32 %r221,%r118,31;
.loc 1 108 17
add.u32 %r100,%r220,%r221;
.loc 1 108 31
add.u32 %r99,%r118,%r118;
$L27:
.loc 1 102 7
add.u32 %r121,%r121,-1;
setp.ne.u32 %r223,%r121,0;
@ %r223 bra $L29;
.loc 1 111 13
sub.u32 %r119,%r99,%r96;
$L24:
.loc 1 111 4
sub.u32 %r93,%r100,%r91;
.loc 1 111 23
setp.le.u32 %r224,%r96,%r99;
@ %r224 bra $L30;
.loc 1 111 34
add.u32 %r93,%r93,-1;
$L30:
.loc 1 112 4
setp.lt.s32 %r225,%r93,0;
selp.u32 %r99,%r99,%r119,%r225;
selp.u32 %r100,%r100,%r93,%r225;
.loc 1 115 8
or.b32 %r226,%r100,%r99;
.loc 1 115 4
setp.eq.u32 %r227,%r226,0;
@ %r227 bra $L32;
.loc 1 117 7
setp.le.s32 %r228,%r100,1048575;
@ %r228 bra $L33;
bra $L34;
$L32:
.loc 1 116 17
cvta.const.u64 %r229,Zero;
.loc 1 116 32
shr.u32 %r230,%r120,31;
.loc 1 116 17
cvt.u64.u32 %r231,%r230;
shl.b64 %r232,%r231,3;
add.u64 %r233,%r229,%r232;
ld.f64 %r124,[%r233];
bra $L1;
$L33:
.loc 1 118 13
add.u32 %r234,%r100,%r100;
.loc 1 118 20
shr.u32 %r235,%r99,31;
.loc 1 118 16
add.u32 %r100,%r234,%r235;
.loc 1 118 30
add.u32 %r99,%r99,%r99;
.loc 1 119 9
add.u32 %r117,%r117,-1;
.loc 1 117 7
setp.le.s32 %r237,%r100,1048575;
@ %r237 bra $L33;
setp.lt.s32 %r269,%r117,-1022;
$L34:
.loc 1 121 4
@ %r269 bra $L35;
.loc 1 122 15
add.u32 %r239,%r100,-1048576;
.loc 1 123 6
or.b32 %r240,%r239,%r120;
.loc 1 122 32
add.u32 %r241,%r117,1023;
.loc 1 122 38
shl.b32 %r242,%r241,20;
.loc 1 123 6
or.b32 %r243,%r240,%r242;
cvt.u64.u32 %r244,%r243;
cvt.u64.u32 %r248,%r99;
shl.b64 %r249,%r244,32;
or.b64 %r250,%r249,%r248;
mov.b64 %r124,%r250;
bra $L1;
$L35:
.loc 1 125 8
mov.u32 %r251,-1022;
sub.u32 %r115,%r251,%r117;
.loc 1 126 8
setp.gt.s32 %r252,%r115,20;
@ %r252 bra $L36;
.loc 1 127 11
shr.u32 %r80,%r99,%r115;
.loc 1 127 36
add.u32 %r253,%r117,1054;
.loc 1 127 31
shl.b32 %r254,%r100,%r253;
.loc 1 127 6
or.b32 %r97,%r254,%r80;
.loc 1 128 6
shr.s32 %r255,%r100,%r115;
.loc 1 134 6
or.b32 %r120,%r120,%r255;
bra $L37;
$L36:
.loc 1 129 16
setp.gt.s32 %r256,%r115,31;
@ %r256 bra $L38;
.loc 1 130 24
shr.u32 %r87,%r99,%r115;
.loc 1 130 16
add.u32 %r257,%r117,1054;
.loc 1 130 11
shl.b32 %r258,%r100,%r257;
.loc 1 130 6
or.b32 %r97,%r258,%r87;
bra $L37;
$L38:
.loc 1 132 14
mov.u32 %r260,-1054;
sub.u32 %r259,%r260,%r117;
.loc 1 132 10
shr.s32 %r97,%r100,%r259;
$L37:
.loc 1 134 6
cvt.u64.u32 %r261,%r120;
cvt.u64.u32 %r265,%r97;
shl.b64 %r266,%r261,32;
or.b64 %r267,%r266,%r265;
mov.b64 %r124,%r267;
bra $L1;
$L39:
.loc 1 51 34
mov.f64 %r124,%r125;
bra $L1;
$L55:
.loc 1 111 4
sub.u32 %r93,%r100,%r91;
mov.u32 %r119,%r99;
bra $L30;
$L1:
.loc 1 138 1
mov.f64 %value,%r124;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_hypot.o/1612277259  0     0     100666  7001      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypot
.visible .func (.param .f64 %value_out) __ieee754_hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_hypot.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_hypot
.visible .func (.param .f64 %value_out) __ieee754_hypot (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r53;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r72;
.reg .u64 %r77;
.reg .u64 %r78;
.reg .u64 %r81;
.reg .u64 %r82;
.reg .f64 %r87;
.reg .f64 %r88;
.reg .f64 %r89;
.reg .u32 %r90;
.reg .f64 %r91;
.reg .u64 %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .pred %r96;
.reg .u64 %r98;
.reg .u64 %r99;
.reg .u64 %r100;
.reg .u64 %r102;
.reg .u64 %r103;
.reg .u64 %r104;
.reg .u32 %r105;
.reg .pred %r106;
.reg .pred %r107;
.reg .pred %r108;
.reg .u32 %r109;
.reg .u32 %r111;
.reg .u32 %r112;
.reg .pred %r113;
.reg .u32 %r114;
.reg .u32 %r116;
.reg .u32 %r117;
.reg .pred %r118;
.reg .u64 %r120;
.reg .u64 %r121;
.reg .u64 %r122;
.reg .u64 %r124;
.reg .u64 %r125;
.reg .u64 %r126;
.reg .pred %r127;
.reg .pred %r128;
.reg .u64 %r129;
.reg .u32 %r130;
.reg .u32 %r131;
.reg .pred %r132;
.reg .u64 %r134;
.reg .u64 %r135;
.reg .u64 %r136;
.reg .u64 %r138;
.reg .u64 %r139;
.reg .u64 %r140;
.reg .pred %r141;
.reg .u64 %r143;
.reg .f64 %r146;
.reg .f64 %r147;
.reg .f64 %r148;
.reg .f64 %r149;
.reg .f64 %r150;
.reg .f64 %r151;
.reg .f64 %r153;
.reg .u64 %r155;
.reg .u32 %r158;
.reg .u64 %r159;
.reg .u64 %r160;
.reg .f64 %r163;
.reg .f64 %r164;
.reg .f64 %r165;
.reg .f64 %r166;
.reg .f64 %r167;
.reg .f64 %r169;
.reg .pred %r170;
.reg .u32 %r171;
.reg .u32 %r172;
.reg .u64 %r173;
.reg .u64 %r174;
.reg .u64 %r178;
.reg .u64 %r179;
mov.f64 %r88,%ar0;
mov.f64 %r89,%ar1;
.loc 1 60 2
mov.b64 %r92,%r88;
shr.u64 %r93,%r92,32;
cvt.u32.u64 %r58,%r93;
.loc 1 61 5
and.b32 %r56,%r58,2147483647;
.loc 1 62 2
mov.b64 %r94,%r89;
shr.u64 %r95,%r94,32;
cvt.u32.u64 %r59,%r95;
.loc 1 63 5
and.b32 %r57,%r59,2147483647;
.loc 1 64 4
setp.ge.s32 %r96,%r56,%r57;
@ %r96 bra $L2;
mov.u32 %r90,%r56;
mov.u32 %r56,%r57;
mov.u32 %r57,%r90;
mov.f64 %r91,%r88;
.loc 1 64 16
mov.f64 %r88,%r89;
.loc 1 64 20
mov.f64 %r89,%r91;
$L2:
.loc 1 65 2
mov.b64 %r77,%r88;
cvt.u64.u32 %r178,%r56;
shl.b64 %r98,%r178,32;
and.b64 %r99,%r77,4294967295;
or.b64 %r100,%r99,%r98;
mov.b64 %r87,%r100;
.loc 1 66 2
mov.b64 %r78,%r89;
cvt.u64.u32 %r179,%r57;
shl.b64 %r102,%r179,32;
and.b64 %r103,%r78,4294967295;
or.b64 %r104,%r103,%r102;
mov.b64 %r53,%r104;
.loc 1 67 8
sub.u32 %r105,%r56,%r57;
.loc 1 67 4
setp.le.s32 %r106,%r105,62914560;
@ %r106 bra $L3;
.loc 1 67 33
add.f64 %r87,%r87,%r53;
bra $L1;
$L3:
.loc 1 69 4
setp.le.s32 %r107,%r56,1596981248;
@ %r107 bra $L13;
.loc 1 70 7
setp.le.s32 %r108,%r56,2146435071;
@ %r108 bra $L6;
.loc 1 74 16
and.b32 %r109,%r56,1048575;
.loc 1 74 25
cvt.u32.u64 %r112,%r100;
or.b32 %r111,%r109,%r112;
.loc 1 74 11
setp.eq.u32 %r113,%r111,0;
@ %r113 bra $L7;
.loc 1 72 11
add.f64 %r87,%r87,%r53;
$L7:
.loc 1 76 16
xor.b32 %r114,%r57,2146435072;
.loc 1 76 28
cvt.u32.u64 %r117,%r104;
or.b32 %r116,%r114,%r117;
.loc 1 76 11
setp.ne.u32 %r118,%r116,0;
.loc 1 76 40
selp.f64 %r87,%r87,%r53,%r118;
bra $L1;
$L6:
.loc 1 80 8
add.u32 %r56,%r56,-629145600;
.loc 1 80 26
add.u32 %r57,%r57,-629145600;
.loc 1 81 5
cvt.u64.u32 %r178,%r56;
shl.b64 %r120,%r178,32;
and.b64 %r121,%r100,4294967295;
or.b64 %r122,%r121,%r120;
mov.b64 %r87,%r122;
.loc 1 82 5
cvt.u64.u32 %r179,%r57;
shl.b64 %r124,%r179,32;
and.b64 %r125,%r104,4294967295;
or.b64 %r126,%r125,%r124;
mov.b64 %r53,%r126;
.loc 1 80 43
mov.u32 %r55,600;
bra $L5;
$L13:
.loc 1 68 3
mov.u32 %r55,0;
$L5:
.loc 1 84 4
setp.gt.s32 %r127,%r57,548405247;
@ %r127 bra $L8;
.loc 1 85 8
setp.gt.s32 %r128,%r57,1048575;
@ %r128 bra $L9;
.loc 1 88 9
mov.b64 %r129,%r53;
cvt.u32.u64 %r131,%r129;
or.b32 %r130,%r57,%r131;
.loc 1 88 5
setp.eq.u32 %r132,%r130,0;
@ %r132 bra $L1;
.loc 1 91 5
mul.f64 %r53,%r53,0d7fd0000000000000;
.loc 1 92 5
mul.f64 %r87,%r87,0d7fd0000000000000;
.loc 1 93 5
add.u32 %r55,%r55,-1022;
bra $L8;
$L9:
.loc 1 95 13
add.u32 %r56,%r56,629145600;
.loc 1 96 6
add.u32 %r57,%r57,629145600;
.loc 1 97 5
add.u32 %r55,%r55,-600;
.loc 1 98 3
mov.b64 %r81,%r87;
cvt.u64.u32 %r178,%r56;
shl.b64 %r134,%r178,32;
and.b64 %r135,%r81,4294967295;
or.b64 %r136,%r135,%r134;
mov.b64 %r87,%r136;
.loc 1 99 3
mov.b64 %r82,%r53;
cvt.u64.u32 %r179,%r57;
shl.b64 %r138,%r179,32;
and.b64 %r139,%r82,4294967295;
or.b64 %r140,%r139,%r138;
mov.b64 %r53,%r140;
$L8:
.loc 1 103 4
sub.f64 %r65,%r87,%r53;
.loc 1 104 5
setp.lt.f64 %r141,%r53,%r65;
@ ! %r141 bra $L24;
.loc 1 106 6
shl.b64 %r143,%r178,32;
mov.b64 %r70,%r143;
.loc 1 108 36
neg.f64 %r146,%r53;
.loc 1 108 45
add.f64 %r147,%r87,%r70;
.loc 1 107 9
sub.f64 %r148,%r87,%r70;
.loc 1 108 42
mul.f64 %r149,%r147,%r148;
.loc 1 108 39
neg.f64 %r150,%r149;
fma.rn.f64 %r40,%r146,%r53,%r150;
.loc 1 108 11
neg.f64 %r151,%r40;
fma.rn.f64 %r41,%r70,%r70,%r151;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r41;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r153,[%value_in];
}
mov.f64 %r87,%r153;
bra $L12;
$L24:
.loc 1 112 6
shl.b64 %r155,%r179,32;
mov.b64 %r66,%r155;
.loc 1 113 9
sub.f64 %r67,%r53,%r66;
.loc 1 115 6
add.u32 %r158,%r56,1048576;
cvt.u64.u32 %r159,%r158;
shl.b64 %r160,%r159,32;
mov.b64 %r68,%r160;
.loc 1 116 9
neg.f64 %r163,%r68;
fma.rn.f64 %r69,%r87,0d4000000000000000,%r163;
.loc 1 117 49
mul.f64 %r164,%r53,%r69;
.loc 1 117 46
fma.rn.f64 %r47,%r67,%r68,%r164;
.loc 1 117 36
neg.f64 %r165,%r65;
.loc 1 117 39
neg.f64 %r166,%r47;
fma.rn.f64 %r48,%r165,%r65,%r166;
.loc 1 117 11
neg.f64 %r167,%r48;
fma.rn.f64 %r49,%r66,%r68,%r167;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r169,[%value_in];
}
mov.f64 %r87,%r169;
$L12:
.loc 1 119 4
setp.eq.u32 %r170,%r55,0;
@ %r170 bra $L1;
.loc 1 123 6
shl.b32 %r171,%r55,20;
add.u32 %r172,%r171,1072693248;
cvt.u64.u32 %r173,%r172;
shl.b64 %r174,%r173,32;
mov.b64 %r72,%r174;
.loc 1 124 15
mul.f64 %r87,%r87,%r72;
$L1:
.loc 1 126 1
mov.f64 %value,%r87;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_j0.o/   1612277259  0     0     100666  19401     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: pzero
.func (.param .f64 %value_out) pzero (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_j0.c"
// BEGIN FUNCTION DECL: qzero
.func (.param .f64 %value_out) qzero (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0
.visible .func (.param .f64 %value_out) __ieee754_j0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0
.visible .func (.param .f64 %value_out) __ieee754_y0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN FUNCTION DEF: pzero
.func (.param .f64 %value_out) pzero (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u64 %r51;
.reg .u64 %r52;
.reg .pred %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
mov.f64 %r50,%ar0;
.loc 1 339 2
mov.b64 %r51,%r50;
shr.u64 %r52,%r51,32;
cvt.u32.u64 %r35,%r52;
.loc 1 340 5
and.b32 %r36,%r35,2147483647;
.loc 1 341 5
setp.gt.s32 %r53,%r36,1102053375;
@ %r53 bra $L4;
.loc 1 342 9
setp.gt.s32 %r54,%r36,1075838975;
@ %r54 bra $L5;
.loc 1 343 9
setp.gt.s32 %r55,%r36,1074933386;
@ %r55 bra $L6;
.loc 1 344 9
setp.le.s32 %r56,%r36,1074191212;
selp.f64 %r48,0d402d50b344391809,0d4065b296fc379081,%r56;
selp.f64 %r47,0d40633c033ab6faff,0d40919ffcb8c39b7e,%r56;
selp.f64 %r46,0d4070e78642ea079b,0d4092a66e6d1061d6,%r56;
selp.f64 %r45,0d4061069e0ee8878f,0d40769839464a7c0e,%r56;
selp.f64 %r44,0dc009de81af8fe70f,0dc03f72aca892d80f,%r56;
selp.f64 %r43,0dc02662e6c5246303,0dc04d0a22420a1a45,%r56;
selp.f64 %r42,0dc01e8af3edafa7f3,0dc035f74a4cb94e14,%r56;
selp.f64 %r41,0dbff736398a24a843,0dc00345b2aea48074,%r56;
selp.f64 %r40,0dbfb1ff62495e1e42,0dbfb1fff6f7c0e24b,%r56;
selp.f64 %r28,0d40363865908b5959,0d4041ed9284077dd3,%r56;
selp.f64 %r23,0dbe77d316e927026d,0dbe25e1036fe1aa86,%r56;
bra $L3;
$L5:
mov.f64 %r48,0d40e741774f2c49dc;
mov.f64 %r47,0d40fc810f8f9fa9bd;
mov.f64 %r46,0d40e3d2bb6eb6b05f;
mov.f64 %r45,0d40adf37d50596938;
mov.f64 %r44,0dc0b4850b36cc643d;
mov.f64 %r43,0dc0a36a6ecd4dcafc;
mov.f64 %r42,0dc07011027b19e863;
mov.f64 %r41,0dc02029d0b44fa779;
mov.f64 %r40,0dbfb1fffffffffd32;
.loc 1 342 36
mov.f64 %r28,0d405d223307a96751;
.loc 1 342 28
mov.f64 %r23,0d0000000000000000;
bra $L3;
$L6:
mov.f64 %r48,0d40a2cc1dc70be864;
mov.f64 %r47,0d40c2ccb8fa76fa38;
mov.f64 %r46,0d40b75af88fbe1d60;
mov.f64 %r45,0d40906d025c7e2864;
mov.f64 %r44,0dc075a6ef28a38bd7;
mov.f64 %r43,0dc074b3b36742cc63;
mov.f64 %r42,0dc050eb2f5a7d1783;
mov.f64 %r41,0dc010a370f90c6bbf;
mov.f64 %r40,0dbfb1ffffe69afbc6;
.loc 1 343 36
mov.f64 %r28,0d404e60810c98c5de;
.loc 1 343 28
mov.f64 %r23,0dbda918b147e495cc;
$L3:
.loc 1 346 12
mul.f64 %r57,%r50,%r50;
.loc 1 346 4
mov.f64 %r58,0d3ff0000000000000;
div.rn.f64 %r37,%r58,%r57;
.loc 1 347 42
fma.rn.f64 %r24,%r37,%r44,%r43;
.loc 1 347 34
fma.rn.f64 %r25,%r24,%r37,%r42;
.loc 1 347 26
fma.rn.f64 %r26,%r25,%r37,%r41;
.loc 1 347 18
fma.rn.f64 %r27,%r26,%r37,%r40;
.loc 1 347 4
fma.rn.f64 %r38,%r27,%r37,%r23;
.loc 1 348 41
fma.rn.f64 %r30,%r37,%r48,%r47;
.loc 1 348 33
fma.rn.f64 %r31,%r30,%r37,%r46;
.loc 1 348 25
fma.rn.f64 %r32,%r31,%r37,%r45;
.loc 1 348 17
fma.rn.f64 %r33,%r32,%r37,%r28;
.loc 1 348 4
fma.rn.f64 %r39,%r33,%r37,0d3ff0000000000000;
.loc 1 349 15
div.rn.f64 %r59,%r38,%r39;
.loc 1 349 12
add.f64 %r49,%r59,0d3ff0000000000000;
bra $L1;
$L4:
.loc 1 341 33
mov.f64 %r49,0d3ff0000000000000;
$L1:
.loc 1 350 1
mov.f64 %value,%r49;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: qzero
.func (.param .f64 %value_out) qzero (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .u64 %r54;
.reg .u64 %r55;
.reg .pred %r56;
.reg .f64 %r57;
.reg .pred %r58;
.reg .pred %r59;
.reg .pred %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
mov.f64 %r53,%ar0;
.loc 1 476 2
mov.b64 %r54,%r53;
shr.u64 %r55,%r54,32;
cvt.u32.u64 %r37,%r55;
.loc 1 477 5
and.b32 %r38,%r37,2147483647;
.loc 1 478 5
setp.le.s32 %r56,%r38,1102053375;
@ %r56 bra $L9;
.loc 1 478 38
mov.f64 %r57,0dbfc0000000000000;
div.rn.f64 %r52,%r57,%r53;
bra $L8;
$L9:
.loc 1 479 9
setp.gt.s32 %r58,%r38,1075838975;
@ %r58 bra $L12;
.loc 1 480 9
setp.gt.s32 %r59,%r38,1074933386;
@ %r59 bra $L13;
.loc 1 481 9
setp.le.s32 %r60,%r38,1074191212;
selp.f64 %r51,0dc0153e6af8b32931,0dc062a7eb201cf40f,%r60;
selp.f64 %r50,0d406a95530e001365,0d40a3a8aad94fb1c0,%r60;
selp.f64 %r49,0d408b977c9c5cc214,0d40b93c6cd7c76a28,%r60;
selp.f64 %r48,0d408a664522b3bf22,0d40acf04be44dfc63,%r60;
selp.f64 %r47,0d4070d591e4d14b40,0d40862d8386544eb3,%r60;
selp.f64 %r46,0d403040b171814bb4,0d4064d77c81fa21e0,%r60;
selp.f64 %r45,0d403faa8e29fbdc4a,0d406559dbe25efd1f,%r60;
selp.f64 %r44,0d402cfdbfaaf96fe5,0d40454f98962daedd,%r60;
selp.f64 %r43,0d3ffff897e727779c,0d400ac0fc61149cf5,%r60;
selp.f64 %r42,0d3fb2bec53e883e34,0d3fb2bfee0e8d0842,%r60;
selp.f64 %r28,0d403e5d96f7c07aed,0d40486122bfe343a6,%r60;
selp.f64 %r23,0d3e84313b54f76bdb,0d3e32cd036adecb82,%r60;
bra $L11;
$L12:
mov.f64 %r51,0dc114fd6d2c9530c5;
mov.f64 %r50,0d4129a66b28de0b3d;
mov.f64 %r49,0d412883da83a52b43;
mov.f64 %r48,0d4101665254d38c3f;
mov.f64 %r47,0d40bfa2584e6b0563;
mov.f64 %r46,0d40e212d40e901566;
mov.f64 %r45,0d40c14d993e18f46d;
mov.f64 %r44,0d40816d6315301825;
mov.f64 %r43,0d402789525bb334d6;
mov.f64 %r42,0d3fb2bffffffffe2c;
.loc 1 479 36
mov.f64 %r28,0d406478d5365b39bc;
.loc 1 479 28
mov.f64 %r23,0d0000000000000000;
bra $L11;
$L13:
mov.f64 %r51,0dc0b4ea57bedbc609;
mov.f64 %r50,0d40e191181f7a54a0;
mov.f64 %r49,0d40ebb5e397e02372;
mov.f64 %r48,0d40d267d27b591e6d;
mov.f64 %r47,0d40a03ba0da21c0ce;
mov.f64 %r46,0d409f17e953c6e3a6;
mov.f64 %r45,0d40900cf99dc8c481;
mov.f64 %r44,0d4060e3920a8788e9;
mov.f64 %r43,0d401757b0b9953dd3;
mov.f64 %r42,0d3fb2bfffd172b04c;
.loc 1 480 36
mov.f64 %r28,0d4054b1b3fb5e1543;
.loc 1 480 28
mov.f64 %r23,0d3db43d8f29cc8cd9;
$L11:
.loc 1 483 12
mul.f64 %r61,%r53,%r53;
.loc 1 483 4
mov.f64 %r62,0d3ff0000000000000;
div.rn.f64 %r39,%r62,%r61;
.loc 1 484 42
fma.rn.f64 %r24,%r39,%r46,%r45;
.loc 1 484 34
fma.rn.f64 %r25,%r24,%r39,%r44;
.loc 1 484 26
fma.rn.f64 %r26,%r25,%r39,%r43;
.loc 1 484 18
fma.rn.f64 %r27,%r26,%r39,%r42;
.loc 1 484 4
fma.rn.f64 %r40,%r27,%r39,%r23;
.loc 1 485 49
fma.rn.f64 %r30,%r39,%r51,%r50;
.loc 1 485 41
fma.rn.f64 %r31,%r30,%r39,%r49;
.loc 1 485 33
fma.rn.f64 %r32,%r31,%r39,%r48;
.loc 1 485 25
fma.rn.f64 %r33,%r32,%r39,%r47;
.loc 1 485 17
fma.rn.f64 %r34,%r33,%r39,%r28;
.loc 1 485 4
fma.rn.f64 %r41,%r34,%r39,0d3ff0000000000000;
.loc 1 486 19
div.rn.f64 %r63,%r40,%r41;
.loc 1 486 16
mov.f64 %r65,0d3fc0000000000000;
sub.f64 %r64,%r63,%r65;
.loc 1 486 22
div.rn.f64 %r52,%r64,%r53;
$L8:
.loc 1 487 1
mov.f64 %value,%r52;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_j0
.visible .func (.param .f64 %value_out) __ieee754_j0 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r29;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r56;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .u64 %r65;
.reg .u64 %r66;
.reg .pred %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r71;
.reg .u32 %r72;
.reg .pred %r73;
.reg .f64 %r75;
.reg .f64 %r77;
.reg .pred %r78;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .f64 %r89;
.reg .f64 %r91;
.reg .f64 %r92;
.reg .f64 %r93;
.reg .f64 %r95;
.reg .f64 %r96;
.reg .pred %r97;
.reg .f64 %r98;
.reg .pred %r99;
.reg .pred %r100;
.reg .f64 %r102;
.reg .pred %r103;
.reg .f64 %r104;
.reg .f64 %r105;
.reg .f64 %r107;
mov.f64 %r64,%ar0;
.loc 1 104 2
mov.b64 %r65,%r64;
shr.u64 %r66,%r65,32;
cvt.u32.u64 %r47,%r66;
.loc 1 105 5
and.b32 %r48,%r47,2147483647;
.loc 1 106 4
setp.le.s32 %r67,%r48,2146435071;
@ %r67 bra $L16;
.loc 1 106 34
mul.f64 %r68,%r64,%r64;
.loc 1 106 31
mov.f64 %r69,0d3ff0000000000000;
div.rn.f64 %r63,%r69,%r68;
bra $L15;
$L16:
.loc 1 107 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r71,[%value_in];
}
.loc 1 108 4
and.b32 %r72,%r47,1073741824;
setp.eq.u32 %r73,%r72,0;
@ %r73 bra $L18;
.loc 1 109 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r75,[%value_in];
}
.loc 1 110 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r77,[%value_in];
}
.loc 1 111 6
sub.f64 %r45,%r75,%r77;
.loc 1 112 6
add.f64 %r46,%r75,%r77;
.loc 1 113 5
setp.gt.s32 %r78,%r48,2145386495;
@ %r78 bra $L19;
.loc 1 114 12
add.f64 %r80,%r71,%r71;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r80;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r81,[%value_in];
}
.loc 1 114 9
neg.f64 %r56,%r81;
.loc 1 115 13
mul.f64 %r82,%r75,%r77;
.loc 1 115 10
setp.lt.f64 %r83,%r82,0d0000000000000000;
@ ! %r83 bra $L29;
.loc 1 115 26
div.rn.f64 %r46,%r56,%r45;
bra $L19;
$L29:
.loc 1 116 20
div.rn.f64 %r45,%r56,%r46;
$L19:
.loc 1 122 5
setp.le.s32 %r84,%r48,1207959552;
@ %r84 bra $L22;
.loc 1 122 40
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r86,[%value_in];
}
.loc 1 122 35
mul.f64 %r87,%r46,0d3fe20dd750429b6d;
.loc 1 122 23
div.rn.f64 %r63,%r87,%r86;
bra $L15;
$L22:
.loc 1 124 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),pzero,(%out_arg1);
ld.param.f64 %r89,[%value_in];
}
.loc 1 124 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),qzero,(%out_arg1);
ld.param.f64 %r91,[%value_in];
}
.loc 1 125 28
mul.f64 %r92,%r45,%r91;
.loc 1 125 26
neg.f64 %r93,%r92;
fma.rn.f64 %r29,%r46,%r89,%r93;
.loc 1 125 33
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r71;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r95,[%value_in];
}
.loc 1 125 20
mul.f64 %r96,%r29,0d3fe20dd750429b6d;
.loc 1 125 9
div.rn.f64 %r63,%r96,%r95;
bra $L15;
$L18:
.loc 1 129 4
setp.gt.s32 %r97,%r48,1059061759;
@ %r97 bra $L23;
.loc 1 130 13
add.f64 %r98,%r71,0d7e37e43c8800759c;
.loc 1 130 8
setp.gt.f64 %r99,%r98,0d3ff0000000000000;
@ ! %r99 bra $L23;
.loc 1 131 12
setp.le.s32 %r100,%r48,1044381695;
@ %r100 bra $L26;
.loc 1 132 33
mul.f64 %r102,%r71,0dbfd0000000000000;
fma.rn.f64 %r63,%r102,%r71,0d3ff0000000000000;
bra $L15;
$L23:
.loc 1 135 4
mul.f64 %r51,%r71,%r71;
.loc 1 136 27
fma.rn.f64 %r34,%r51,0dbe33d5e773d63fce,0d3ebeb1d10c503919;
.loc 1 136 20
fma.rn.f64 %r35,%r34,%r51,0dbf28e6a5b61ac6e9;
.loc 1 136 13
fma.rn.f64 %r36,%r35,%r51,0d3f8ffffffffffffd;
.loc 1 136 4
mul.f64 %r52,%r36,%r51;
.loc 1 137 31
fma.rn.f64 %r37,%r51,0d3e1408bcf4745d8f,0d3ea13b54ce84d5a9;
.loc 1 137 24
fma.rn.f64 %r38,%r37,%r51,0d3f1ea6d2dd57dbf4;
.loc 1 137 17
fma.rn.f64 %r39,%r38,%r51,0d3f8ffce882c8c2a4;
.loc 1 137 4
fma.rn.f64 %r53,%r39,%r51,0d3ff0000000000000;
.loc 1 139 30
div.rn.f64 %r62,%r52,%r53;
.loc 1 138 4
setp.gt.s32 %r103,%r48,1072693247;
@ %r103 bra $L25;
.loc 1 139 27
mov.f64 %r105,0d3fd0000000000000;
sub.f64 %r104,%r62,%r105;
.loc 1 139 17
fma.rn.f64 %r63,%r104,%r51,0d3ff0000000000000;
bra $L15;
$L25:
.loc 1 142 17
fma.rn.f64 %r41,%r71,0d3fe0000000000000,0d3ff0000000000000;
.loc 1 142 25
fma.rn.f64 %r42,%r71,0dbfe0000000000000,0d3ff0000000000000;
.loc 1 142 30
mul.f64 %r107,%r51,%r62;
.loc 1 142 28
fma.rn.f64 %r63,%r41,%r42,%r107;
bra $L15;
$L26:
.loc 1 131 35
mov.f64 %r63,0d3ff0000000000000;
$L15:
.loc 1 144 1
mov.f64 %value,%r63;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_y0
.visible .func (.param .f64 %value_out) __ieee754_y0 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r30;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .u32 %r48;
.reg .u32 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r56;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .u64 %r64;
.reg .u64 %r65;
.reg .pred %r66;
.reg .f64 %r67;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .pred %r71;
.reg .f64 %r72;
.reg .pred %r73;
.reg .f64 %r74;
.reg .u32 %r75;
.reg .pred %r76;
.reg .f64 %r78;
.reg .f64 %r80;
.reg .pred %r81;
.reg .f64 %r83;
.reg .f64 %r84;
.reg .f64 %r85;
.reg .pred %r86;
.reg .pred %r87;
.reg .f64 %r89;
.reg .f64 %r90;
.reg .f64 %r92;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .pred %r99;
.reg .f64 %r101;
.reg .f64 %r103;
.reg .f64 %r105;
.reg .f64 %r106;
mov.f64 %r63,%ar0;
.loc 1 173 2
mov.b64 %r64,%r63;
shr.u64 %r65,%r64,32;
cvt.u32.u64 %r48,%r65;
.loc 1 174 12
and.b32 %r50,%r48,2147483647;
.loc 1 176 4
setp.le.s32 %r66,%r50,2146435071;
@ %r66 bra $L31;
.loc 1 176 35
fma.rn.f64 %r22,%r63,%r63,%r63;
.loc 1 176 32
mov.f64 %r67,0d3ff0000000000000;
div.rn.f64 %r62,%r67,%r22;
bra $L30;
$L31:
.loc 1 177 15
cvt.u32.u64 %r70,%r64;
or.b32 %r69,%r50,%r70;
.loc 1 177 11
setp.ne.u32 %r71,%r69,0;
@ %r71 bra $L33;
.loc 1 177 35
mov.f64 %r72,0dbff0000000000000;
div.rn.f64 %r62,%r72,0d0000000000000000;
bra $L30;
$L33:
.loc 1 178 11
setp.ge.s32 %r73,%r48,0;
@ %r73 bra $L34;
.loc 1 178 29
mov.f64 %r74,0d0000000000000000;
div.rn.f64 %r62,%r74,%r74;
bra $L30;
$L34:
.loc 1 179 11
and.b32 %r75,%r48,1073741824;
setp.eq.u32 %r76,%r75,0;
@ %r76 bra $L35;
.loc 1 191 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r78,[%value_in];
}
.loc 1 192 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r80,[%value_in];
}
.loc 1 193 20
sub.f64 %r46,%r78,%r80;
.loc 1 194 20
add.f64 %r47,%r78,%r80;
.loc 1 199 19
setp.gt.s32 %r81,%r50,2145386495;
@ %r81 bra $L36;
.loc 1 200 26
add.f64 %r83,%r63,%r63;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r83;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r84,[%value_in];
}
.loc 1 200 23
neg.f64 %r56,%r84;
.loc 1 201 27
mul.f64 %r85,%r78,%r80;
.loc 1 201 24
setp.lt.f64 %r86,%r85,0d0000000000000000;
@ ! %r86 bra $L42;
.loc 1 201 40
div.rn.f64 %r47,%r56,%r46;
bra $L36;
$L42:
.loc 1 202 40
div.rn.f64 %r46,%r56,%r47;
$L36:
.loc 1 204 19
setp.le.s32 %r87,%r50,1207959552;
@ %r87 bra $L39;
.loc 1 204 54
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r89,[%value_in];
}
.loc 1 204 49
mul.f64 %r90,%r46,0d3fe20dd750429b6d;
.loc 1 204 37
div.rn.f64 %r62,%r90,%r89;
bra $L30;
$L39:
.loc 1 206 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),pzero,(%out_arg1);
ld.param.f64 %r92,[%value_in];
}
.loc 1 206 39
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),qzero,(%out_arg1);
ld.param.f64 %r94,[%value_in];
}
.loc 1 207 42
mul.f64 %r95,%r47,%r94;
.loc 1 207 40
fma.rn.f64 %r30,%r46,%r92,%r95;
.loc 1 207 47
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r97,[%value_in];
}
.loc 1 207 34
mul.f64 %r98,%r30,0d3fe20dd750429b6d;
.loc 1 207 23
div.rn.f64 %r62,%r98,%r97;
bra $L30;
$L35:
.loc 1 211 4
setp.gt.s32 %r99,%r50,1044381696;
@ %r99 bra $L40;
.loc 1 212 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r101,[%value_in];
}
.loc 1 212 17
fma.rn.f64 %r62,%r101,0d3fe45f306dc9c883,0dbfb2e4d699cbd01f;
bra $L30;
$L40:
.loc 1 214 4
mul.f64 %r51,%r63,%r63;
.loc 1 215 44
fma.rn.f64 %r34,%r51,0dbdc5e43d693fb3c8,0d3e5500573b4eabd4;
.loc 1 215 37
fma.rn.f64 %r35,%r34,%r51,0dbecffea773d25cad;
.loc 1 215 30
fma.rn.f64 %r36,%r35,%r51,0d3f36c54d20b29b6b;
.loc 1 215 23
fma.rn.f64 %r37,%r36,%r51,0dbf8c4ce8b16cfa97;
.loc 1 215 16
fma.rn.f64 %r38,%r37,%r51,0d3fc69d019de9e3fc;
.loc 1 215 4
fma.rn.f64 %r52,%r38,%r51,0dbfb2e4d699cbd01f;
.loc 1 216 30
fma.rn.f64 %r39,%r51,0d3dfe50183bd6d9ef,0d3e91642d7ff202fd;
.loc 1 216 23
fma.rn.f64 %r40,%r39,%r51,0d3f13ecbbf578c6c1;
.loc 1 216 16
fma.rn.f64 %r41,%r40,%r51,0d3f8a127091c9c71a;
.loc 1 216 4
fma.rn.f64 %r53,%r41,%r51,0d3ff0000000000000;
.loc 1 217 10
div.rn.f64 %r42,%r52,%r53;
.loc 1 217 20
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),__ieee754_j0,(%out_arg1);
ld.param.f64 %r103,[%value_in];
}
.loc 1 217 36
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r105,[%value_in];
}
.loc 1 217 35
mul.f64 %r106,%r103,%r105;
.loc 1 217 13
fma.rn.f64 %r62,%r106,0d3fe45f306dc9c883,%r42;
$L30:
.loc 1 218 1
mov.f64 %value,%r62;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_j1.o/   1612277259  0     0     100666  18757     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: pone
.func (.param .f64 %value_out) pone (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_j1.c"
// BEGIN FUNCTION DECL: qone
.func (.param .f64 %value_out) qone (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1
.visible .func (.param .f64 %value_out) __ieee754_j1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1
.visible .func (.param .f64 %value_out) __ieee754_y1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN FUNCTION DEF: pone
.func (.param .f64 %value_out) pone (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u64 %r51;
.reg .u64 %r52;
.reg .pred %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
mov.f64 %r50,%ar0;
.loc 1 337 2
mov.b64 %r51,%r50;
shr.u64 %r52,%r51,32;
cvt.u32.u64 %r35,%r52;
.loc 1 338 5
and.b32 %r36,%r35,2147483647;
.loc 1 339 5
setp.gt.s32 %r53,%r36,1102053375;
@ %r53 bra $L4;
.loc 1 340 9
setp.gt.s32 %r54,%r36,1075838975;
@ %r54 bra $L5;
.loc 1 341 16
setp.gt.s32 %r55,%r36,1074933386;
@ %r55 bra $L6;
.loc 1 342 16
setp.le.s32 %r56,%r36,1074191212;
selp.f64 %r48,0d4020bab1f44e5192,0d4059f26d7c2eed53,%r56;
selp.f64 %r47,0d405d6b7ada1884a9,0d408bd67da32e31e9,%r56;
selp.f64 %r46,0d406d08d8d5a2dbd9,0d40905b7c5037d523,%r56;
selp.f64 %r45,0d405f529314f92cd5,0d40750c3307f1a75f,%r56;
selp.f64 %r44,0d40144b49a574c1fe,0d4048478f8ea83ee5,%r56;
selp.f64 %r43,0d4031b1a8177f8ee2,0d4056c3854d2c1837,%r56;
selp.f64 %r42,0d40287c377f71a964,0d40418f489da6d129,%r56;
selp.f64 %r41,0d4002f2b7f98faec0,0d400f76bce85ead8a,%r56;
selp.f64 %r40,0d3fbdff42be760d83,0d3fbdfff55b21d17b,%r56;
selp.f64 %r28,0d40356fbd8ad5ecdc,0d40416549a134069c,%r56;
selp.f64 %r23,0d3e7ce9d4f65544f4,0d3e29fc21a7ad9edd,%r56;
bra $L3;
$L5:
mov.f64 %r48,0d40de1511697a0b2d;
mov.f64 %r47,0d40f7d42cb28f17bb;
mov.f64 %r46,0d40e20b8697c5bb7f;
mov.f64 %r45,0d40ac85dc964d274f;
mov.f64 %r44,0d40beea7ac32782dd;
mov.f64 %r43,0d40ae457da3a532cc;
mov.f64 %r42,0d4079c0d4652ea590;
mov.f64 %r41,0d402a7a9d357f7fce;
mov.f64 %r40,0d3fbdfffffffffcce;
.loc 1 340 36
mov.f64 %r28,0d405c8d458e656cac;
.loc 1 340 28
mov.f64 %r23,0d0000000000000000;
bra $L3;
$L6:
mov.f64 %r48,0d40978030036f5e51;
mov.f64 %r47,0d40bea4b0b8a5bb15;
mov.f64 %r46,0d40b4e9445706b6fb;
mov.f64 %r45,0d408efb361b066701;
mov.f64 %r44,0d408085b8bb7e0cb7;
mov.f64 %r43,0d40802d16d052d649;
mov.f64 %r42,0d405b13b9452602ed;
mov.f64 %r41,0d401b36046e6315e3;
mov.f64 %r40,0d3fbdffffe2c10043;
.loc 1 341 43
mov.f64 %r28,0d404da3eaa8af633d;
.loc 1 341 35
mov.f64 %r23,0d3dad0667dae1ca7d;
$L3:
.loc 1 344 19
mul.f64 %r57,%r50,%r50;
.loc 1 344 11
mov.f64 %r58,0d3ff0000000000000;
div.rn.f64 %r37,%r58,%r57;
.loc 1 345 49
fma.rn.f64 %r24,%r37,%r44,%r43;
.loc 1 345 41
fma.rn.f64 %r25,%r24,%r37,%r42;
.loc 1 345 33
fma.rn.f64 %r26,%r25,%r37,%r41;
.loc 1 345 25
fma.rn.f64 %r27,%r26,%r37,%r40;
.loc 1 345 11
fma.rn.f64 %r38,%r27,%r37,%r23;
.loc 1 346 48
fma.rn.f64 %r30,%r37,%r48,%r47;
.loc 1 346 40
fma.rn.f64 %r31,%r30,%r37,%r46;
.loc 1 346 32
fma.rn.f64 %r32,%r31,%r37,%r45;
.loc 1 346 24
fma.rn.f64 %r33,%r32,%r37,%r28;
.loc 1 346 11
fma.rn.f64 %r39,%r33,%r37,0d3ff0000000000000;
.loc 1 347 22
div.rn.f64 %r59,%r38,%r39;
.loc 1 347 19
add.f64 %r49,%r59,0d3ff0000000000000;
bra $L1;
$L4:
.loc 1 339 33
mov.f64 %r49,0d3ff0000000000000;
$L1:
.loc 1 348 1
mov.f64 %value,%r49;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: qone
.func (.param .f64 %value_out) qone (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .u64 %r54;
.reg .u64 %r55;
.reg .pred %r56;
.reg .f64 %r57;
.reg .pred %r58;
.reg .pred %r59;
.reg .pred %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
mov.f64 %r53,%ar0;
.loc 1 475 2
mov.b64 %r54,%r53;
shr.u64 %r55,%r54,32;
cvt.u32.u64 %r37,%r55;
.loc 1 476 5
and.b32 %r38,%r37,2147483647;
.loc 1 477 5
setp.le.s32 %r56,%r38,1102053375;
@ %r56 bra $L9;
.loc 1 477 37
mov.f64 %r57,0d3fd8000000000000;
div.rn.f64 %r52,%r57,%r53;
bra $L8;
$L9:
.loc 1 478 9
setp.gt.s32 %r58,%r38,1075838975;
@ %r58 bra $L12;
.loc 1 479 9
setp.gt.s32 %r59,%r38,1074933386;
@ %r59 bra $L13;
.loc 1 480 9
setp.le.s32 %r60,%r38,1074191212;
selp.f64 %r51,0dc013d686e71be86b,0dc060e670290a311f,%r60;
selp.f64 %r50,0d40637e5e3c3ed8d4,0d409dbc7a0dd4df4b,%r60;
selp.f64 %r49,0d40871b2548d4c029,0d40b5abbaa61d54a6,%r60;
selp.f64 %r48,0d4087ac05ce49a0f7,0d40aa684e448e7c9a,%r60;
selp.f64 %r47,0d406f9f68db821cba,0d40850eebc031ee3e,%r60;
selp.f64 %r46,0dc0355f3639cf6e52,0dc06b66b95f5c1bf6,%r60;
selp.f64 %r45,0dc04529a3de104aaa,0dc06c87d34718d55f,%r60;
selp.f64 %r44,0dc033a9e2c168907f,0dc04cec71c25d16da,%r60;
selp.f64 %r43,0dc006048469bb4eda,0dc01270c23302d9ff,%r60;
selp.f64 %r42,0dbfba3e8e9148b010,0dbfba3feb51aeed54,%r60;
selp.f64 %r28,0d403d888a78ae64ff,0d4047d523ccd367e4,%r60;
selp.f64 %r23,0dbe87f12644c626d2,0dbe35cfa9d38fc84f,%r60;
bra $L11;
$L12:
mov.f64 %r51,0dc111f9690ea5aa18;
mov.f64 %r50,0d412457d27719ad5c;
mov.f64 %r49,0d4125f65372869c19;
mov.f64 %r48,0d4100579ab0b75e98;
mov.f64 %r47,0d40be9162d0d88419;
mov.f64 %r46,0dc0e7a6d065d09c6a;
mov.f64 %r45,0dc0c724e740f87415;
mov.f64 %r44,0dc087bcd053e4b576;
mov.f64 %r43,0dc0304591a26779f7;
mov.f64 %r42,0dbfba3ffffffffdf3;
.loc 1 478 36
mov.f64 %r28,0d40642ca6de5bcde5;
.loc 1 478 28
mov.f64 %r23,0d0000000000000000;
bra $L11;
$L13:
mov.f64 %r51,0dc0b26f2efcffa004;
mov.f64 %r50,0d40db4b04cf7c364b;
mov.f64 %r49,0d40e8576daabad197;
mov.f64 %r48,0d40d10f1f0d64ce29;
mov.f64 %r47,0d409f1f31e77bf839;
mov.f64 %r46,0dc0a468e388fda79d;
mov.f64 %r45,0dc09574c66931734f;
mov.f64 %r44,0dc066f56d6ca7b9b0;
mov.f64 %r43,0dc0201ce6ca03ad4b;
mov.f64 %r42,0dbfba3fffcb597fef;
.loc 1 479 36
mov.f64 %r28,0d405451b2ff5a11b2;
.loc 1 479 28
mov.f64 %r23,0dbdb6fa431aa1a098;
$L11:
.loc 1 482 12
mul.f64 %r61,%r53,%r53;
.loc 1 482 4
mov.f64 %r62,0d3ff0000000000000;
div.rn.f64 %r39,%r62,%r61;
.loc 1 483 42
fma.rn.f64 %r24,%r39,%r46,%r45;
.loc 1 483 34
fma.rn.f64 %r25,%r24,%r39,%r44;
.loc 1 483 26
fma.rn.f64 %r26,%r25,%r39,%r43;
.loc 1 483 18
fma.rn.f64 %r27,%r26,%r39,%r42;
.loc 1 483 4
fma.rn.f64 %r40,%r27,%r39,%r23;
.loc 1 484 49
fma.rn.f64 %r30,%r39,%r51,%r50;
.loc 1 484 41
fma.rn.f64 %r31,%r30,%r39,%r49;
.loc 1 484 33
fma.rn.f64 %r32,%r31,%r39,%r48;
.loc 1 484 25
fma.rn.f64 %r33,%r32,%r39,%r47;
.loc 1 484 17
fma.rn.f64 %r34,%r33,%r39,%r28;
.loc 1 484 4
fma.rn.f64 %r41,%r34,%r39,0d3ff0000000000000;
.loc 1 485 18
div.rn.f64 %r63,%r40,%r41;
.loc 1 485 15
add.f64 %r64,%r63,0d3fd8000000000000;
.loc 1 485 21
div.rn.f64 %r52,%r64,%r53;
$L8:
.loc 1 486 1
mov.f64 %value,%r52;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_j1
.visible .func (.param .f64 %value_out) __ieee754_j1 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r28;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .pred %r61;
.reg .f64 %r62;
.reg .f64 %r64;
.reg .u32 %r65;
.reg .pred %r66;
.reg .f64 %r68;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .pred %r72;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .f64 %r83;
.reg .f64 %r85;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .f64 %r89;
.reg .f64 %r90;
.reg .pred %r91;
.reg .pred %r92;
.reg .f64 %r93;
.reg .pred %r94;
.reg .f64 %r95;
.reg .f64 %r96;
mov.f64 %r58,%ar0;
.loc 1 105 2
mov.b64 %r59,%r58;
shr.u64 %r60,%r59,32;
cvt.u32.u64 %r42,%r60;
.loc 1 106 5
and.b32 %r43,%r42,2147483647;
.loc 1 107 4
setp.le.s32 %r61,%r43,2146435071;
@ %r61 bra $L16;
.loc 1 107 31
mov.f64 %r62,0d3ff0000000000000;
div.rn.f64 %r57,%r62,%r58;
bra $L15;
$L16:
.loc 1 108 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r58;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r64,[%value_in];
}
.loc 1 109 4
and.b32 %r65,%r42,1073741824;
setp.eq.u32 %r66,%r65,0;
@ %r66 bra $L18;
.loc 1 110 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 111 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r70,[%value_in];
}
.loc 1 112 8
neg.f64 %r71,%r68;
.loc 1 112 6
sub.f64 %r40,%r71,%r70;
.loc 1 113 6
sub.f64 %r41,%r68,%r70;
.loc 1 114 5
setp.gt.s32 %r72,%r43,2145386495;
@ %r72 bra $L19;
.loc 1 115 11
add.f64 %r74,%r64,%r64;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r74;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r75,[%value_in];
}
.loc 1 116 13
mul.f64 %r76,%r68,%r70;
.loc 1 116 10
setp.gt.f64 %r77,%r76,0d0000000000000000;
@ ! %r77 bra $L26;
.loc 1 116 26
div.rn.f64 %r41,%r75,%r40;
bra $L19;
$L26:
.loc 1 117 20
div.rn.f64 %r40,%r75,%r41;
$L19:
.loc 1 123 5
setp.le.s32 %r78,%r43,1207959552;
@ %r78 bra $L22;
.loc 1 123 40
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r80,[%value_in];
}
.loc 1 123 35
mul.f64 %r81,%r41,0d3fe20dd750429b6d;
.loc 1 123 23
div.rn.f64 %r57,%r81,%r80;
bra $L23;
$L22:
.loc 1 125 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),pone,(%out_arg1);
ld.param.f64 %r83,[%value_in];
}
.loc 1 125 24
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),qone,(%out_arg1);
ld.param.f64 %r85,[%value_in];
}
.loc 1 126 28
mul.f64 %r86,%r40,%r85;
.loc 1 126 26
neg.f64 %r87,%r86;
fma.rn.f64 %r28,%r41,%r83,%r87;
.loc 1 126 33
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r89,[%value_in];
}
.loc 1 126 20
mul.f64 %r90,%r28,0d3fe20dd750429b6d;
.loc 1 126 9
div.rn.f64 %r57,%r90,%r89;
$L23:
.loc 1 128 5
setp.ge.s32 %r91,%r42,0;
@ %r91 bra $L15;
.loc 1 128 19
neg.f64 %r57,%r57;
bra $L15;
$L18:
.loc 1 132 31
mul.f64 %r57,%r58,0d3fe0000000000000;
.loc 1 131 4
setp.gt.s32 %r92,%r43,1044381695;
@ %r92 bra $L24;
.loc 1 132 13
add.f64 %r93,%r58,0d7e37e43c8800759c;
.loc 1 132 8
setp.gt.f64 %r94,%r93,0d3ff0000000000000;
@ %r94 bra $L15;
$L24:
.loc 1 134 4
mul.f64 %r45,%r58,%r58;
.loc 1 135 27
fma.rn.f64 %r32,%r45,0d3e6aaafa46ca0bd9,0dbef0c5c6ba169668;
.loc 1 135 20
fma.rn.f64 %r33,%r32,%r45,0d3f570d9f98472c61;
.loc 1 135 13
fma.rn.f64 %r34,%r33,%r45,0dbfb0000000000000;
.loc 1 135 4
mul.f64 %r46,%r34,%r45;
.loc 1 136 38
fma.rn.f64 %r35,%r45,0d3dab2acfcfb97ed8,0d3e35ac88c97dff2c;
.loc 1 136 31
fma.rn.f64 %r36,%r35,%r45,0d3eb3bff8333f8498;
.loc 1 136 24
fma.rn.f64 %r37,%r36,%r45,0d3f285f56b9cdf664;
.loc 1 136 17
fma.rn.f64 %r38,%r37,%r45,0d3f939d0b12637e53;
.loc 1 136 4
fma.rn.f64 %r47,%r38,%r45,0d3ff0000000000000;
.loc 1 137 4
mul.f64 %r95,%r58,%r46;
.loc 1 138 16
div.rn.f64 %r96,%r95,%r47;
.loc 1 138 14
add.f64 %r57,%r57,%r96;
$L15:
.loc 1 139 1
mov.f64 %value,%r57;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_y1
.visible .func (.param .f64 %value_out) __ieee754_y1 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r30;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r47;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u32 %r51;
.reg .u32 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .u64 %r65;
.reg .u64 %r66;
.reg .pred %r67;
.reg .f64 %r68;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .pred %r72;
.reg .f64 %r73;
.reg .pred %r74;
.reg .f64 %r75;
.reg .u32 %r76;
.reg .pred %r77;
.reg .f64 %r79;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .pred %r83;
.reg .f64 %r85;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .pred %r88;
.reg .pred %r89;
.reg .f64 %r91;
.reg .f64 %r92;
.reg .f64 %r94;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .pred %r101;
.reg .f64 %r102;
.reg .f64 %r104;
.reg .f64 %r106;
.reg .f64 %r107;
.reg .f64 %r108;
.reg .f64 %r109;
.reg .f64 %r110;
mov.f64 %r64,%ar0;
.loc 1 174 2
mov.b64 %r65,%r64;
shr.u64 %r66,%r65,32;
cvt.u32.u64 %r51,%r66;
.loc 1 175 12
and.b32 %r53,%r51,2147483647;
.loc 1 177 4
setp.le.s32 %r67,%r53,2146435071;
@ %r67 bra $L28;
.loc 1 177 35
fma.rn.f64 %r22,%r64,%r64,%r64;
.loc 1 177 32
mov.f64 %r68,0d3ff0000000000000;
div.rn.f64 %r63,%r68,%r22;
bra $L27;
$L28:
.loc 1 178 15
cvt.u32.u64 %r71,%r65;
or.b32 %r70,%r53,%r71;
.loc 1 178 11
setp.ne.u32 %r72,%r70,0;
@ %r72 bra $L30;
.loc 1 178 35
mov.f64 %r73,0dbff0000000000000;
div.rn.f64 %r63,%r73,0d0000000000000000;
bra $L27;
$L30:
.loc 1 179 11
setp.ge.s32 %r74,%r51,0;
@ %r74 bra $L31;
.loc 1 179 29
mov.f64 %r75,0d0000000000000000;
div.rn.f64 %r63,%r75,%r75;
bra $L27;
$L31:
.loc 1 180 11
and.b32 %r76,%r51,1073741824;
setp.eq.u32 %r77,%r76,0;
@ %r77 bra $L32;
.loc 1 181 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r79,[%value_in];
}
.loc 1 182 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r81,[%value_in];
}
.loc 1 183 22
neg.f64 %r82,%r79;
.loc 1 183 20
sub.f64 %r49,%r82,%r81;
.loc 1 184 20
sub.f64 %r50,%r79,%r81;
.loc 1 185 19
setp.gt.s32 %r83,%r53,2145386495;
@ %r83 bra $L33;
.loc 1 186 25
add.f64 %r85,%r64,%r64;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r85;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r86,[%value_in];
}
.loc 1 187 27
mul.f64 %r87,%r79,%r81;
.loc 1 187 24
setp.gt.f64 %r88,%r87,0d0000000000000000;
@ ! %r88 bra $L39;
.loc 1 187 40
div.rn.f64 %r50,%r86,%r49;
bra $L33;
$L39:
.loc 1 188 40
div.rn.f64 %r49,%r86,%r50;
$L33:
.loc 1 201 19
setp.le.s32 %r89,%r53,1207959552;
@ %r89 bra $L36;
.loc 1 201 54
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r91,[%value_in];
}
.loc 1 201 49
mul.f64 %r92,%r49,0d3fe20dd750429b6d;
.loc 1 201 37
div.rn.f64 %r63,%r92,%r91;
bra $L27;
$L36:
.loc 1 203 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),pone,(%out_arg1);
ld.param.f64 %r94,[%value_in];
}
.loc 1 203 38
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),qone,(%out_arg1);
ld.param.f64 %r96,[%value_in];
}
.loc 1 204 42
mul.f64 %r97,%r50,%r96;
.loc 1 204 40
fma.rn.f64 %r30,%r49,%r94,%r97;
.loc 1 204 47
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r99,[%value_in];
}
.loc 1 204 34
mul.f64 %r100,%r30,0d3fe20dd750429b6d;
.loc 1 204 23
div.rn.f64 %r63,%r100,%r99;
bra $L27;
$L32:
.loc 1 208 11
setp.gt.s32 %r101,%r53,1016070144;
@ %r101 bra $L37;
.loc 1 209 24
mov.f64 %r102,0dbfe45f306dc9c883;
div.rn.f64 %r63,%r102,%r64;
bra $L27;
$L37:
.loc 1 211 11
mul.f64 %r54,%r64,%r64;
.loc 1 212 45
fma.rn.f64 %r36,%r54,0dbe78ac00569105b8,0d3ef8ab038fa6b88e;
.loc 1 212 36
fma.rn.f64 %r37,%r36,%r54,0dbf5f55e54844f50f;
.loc 1 212 27
fma.rn.f64 %r38,%r37,%r54,0d3fa9d3c776292cd1;
.loc 1 212 11
fma.rn.f64 %r55,%r38,%r54,0dbfc91866143cbc8a;
.loc 1 213 52
fma.rn.f64 %r39,%r54,0d3db25039daca772a,0d3e3abf1d5ba69a86;
.loc 1 213 43
fma.rn.f64 %r40,%r39,%r54,0d3eb6c05a894e8ca6;
.loc 1 213 34
fma.rn.f64 %r41,%r40,%r54,0d3f2a8c896c257764;
.loc 1 213 25
fma.rn.f64 %r42,%r41,%r54,0d3f94650d3f4da9f0;
.loc 1 213 11
fma.rn.f64 %r56,%r42,%r54,0d3ff0000000000000;
.loc 1 214 20
div.rn.f64 %r43,%r55,%r56;
.loc 1 214 31
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_j1,(%out_arg1);
ld.param.f64 %r104,[%value_in];
}
.loc 1 214 47
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r64;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r106,[%value_in];
}
.loc 1 214 67
mov.f64 %r108,0d3ff0000000000000;
div.rn.f64 %r107,%r108,%r64;
.loc 1 214 63
neg.f64 %r109,%r107;
fma.rn.f64 %r47,%r104,%r106,%r109;
.loc 1 214 29
mul.f64 %r110,%r47,0d3fe45f306dc9c883;
.loc 1 214 24
fma.rn.f64 %r63,%r43,%r64,%r110;
$L27:
.loc 1 215 1
mov.f64 %value,%r63;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_jn.o/   1612277259  0     0     100666  20162     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_jn
.visible .func (.param .f64 %value_out) __ieee754_jn (.param .u32 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_jn.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_yn
.visible .func (.param .f64 %value_out) __ieee754_yn (.param .u32 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0
.extern .func (.param .f64 %value_out) __ieee754_j0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1
.extern .func (.param .f64 %value_out) __ieee754_j1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0
.extern .func (.param .f64 %value_out) __ieee754_y0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1
.extern .func (.param .f64 %value_out) __ieee754_y1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_jn
.visible .func (.param .f64 %value_out) __ieee754_jn (.param .u32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r31;
.reg .u32 %r32;
.reg .f64 %r47;
.reg .u32 %r49;
.reg .f64 %r51;
.reg .f64 %r55;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .u32 %r69;
.reg .f64 %r72;
.reg .u32 %r74;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .f64 %r82;
.reg .f64 %r83;
.reg .u32 %r84;
.reg .f64 %r87;
.reg .f64 %r89;
.reg .f64 %r92;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .f64 %r95;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .f64 %r99;
.reg .u32 %r100;
.reg .u32 %r103;
.reg .f64 %r104;
.reg .f64 %r105;
.reg .f64 %r106;
.reg .f64 %r107;
.reg .u32 %r108;
.reg .f64 %r109;
.reg .u64 %r110;
.reg .u64 %r111;
.reg .u32 %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .u32 %r116;
.reg .pred %r117;
.reg .pred %r118;
.reg .pred %r119;
.reg .f64 %r121;
.reg .pred %r122;
.reg .f64 %r124;
.reg .u32 %r126;
.reg .f64 %r128;
.reg .u32 %r129;
.reg .u32 %r131;
.reg .u32 %r132;
.reg .u32 %r134;
.reg .u32 %r135;
.reg .u16 %r136;
.reg .u16 %r137;
.reg .u16 %r138;
.reg .u32 %r139;
.reg .u16 %r140;
.reg .pred %r141;
.reg .pred %r142;
.reg .pred %r143;
.reg .pred %r144;
.reg .pred %r145;
.reg .pred %r146;
.reg .f64 %r148;
.reg .f64 %r150;
.reg .f64 %r152;
.reg .f64 %r154;
.reg .f64 %r156;
.reg .f64 %r158;
.reg .f64 %r159;
.reg .f64 %r161;
.reg .f64 %r163;
.reg .f64 %r165;
.reg .f64 %r166;
.reg .f64 %r168;
.reg .f64 %r170;
.reg .f64 %r172;
.reg .f64 %r173;
.reg .pred %r174;
.reg .pred %r175;
.reg .pred %r176;
.reg .f64 %r177;
.reg .pred %r178;
.reg .f64 %r180;
.reg .f64 %r181;
.reg .pred %r182;
.reg .f64 %r183;
.reg .pred %r184;
.reg .u32 %r185;
.reg .u32 %r187;
.reg .f64 %r189;
.reg .f64 %r190;
.reg .f64 %r191;
.reg .pred %r192;
.reg .f64 %r194;
.reg .f64 %r195;
.reg .f64 %r197;
.reg .f64 %r198;
.reg .pred %r199;
.reg .f64 %r200;
.reg .f64 %r201;
.reg .pred %r202;
.reg .f64 %r203;
.reg .f64 %r204;
.reg .pred %r205;
.reg .pred %r206;
.reg .f64 %r208;
.reg .f64 %r209;
.reg .pred %r210;
.reg .f64 %r212;
mov.u32 %r108,%ar0;
mov.f64 %r109,%ar1;
mov.b64 %r110,%r109;
shr.u64 %r111,%r110,32;
.loc 1 73 2
cvt.u32.u64 %r77,%r111;
cvt.u32.u64 %r78,%r110;
.loc 1 74 5
and.b32 %r79,%r77,2147483647;
.loc 1 76 26
neg.s32 %r113,%r78;
.loc 1 76 25
or.b32 %r114,%r113,%r78;
.loc 1 76 31
shr.u32 %r115,%r114,31;
.loc 1 76 8
or.b32 %r116,%r115,%r79;
.loc 1 76 4
setp.le.u32 %r117,%r116,2146435072;
@ %r117 bra $L2;
.loc 1 76 57
add.f64 %r107,%r109,%r109;
bra $L1;
$L2:
.loc 1 77 4
setp.ge.s32 %r118,%r108,0;
@ %r118 bra $L4;
.loc 1 78 5
neg.s32 %r108,%r108;
.loc 1 79 5
neg.f64 %r109,%r109;
.loc 1 80 6
add.u32 %r77,%r77,-2147483648;
bra $L5;
$L4:
.loc 1 82 4
setp.ne.u32 %r119,%r108,0;
@ %r119 bra $L5;
.loc 1 82 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r109;
call (%value_in),__ieee754_j0,(%out_arg1);
ld.param.f64 %r121,[%value_in];
}
mov.f64 %r107,%r121;
bra $L1;
$L5:
.loc 1 83 4
setp.ne.u32 %r122,%r108,1;
@ %r122 bra $L6;
.loc 1 83 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r109;
call (%value_in),__ieee754_j1,(%out_arg1);
ld.param.f64 %r124,[%value_in];
}
mov.f64 %r107,%r124;
bra $L1;
$L6:
.loc 1 84 6
shr.u32 %r126,%r77,31;
and.b32 %r80,%r126,%r108;
.loc 1 85 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r109;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r128,[%value_in];
}
.loc 1 86 8
or.b32 %r129,%r78,%r79;
.loc 1 86 4
set.u32.eq.u32 %r131,%r129,0;
neg.s32 %r132,%r131;
.loc 1 86 15
set.u32.gt.s32 %r134,%r79,2146435071;
neg.s32 %r135,%r134;
cvt.u16.u32 %r137,%r132;
cvt.u16.u32 %r138,%r135;
or.b16 %r136,%r137,%r138;
cvt.u32.u16 %r139,%r136;
cvt.u16.u8 %r140,%r139;
setp.ne.u16 %r141,%r140,0;
@ %r141 bra $L31;
.loc 1 88 10
cvt.rn.f64.s32 %r31,%r108;
.loc 1 88 9
setp.le.f64 %r142,%r31,%r128;
@ ! %r142 bra $L47;
.loc 1 90 8
setp.le.s32 %r143,%r79,1389363199;
@ %r143 bra $L10;
.loc 1 104 11
and.b32 %r32,%r108,3;
.loc 1 104 3
setp.eq.u32 %r144,%r32,2;
@ %r144 bra $L11;
setp.eq.u32 %r145,%r32,3;
@ %r145 bra $L12;
setp.eq.u32 %r146,%r32,1;
@ %r146 bra $L13;
.loc 1 105 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r148,[%value_in];
}
.loc 1 105 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r150,[%value_in];
}
.loc 1 105 20
add.f64 %r68,%r148,%r150;
.loc 1 105 7
bra $L14;
$L13:
.loc 1 106 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r152,[%value_in];
}
.loc 1 106 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r154,[%value_in];
}
.loc 1 106 20
sub.f64 %r68,%r152,%r154;
.loc 1 106 7
bra $L14;
$L11:
.loc 1 107 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r156,[%value_in];
}
.loc 1 107 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r158,[%value_in];
}
.loc 1 107 22
neg.f64 %r159,%r156;
.loc 1 107 20
sub.f64 %r68,%r159,%r158;
.loc 1 107 7
bra $L14;
$L12:
.loc 1 108 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r161,[%value_in];
}
.loc 1 108 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r163,[%value_in];
}
.loc 1 108 20
sub.f64 %r68,%r161,%r163;
$L14:
.loc 1 110 22
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r165,[%value_in];
}
.loc 1 110 16
mul.f64 %r166,%r68,0d3fe20dd750429b6d;
.loc 1 110 5
div.rn.f64 %r107,%r166,%r165;
bra $L7;
$L10:
.loc 1 112 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),__ieee754_j0,(%out_arg1);
ld.param.f64 %r168,[%value_in];
}
mov.f64 %r47,%r168;
.loc 1 113 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),__ieee754_j1,(%out_arg1);
ld.param.f64 %r170,[%value_in];
}
mov.f64 %r107,%r170;
add.u32 %r74,%r108,%r108;
mov.u32 %r76,2;
$L15:
neg.f64 %r105,%r47;
mov.f64 %r47,%r107;
.loc 1 116 14
cvt.rn.f64.s32 %r172,%r76;
.loc 1 116 27
div.rn.f64 %r173,%r172,%r128;
.loc 1 116 9
fma.rn.f64 %r107,%r173,%r107,%r105;
.loc 1 114 10
add.u32 %r76,%r76,2;
setp.ne.u32 %r174,%r74,%r76;
@ %r174 bra $L15;
bra $L7;
$L47:
.loc 1 121 8
setp.gt.s32 %r175,%r79,1041235967;
@ %r175 bra $L16;
.loc 1 125 5
setp.gt.s32 %r176,%r108,33;
@ %r176 bra $L32;
.loc 1 128 12
mul.f64 %r97,%r128,0d3fe0000000000000;
add.u32 %r69,%r108,1;
.loc 1 128 23
mov.f64 %r99,%r97;
.loc 1 129 13
mov.f64 %r98,0d3ff0000000000000;
.loc 1 129 19
mov.u32 %r100,2;
$L17:
.loc 1 130 9
cvt.rn.f64.s32 %r177,%r100;
.loc 1 130 6
mul.f64 %r98,%r98,%r177;
.loc 1 131 6
mul.f64 %r99,%r99,%r97;
.loc 1 129 28
add.u32 %r100,%r100,1;
.loc 1 129 7
setp.ne.u32 %r178,%r69,%r100;
@ %r178 bra $L17;
.loc 1 133 9
div.rn.f64 %r107,%r99,%r98;
bra $L7;
$L16:
.loc 1 167 10
add.u32 %r49,%r108,%r108;
.loc 1 167 13
cvt.rn.f64.s32 %r180,%r49;
.loc 1 167 6
div.rn.f64 %r51,%r180,%r128;
.loc 1 167 27
mov.f64 %r181,0d4000000000000000;
div.rn.f64 %r82,%r181,%r128;
.loc 1 168 14
add.f64 %r95,%r51,%r82;
.loc 1 168 24
fma.rn.f64 %r83,%r51,%r95,0dbff0000000000000;
.loc 1 169 8
setp.lt.f64 %r182,%r83,0d41cdcd6500000000;
@ ! %r182 bra $L48;
.loc 1 168 38
mov.u32 %r94,1;
bra $L20;
$L33:
.loc 1 173 7
mov.f64 %r83,%r96;
$L20:
.loc 1 170 6
add.u32 %r94,%r94,1;
.loc 1 170 14
add.f64 %r95,%r95,%r82;
.loc 1 171 8
neg.f64 %r183,%r51;
fma.rn.f64 %r96,%r95,%r83,%r183;
mov.f64 %r51,%r83;
.loc 1 169 8
setp.lt.f64 %r184,%r96,0d41cdcd6500000000;
@ %r184 bra $L33;
bra $L49;
$L48:
.loc 1 176 23
add.u32 %r185,%r108,1;
.loc 1 176 17
add.u32 %r84,%r185,%r185;
bra $L22;
$L49:
.loc 1 176 23
add.u32 %r187,%r94,%r108;
.loc 1 176 17
add.u32 %r84,%r187,%r187;
$L22:
.loc 1 176 8
mov.f64 %r72,0d0000000000000000;
.loc 1 176 44
mov.f64 %r191,0d3ff0000000000000;
$L23:
.loc 1 176 52
cvt.rn.f64.s32 %r189,%r84;
div.rn.f64 %r190,%r189,%r128;
.loc 1 176 54
sub.f64 %r55,%r190,%r72;
.loc 1 176 44
div.rn.f64 %r72,%r191,%r55;
.loc 1 176 36
add.u32 %r84,%r84,-2;
.loc 1 176 3
setp.le.s32 %r192,%r49,%r84;
@ %r192 bra $L23;
.loc 1 189 13
mul.f64 %r194,%r31,%r82;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r194;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r195,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r195;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r197,[%value_in];
}
.loc 1 191 16
add.u32 %r93,%r108,-1;
.loc 1 191 34
add.u32 %r103,%r49,-2;
.loc 1 189 7
mul.f64 %r198,%r31,%r197;
.loc 1 190 5
setp.lt.f64 %r199,%r198,0d40862e42fefa39ef;
@ ! %r199 bra $L50;
.loc 1 191 23
cvt.rn.f64.s32 %r92,%r103;
.loc 1 176 44
mov.f64 %r104,%r72;
.loc 1 178 5
mov.f64 %r106,0d3ff0000000000000;
.loc 1 196 7
mov.f64 %r201,0d4000000000000000;
bra $L26;
$L34:
.loc 1 194 7
mov.f64 %r106,%r67;
$L26:
.loc 1 193 6
mul.f64 %r200,%r106,%r92;
.loc 1 194 10
div.rn.f64 %r59,%r200,%r128;
.loc 1 194 7
sub.f64 %r67,%r59,%r104;
.loc 1 196 7
sub.f64 %r92,%r92,%r201;
.loc 1 191 43
add.u32 %r93,%r93,-1;
mov.f64 %r104,%r106;
.loc 1 191 11
setp.ne.u32 %r202,%r93,0;
@ %r202 bra $L34;
bra $L27;
$L50:
.loc 1 199 23
cvt.rn.f64.s32 %r89,%r103;
.loc 1 176 44
mov.f64 %r66,%r72;
.loc 1 178 5
mov.f64 %r67,0d3ff0000000000000;
.loc 1 204 7
mov.f64 %r204,0d4000000000000000;
.loc 1 209 11
mov.f64 %r212,%r67;
$L30:
.loc 1 201 6
mul.f64 %r203,%r67,%r89;
.loc 1 202 10
div.rn.f64 %r60,%r203,%r128;
.loc 1 202 7
sub.f64 %r87,%r60,%r66;
.loc 1 204 7
sub.f64 %r89,%r89,%r204;
.loc 1 206 6
setp.gt.f64 %r205,%r87,0d54b249ad2594c37d;
@ ! %r205 bra $L51;
.loc 1 207 10
div.rn.f64 %r66,%r67,%r87;
.loc 1 208 10
div.rn.f64 %r72,%r72,%r87;
.loc 1 209 11
mov.f64 %r67,%r212;
bra $L28;
$L51:
mov.f64 %r66,%r67;
.loc 1 202 7
mov.f64 %r67,%r87;
$L28:
.loc 1 199 43
add.u32 %r93,%r93,-1;
.loc 1 199 11
setp.ne.u32 %r206,%r93,0;
@ %r206 bra $L30;
$L27:
.loc 1 213 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),__ieee754_j0,(%out_arg1);
ld.param.f64 %r208,[%value_in];
}
.loc 1 213 13
mul.f64 %r209,%r208,%r72;
.loc 1 213 9
div.rn.f64 %r107,%r209,%r67;
bra $L7;
$L31:
.loc 1 87 8
mov.f64 %r107,0d0000000000000000;
bra $L7;
$L32:
mov.f64 %r107,0d0000000000000000;
$L7:
.loc 1 216 4
setp.eq.u32 %r210,%r80,0;
@ %r210 bra $L1;
.loc 1 216 20
neg.f64 %r107,%r107;
$L1:
.loc 1 217 1
mov.f64 %value,%r107;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_yn
.visible .func (.param .f64 %value_out) __ieee754_yn (.param .u32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %r33;
.reg .f64 %r48;
.reg .f64 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .f64 %r57;
.reg .u32 %r58;
.reg .f64 %r66;
.reg .u32 %r67;
.reg .f64 %r68;
.reg .u64 %r69;
.reg .u64 %r70;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .pred %r76;
.reg .u32 %r77;
.reg .pred %r78;
.reg .f64 %r79;
.reg .pred %r80;
.reg .f64 %r81;
.reg .pred %r82;
.reg .u32 %r83;
.reg .u32 %r84;
.reg .u32 %r85;
.reg .pred %r86;
.reg .f64 %r88;
.reg .pred %r89;
.reg .f64 %r91;
.reg .f64 %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .pred %r95;
.reg .pred %r96;
.reg .pred %r97;
.reg .f64 %r99;
.reg .f64 %r101;
.reg .f64 %r103;
.reg .f64 %r105;
.reg .f64 %r106;
.reg .f64 %r108;
.reg .f64 %r110;
.reg .f64 %r112;
.reg .f64 %r114;
.reg .f64 %r116;
.reg .f64 %r117;
.reg .f64 %r119;
.reg .f64 %r121;
.reg .u64 %r122;
.reg .u64 %r123;
.reg .u32 %r124;
.reg .pred %r125;
.reg .u32 %r126;
.reg .f64 %r127;
.reg .f64 %r128;
.reg .f64 %r129;
.reg .u32 %r131;
.reg .u32 %r132;
.reg .u64 %r133;
.reg .u64 %r134;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u16 %r139;
.reg .u16 %r140;
.reg .u16 %r141;
.reg .u32 %r142;
.reg .u16 %r143;
.reg .pred %r144;
.reg .pred %r145;
mov.u32 %r67,%ar0;
mov.f64 %r68,%ar1;
.loc 1 230 2
mov.b64 %r69,%r68;
shr.u64 %r70,%r69,32;
cvt.u32.u64 %r53,%r70;
cvt.u32.u64 %r54,%r69;
.loc 1 231 5
and.b32 %r55,%r53,2147483647;
.loc 1 233 26
neg.s32 %r72,%r54;
.loc 1 233 25
or.b32 %r73,%r72,%r54;
.loc 1 233 31
shr.u32 %r74,%r73,31;
.loc 1 233 8
or.b32 %r75,%r74,%r55;
.loc 1 233 4
setp.le.u32 %r76,%r75,2146435072;
@ %r76 bra $L53;
.loc 1 233 57
add.f64 %r66,%r68,%r68;
bra $L52;
$L53:
.loc 1 234 8
or.b32 %r77,%r54,%r55;
.loc 1 234 4
setp.ne.u32 %r78,%r77,0;
@ %r78 bra $L55;
.loc 1 234 28
mov.f64 %r79,0dbff0000000000000;
div.rn.f64 %r66,%r79,0d0000000000000000;
bra $L52;
$L55:
.loc 1 235 4
setp.ge.s32 %r80,%r53,0;
@ %r80 bra $L56;
.loc 1 235 22
mov.f64 %r81,0d0000000000000000;
div.rn.f64 %r66,%r81,%r81;
bra $L52;
$L56:
.loc 1 237 4
setp.ge.s32 %r82,%r67,0;
@ %r82 bra $L57;
.loc 1 238 5
neg.s32 %r67,%r67;
.loc 1 239 20
add.u32 %r83,%r67,%r67;
and.b32 %r84,%r83,2;
.loc 1 239 8
mov.u32 %r85,1;
sub.u32 %r56,%r85,%r84;
bra $L58;
$L57:
.loc 1 241 4
setp.ne.u32 %r86,%r67,0;
@ %r86 bra $L67;
.loc 1 241 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_y0,(%out_arg1);
ld.param.f64 %r88,[%value_in];
}
mov.f64 %r66,%r88;
bra $L52;
$L67:
.loc 1 236 7
mov.u32 %r56,1;
$L58:
.loc 1 242 4
setp.ne.u32 %r89,%r67,1;
@ %r89 bra $L59;
.loc 1 242 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_y1,(%out_arg1);
ld.param.f64 %r91,[%value_in];
}
.loc 1 242 22
cvt.rn.f64.s32 %r92,%r56;
mul.f64 %r66,%r92,%r91;
bra $L52;
$L59:
.loc 1 243 4
setp.eq.u32 %r93,%r55,2146435072;
@ %r93 bra $L68;
.loc 1 244 4
setp.le.s32 %r94,%r55,1389363199;
@ %r94 bra $L60;
.loc 1 258 11
and.b32 %r33,%r67,3;
.loc 1 258 3
setp.eq.u32 %r95,%r33,2;
@ %r95 bra $L61;
setp.eq.u32 %r96,%r33,3;
@ %r96 bra $L62;
setp.eq.u32 %r97,%r33,1;
@ %r97 bra $L63;
.loc 1 259 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r99,[%value_in];
}
.loc 1 259 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r101,[%value_in];
}
.loc 1 259 20
sub.f64 %r52,%r99,%r101;
.loc 1 259 7
bra $L64;
$L63:
.loc 1 260 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r103,[%value_in];
}
.loc 1 260 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r105,[%value_in];
}
.loc 1 260 22
neg.f64 %r106,%r103;
.loc 1 260 20
sub.f64 %r52,%r106,%r105;
.loc 1 260 7
bra $L64;
$L61:
.loc 1 261 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r108,[%value_in];
}
.loc 1 261 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r110,[%value_in];
}
.loc 1 261 20
sub.f64 %r52,%r108,%r110;
.loc 1 261 7
bra $L64;
$L62:
.loc 1 262 23
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r112,[%value_in];
}
.loc 1 262 30
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r114,[%value_in];
}
.loc 1 262 20
add.f64 %r52,%r112,%r114;
$L64:
.loc 1 264 22
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r116,[%value_in];
}
.loc 1 264 16
mul.f64 %r117,%r52,0d3fe20dd750429b6d;
.loc 1 264 5
div.rn.f64 %r66,%r117,%r116;
bra $L65;
$L60:
.loc 1 267 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_y0,(%out_arg1);
ld.param.f64 %r119,[%value_in];
}
mov.f64 %r48,%r119;
.loc 1 268 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r68;
call (%value_in),__ieee754_y1,(%out_arg1);
ld.param.f64 %r121,[%value_in];
}
mov.f64 %r57,%r121;
.loc 1 271 6
mov.b64 %r122,%r57;
shr.u64 %r123,%r122,32;
cvt.u32.u64 %r124,%r123;
setp.eq.u32 %r125,%r124,-1048576;
@ %r125 bra $L69;
.loc 1 271 11
mov.u32 %r58,1;
bra $L66;
$L70:
.loc 1 273 5
mov.f64 %r57,%r66;
$L66:
.loc 1 273 18
add.u32 %r126,%r58,%r58;
.loc 1 273 8
cvt.rn.f64.s32 %r127,%r126;
.loc 1 273 21
div.rn.f64 %r128,%r127,%r68;
.loc 1 273 5
neg.f64 %r129,%r48;
fma.rn.f64 %r66,%r128,%r57,%r129;
.loc 1 271 37
add.u32 %r58,%r58,1;
mov.f64 %r48,%r57;
.loc 1 271 15
set.u32.lt.s32 %r131,%r58,%r67;
neg.s32 %r132,%r131;
.loc 1 271 23
mov.b64 %r133,%r66;
shr.u64 %r134,%r133,32;
cvt.u32.u64 %r136,%r134;
set.u32.ne.u32 %r137,%r136,-1048576;
neg.s32 %r138,%r137;
.loc 1 271 17
cvt.u16.u32 %r140,%r132;
cvt.u16.u32 %r141,%r138;
and.b16 %r139,%r140,%r141;
.loc 1 271 6
cvt.u32.u16 %r142,%r139;
cvt.u16.u8 %r143,%r142;
setp.ne.u16 %r144,%r143,0;
@ %r144 bra $L70;
bra $L65;
$L69:
.loc 1 268 10
mov.f64 %r66,%r121;
$L65:
.loc 1 278 4
setp.eq.u32 %r145,%r56,1;
@ %r145 bra $L52;
.loc 1 278 35
neg.f64 %r66,%r66;
bra $L52;
$L68:
.loc 1 243 28
mov.f64 %r66,0d0000000000000000;
$L52:
.loc 1 279 1
mov.f64 %value,%r66;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_log.o/  1612277259  0     0     100666  6479      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.visible .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_log.c"
// BEGIN GLOBAL FUNCTION DEF: __ieee754_log
.visible .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r49;
.reg .f64 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r60;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .f64 %r63;
.reg .u32 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .u32 %r69;
.reg .f64 %r70;
.reg .u32 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .f64 %r78;
.reg .u32 %r79;
.reg .f64 %r82;
.reg .f64 %r85;
.reg .u64 %r86;
.reg .f64 %r87;
.reg .f64 %r88;
.reg .u64 %r89;
.reg .u64 %r90;
.reg .pred %r91;
.reg .u32 %r92;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .pred %r96;
.reg .f64 %r97;
.reg .pred %r98;
.reg .f64 %r99;
.reg .u64 %r100;
.reg .u64 %r101;
.reg .pred %r102;
.reg .u32 %r103;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .u32 %r106;
.reg .u32 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .u64 %r110;
.reg .u64 %r111;
.reg .u32 %r112;
.reg .f64 %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .pred %r118;
.reg .f64 %r119;
.reg .pred %r121;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .u32 %r126;
.reg .u32 %r127;
.reg .f64 %r128;
.reg .pred %r129;
.reg .f64 %r130;
.reg .f64 %r131;
.reg .pred %r132;
.reg .f64 %r133;
.reg .f64 %r134;
.reg .f64 %r135;
.reg .f64 %r136;
.reg .f64 %r137;
.reg .pred %r138;
.reg .f64 %r140;
.reg .f64 %r141;
mov.f64 %r88,%ar0;
mov.b64 %r89,%r88;
shr.u64 %r90,%r89,32;
cvt.u32.u64 %r79,%r90;
.loc 1 103 2
cvt.u32.u64 %r58,%r90;
.loc 1 106 5
setp.gt.s32 %r91,%r79,1048575;
@ %r91 bra $L13;
.loc 1 107 14
and.b32 %r92,%r79,2147483647;
.loc 1 107 26
cvt.u32.u64 %r95,%r89;
or.b32 %r94,%r92,%r95;
.loc 1 107 9
setp.ne.u32 %r96,%r94,0;
@ %r96 bra $L3;
.loc 1 108 16
mov.f64 %r97,0dc350000000000000;
div.rn.f64 %r87,%r97,0d0000000000000000;
bra $L1;
$L3:
.loc 1 109 9
setp.ge.s32 %r98,%r79,0;
@ %r98 bra $L5;
.loc 1 109 25
sub.f64 %r99,%r88,%r88;
.loc 1 109 28
div.rn.f64 %r87,%r99,0d0000000000000000;
bra $L1;
$L5:
.loc 1 110 17
mul.f64 %r88,%r88,0d4350000000000000;
.loc 1 111 6
mov.b64 %r100,%r88;
shr.u64 %r101,%r100,32;
cvt.u32.u64 %r58,%r101;
.loc 1 110 8
mov.u32 %r57,-54;
bra $L2;
$L13:
.loc 1 105 3
mov.u32 %r57,0;
$L2:
.loc 1 113 5
setp.le.s32 %r102,%r58,2146435071;
@ %r102 bra $L6;
.loc 1 113 32
add.f64 %r87,%r88,%r88;
bra $L1;
$L6:
.loc 1 114 10
shr.s32 %r103,%r58,20;
.loc 1 114 15
add.u32 %r104,%r103,-1023;
.loc 1 114 4
add.u32 %r60,%r104,%r57;
.loc 1 115 5
and.b32 %r61,%r58,1048575;
.loc 1 116 9
add.u32 %r105,%r61,614244;
.loc 1 116 4
and.b32 %r62,%r105,1048576;
.loc 1 117 2
mov.b64 %r86,%r88;
xor.b32 %r106,%r62,1072693248;
or.b32 %r107,%r106,%r61;
cvt.u64.u32 %r108,%r107;
shl.b64 %r109,%r108,32;
and.b64 %r110,%r86,4294967295;
or.b64 %r111,%r110,%r109;
mov.b64 %r63,%r111;
.loc 1 118 9
shr.s32 %r112,%r62,20;
.loc 1 118 4
add.u32 %r64,%r112,%r60;
.loc 1 119 4
mov.f64 %r113,0d3ff0000000000000;
sub.f64 %r65,%r63,%r113;
.loc 1 120 19
add.u32 %r114,%r61,2;
.loc 1 120 16
and.b32 %r115,%r114,1048575;
.loc 1 120 4
setp.gt.s32 %r116,%r115,2;
@ %r116 bra $L7;
.loc 1 121 13
setp.neu.f64 %r117,%r65,0d0000000000000000;
@ %r117 bra $L8;
.loc 1 121 27
setp.eq.u32 %r118,%r64,0;
@ %r118 bra $L14;
.loc 1 121 56
cvt.rn.f64.s32 %r78,%r64;
.loc 1 122 51
mul.f64 %r119,%r78,0d3dea39ef35793c76;
.loc 1 122 48
fma.rn.f64 %r87,%r78,0d3fe62e42fee00000,%r119;
bra $L1;
$L8:
.loc 1 123 11
mul.f64 %r35,%r65,%r65;
.loc 1 123 18
fma.rn.f64 %r36,%r65,0dbfd5555555555555,0d3fe0000000000000;
.loc 1 123 8
mul.f64 %r76,%r35,%r36;
.loc 1 124 8
setp.ne.u32 %r121,%r64,0;
@ %r121 bra $L9;
.loc 1 124 23
sub.f64 %r87,%r65,%r76;
bra $L1;
$L9:
.loc 1 124 35
cvt.rn.f64.s32 %r77,%r64;
.loc 1 125 32
fma.rn.f64 %r37,%r77,0dbdea39ef35793c76,%r76;
.loc 1 125 43
sub.f64 %r123,%r37,%r65;
.loc 1 125 28
neg.f64 %r124,%r123;
fma.rn.f64 %r87,%r77,0d3fe62e42fee00000,%r124;
bra $L1;
$L7:
.loc 1 127 13
add.f64 %r125,%r65,0d4000000000000000;
.loc 1 127 5
div.rn.f64 %r66,%r65,%r125;
.loc 1 128 5
cvt.rn.f64.s32 %r67,%r64;
.loc 1 129 4
mul.f64 %r68,%r66,%r66;
.loc 1 130 4
add.u32 %r69,%r61,-398458;
.loc 1 131 4
mul.f64 %r70,%r68,%r68;
.loc 1 133 19
fma.rn.f64 %r40,%r70,0d3fc39a09d078c69f,0d3fcc71c51d8e78af;
.loc 1 133 12
fma.rn.f64 %r41,%r40,%r70,0d3fd999999997fa04;
.loc 1 134 26
fma.rn.f64 %r42,%r70,0d3fc2f112df3e5244,0d3fc7466496cb03de;
.loc 1 134 19
fma.rn.f64 %r43,%r42,%r70,0d3fd2492494229359;
.loc 1 134 12
fma.rn.f64 %r44,%r43,%r70,0d3fe5555555555593;
.loc 1 132 4
mov.u32 %r127,440401;
sub.u32 %r126,%r127,%r61;
.loc 1 135 4
or.b32 %r73,%r126,%r69;
.loc 1 134 4
mul.f64 %r128,%r44,%r68;
.loc 1 136 4
fma.rn.f64 %r74,%r41,%r70,%r128;
.loc 1 137 4
setp.le.s32 %r129,%r73,0;
@ %r129 bra $L10;
.loc 1 138 14
mul.f64 %r130,%r65,0d3fe0000000000000;
.loc 1 138 10
mul.f64 %r75,%r130,%r65;
.loc 1 139 37
add.f64 %r131,%r74,%r75;
.loc 1 139 31
mul.f64 %r82,%r131,%r66;
.loc 1 139 8
setp.ne.u32 %r132,%r64,0;
@ %r132 bra $L11;
.loc 1 139 29
sub.f64 %r133,%r75,%r82;
.loc 1 139 23
sub.f64 %r87,%r65,%r133;
bra $L1;
$L11:
.loc 1 140 43
fma.rn.f64 %r49,%r67,0d3dea39ef35793c76,%r82;
.loc 1 140 31
sub.f64 %r134,%r75,%r49;
.loc 1 140 55
sub.f64 %r135,%r134,%r65;
.loc 1 140 24
neg.f64 %r136,%r135;
fma.rn.f64 %r87,%r67,0d3fe62e42fee00000,%r136;
bra $L1;
$L10:
.loc 1 142 28
sub.f64 %r137,%r65,%r74;
.loc 1 142 25
mul.f64 %r85,%r137,%r66;
.loc 1 142 8
setp.ne.u32 %r138,%r64,0;
@ %r138 bra $L12;
.loc 1 142 23
sub.f64 %r87,%r65,%r85;
bra $L1;
$L12:
.loc 1 143 34
fma.rn.f64 %r55,%r67,0dbdea39ef35793c76,%r85;
.loc 1 143 45
sub.f64 %r140,%r55,%r65;
.loc 1 143 24
neg.f64 %r141,%r140;
fma.rn.f64 %r87,%r67,0d3fe62e42fee00000,%r141;
bra $L1;
$L14:
.loc 1 121 41
mov.f64 %r87,0d0000000000000000;
$L1:
.loc 1 145 1
mov.f64 %value,%r87;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_log10.o/1612277259  0     0     100666  3208      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log10
.visible .func (.param .f64 %value_out) __ieee754_log10 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_log10.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_log10
.visible .func (.param .f64 %value_out) __ieee754_log10 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r29;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .u32 %r44;
.reg .u64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .u64 %r50;
.reg .u64 %r51;
.reg .pred %r52;
.reg .u32 %r53;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .pred %r57;
.reg .f64 %r58;
.reg .pred %r59;
.reg .f64 %r60;
.reg .u64 %r61;
.reg .u64 %r62;
.reg .pred %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .u64 %r71;
.reg .u64 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .f64 %r76;
.reg .f64 %r77;
mov.f64 %r49,%ar0;
mov.b64 %r50,%r49;
shr.u64 %r51,%r50,32;
cvt.u32.u64 %r44,%r51;
.loc 1 78 2
cvt.u32.u64 %r37,%r51;
.loc 1 81 12
setp.gt.s32 %r52,%r44,1048575;
@ %r52 bra $L7;
.loc 1 82 21
and.b32 %r53,%r44,2147483647;
.loc 1 82 33
cvt.u32.u64 %r56,%r50;
or.b32 %r55,%r53,%r56;
.loc 1 82 16
setp.ne.u32 %r57,%r55,0;
@ %r57 bra $L3;
.loc 1 83 30
mov.f64 %r58,0dc350000000000000;
div.rn.f64 %r48,%r58,0d0000000000000000;
bra $L1;
$L3:
.loc 1 84 16
setp.ge.s32 %r59,%r44,0;
@ %r59 bra $L5;
.loc 1 84 32
sub.f64 %r60,%r49,%r49;
.loc 1 84 35
div.rn.f64 %r48,%r60,0d0000000000000000;
bra $L1;
$L5:
.loc 1 85 24
mul.f64 %r49,%r49,0d4350000000000000;
.loc 1 86 6
mov.b64 %r61,%r49;
shr.u64 %r62,%r61,32;
cvt.u32.u64 %r37,%r62;
.loc 1 85 15
mov.u32 %r36,-54;
bra $L2;
$L7:
.loc 1 80 10
mov.u32 %r36,0;
$L2:
.loc 1 88 5
setp.le.s32 %r63,%r37,2146435071;
@ %r63 bra $L6;
.loc 1 88 32
add.f64 %r48,%r49,%r49;
bra $L1;
$L6:
.loc 1 89 10
shr.s32 %r64,%r37,20;
.loc 1 89 15
add.u32 %r65,%r64,-1023;
.loc 1 89 4
add.u32 %r38,%r65,%r36;
.loc 1 90 33
shr.u32 %r39,%r38,31;
.loc 1 91 17
and.b32 %r29,%r37,1048575;
.loc 1 92 24
add.u32 %r66,%r38,%r39;
.loc 1 92 12
cvt.rn.f64.s32 %r41,%r66;
.loc 1 93 2
mov.b64 %r47,%r49;
.loc 1 91 37
mov.u32 %r68,1023;
sub.u32 %r67,%r68,%r39;
.loc 1 91 40
shl.b32 %r69,%r67,20;
.loc 1 91 12
or.b32 %r70,%r69,%r29;
.loc 1 93 2
cvt.u64.u32 %r71,%r70;
shl.b64 %r72,%r71,32;
and.b64 %r73,%r47,4294967295;
or.b64 %r74,%r73,%r72;
mov.b64 %r42,%r74;
.loc 1 94 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r76,[%value_in];
}
.loc 1 94 27
mul.f64 %r77,%r76,0d3fdbcb7b1526e50e;
.loc 1 94 5
fma.rn.f64 %r43,%r41,0d3d59fef311f12b36,%r77;
.loc 1 95 11
fma.rn.f64 %r48,%r41,0d3fd34413509f6000,%r43;
$L1:
.loc 1 96 1
mov.f64 %value,%r48;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_pow.o/  1612277259  0     0     100666  26141     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_pow
.visible .func (.param .f64 %value_out) __ieee754_pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_pow.c"
.file 2 "../../../../../newlib/libm/math/../common/math_config.h"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflow
.extern .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflow
.extern .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbn
.extern .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_pow
.visible .func (.param .f64 %value_out) __ieee754_pow (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %r34;
.reg .u32 %r39;
.reg .f64 %r48;
.reg .u32 %r50;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r58;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .f64 %r79;
.reg .f64 %r81;
.reg .f64 %r83;
.reg .f64 %r85;
.reg .u32 %r86;
.reg .f64 %r87;
.reg .f64 %r91;
.reg .u32 %r105;
.reg .u32 %r122;
.reg .f64 %r127;
.reg .f64 %r128;
.reg .f64 %r129;
.reg .f64 %r130;
.reg .f64 %r131;
.reg .f64 %r134;
.reg .f64 %r135;
.reg .f64 %r136;
.reg .u32 %r139;
.reg .f64 %r140;
.reg .f64 %r141;
.reg .f64 %r142;
.reg .f64 %r143;
.reg .f64 %r144;
.reg .u32 %r145;
.reg .u32 %r146;
.reg .u32 %r147;
.reg .u32 %r148;
.reg .u32 %r149;
.reg .u32 %r150;
.reg .u32 %r153;
.reg .u32 %r154;
.reg .u32 %r155;
.reg .u32 %r157;
.reg .u32 %r158;
.reg .u32 %r159;
.reg .u32 %r160;
.reg .u32 %r161;
.reg .u32 %r163;
.reg .u32 %r165;
.reg .u32 %r166;
.reg .f64 %r167;
.reg .f64 %r168;
.reg .f64 %r169;
.reg .f64 %r170;
.reg .u32 %r171;
.reg .f64 %r172;
.reg .f64 %r173;
.reg .f64 %r174;
.reg .f64 %r175;
.reg .f64 %r176;
.reg .f64 %r177;
.reg .f64 %r179;
.reg .f64 %r181;
.reg .f64 %r182;
.reg .f64 %r183;
.reg .f64 %r185;
.reg .f64 %r186;
.reg .f64 %r189;
.reg .f64 %r191;
.reg .f64 %r192;
.reg .f64 %r193;
.reg .f64 %r194;
.reg .f64 %r195;
.reg .u32 %r196;
.reg .u32 %r198;
.reg .u32 %r199;
.reg .f64 %r200;
.reg .f64 %r201;
.reg .f64 %r202;
.reg .f64 %r203;
.reg .f64 %r204;
.reg .f64 %r205;
.reg .f64 %r206;
.reg .f64 %r208;
.reg .u32 %r209;
.reg .u32 %r210;
.reg .f64 %r219;
.reg .f64 %r224;
.reg .f64 %r225;
.reg .u32 %r226;
.reg .u64 %r241;
.reg .u64 %r242;
.reg .u64 %r243;
.reg .u64 %r245;
.reg .u64 %r246;
.reg .u64 %r247;
.reg .u64 %r248;
.reg .u64 %r250;
.reg .f64 %r252;
.reg .f64 %r253;
.reg .f64 %r254;
.reg .u64 %r255;
.reg .u64 %r256;
.reg .u32 %r258;
.reg .pred %r259;
.reg .u64 %r260;
.reg .u64 %r261;
.reg .u64 %r262;
.reg .pred %r263;
.reg .u64 %r264;
.reg .u64 %r265;
.reg .pred %r267;
.reg .u32 %r269;
.reg .u32 %r270;
.reg .u32 %r272;
.reg .u32 %r273;
.reg .u16 %r274;
.reg .u16 %r275;
.reg .u16 %r276;
.reg .u32 %r277;
.reg .u16 %r278;
.reg .pred %r279;
.reg .pred %r280;
.reg .u32 %r282;
.reg .u32 %r283;
.reg .u32 %r285;
.reg .u32 %r286;
.reg .u16 %r287;
.reg .u16 %r288;
.reg .u16 %r289;
.reg .u32 %r290;
.reg .u16 %r291;
.reg .pred %r292;
.reg .u32 %r293;
.reg .u32 %r294;
.reg .pred %r295;
.reg .u64 %r296;
.reg .u64 %r297;
.reg .u64 %r298;
.reg .pred %r299;
.reg .pred %r300;
.reg .pred %r301;
.reg .pred %r302;
.reg .u32 %r303;
.reg .pred %r304;
.reg .u32 %r305;
.reg .u32 %r306;
.reg .pred %r307;
.reg .u32 %r308;
.reg .u32 %r309;
.reg .pred %r310;
.reg .u32 %r311;
.reg .u32 %r312;
.reg .pred %r313;
.reg .u32 %r314;
.reg .u32 %r315;
.reg .pred %r316;
.reg .pred %r317;
.reg .u32 %r318;
.reg .u32 %r319;
.reg .pred %r320;
.reg .pred %r321;
.reg .pred %r322;
.reg .pred %r323;
.reg .pred %r324;
.reg .pred %r325;
.reg .f64 %r326;
.reg .pred %r327;
.reg .u32 %r329;
.reg .u32 %r330;
.reg .u32 %r332;
.reg .u32 %r333;
.reg .u16 %r335;
.reg .u16 %r336;
.reg .u16 %r337;
.reg .u32 %r338;
.reg .u16 %r339;
.reg .pred %r340;
.reg .f64 %r342;
.reg .f64 %r344;
.reg .pred %r345;
.reg .u32 %r346;
.reg .u32 %r348;
.reg .u32 %r349;
.reg .u32 %r351;
.reg .u32 %r352;
.reg .u16 %r353;
.reg .u16 %r354;
.reg .u16 %r355;
.reg .u32 %r356;
.reg .u16 %r357;
.reg .pred %r358;
.reg .pred %r359;
.reg .f64 %r360;
.reg .pred %r361;
.reg .u32 %r362;
.reg .u32 %r363;
.reg .pred %r364;
.reg .pred %r365;
.reg .u32 %r367;
.reg .pred %r368;
.reg .pred %r369;
.reg .pred %r370;
.reg .pred %r371;
.reg .pred %r372;
.reg .u32 %r373;
.reg .f64 %r374;
.reg .u32 %r375;
.reg .f64 %r376;
.reg .pred %r377;
.reg .pred %r378;
.reg .pred %r379;
.reg .pred %r380;
.reg .pred %r381;
.reg .f64 %r382;
.reg .f64 %r384;
.reg .f64 %r385;
.reg .f64 %r387;
.reg .u64 %r388;
.reg .u32 %r390;
.reg .pred %r391;
.reg .u64 %r392;
.reg .u64 %r393;
.reg .u32 %r394;
.reg .u32 %r395;
.reg .pred %r396;
.reg .pred %r397;
.reg .u64 %r398;
.reg .u64 %r399;
.reg .u64 %r400;
.reg .u64 %r401;
.reg .f64 %r402;
.reg .f64 %r403;
.reg .u64 %r404;
.reg .u32 %r405;
.reg .u32 %r406;
.reg .u32 %r407;
.reg .u32 %r408;
.reg .u64 %r409;
.reg .u64 %r410;
.reg .f64 %r413;
.reg .f64 %r414;
.reg .f64 %r416;
.reg .f64 %r417;
.reg .f64 %r418;
.reg .u64 %r419;
.reg .f64 %r421;
.reg .f64 %r422;
.reg .f64 %r423;
.reg .f64 %r424;
.reg .u64 %r425;
.reg .f64 %r427;
.reg .f64 %r428;
.reg .f64 %r429;
.reg .f64 %r430;
.reg .u64 %r431;
.reg .f64 %r433;
.reg .f64 %r434;
.reg .u32 %r435;
.reg .u32 %r436;
.reg .pred %r437;
.reg .u64 %r438;
.reg .f64 %r439;
.reg .f64 %r440;
.reg .u64 %r441;
.reg .u64 %r442;
.reg .pred %r444;
.reg .u32 %r445;
.reg .u32 %r446;
.reg .pred %r447;
.reg .u32 %r450;
.reg .u32 %r451;
.reg .f64 %r452;
.reg .f64 %r453;
.reg .f64 %r454;
.reg .pred %r455;
.reg .u32 %r458;
.reg .u32 %r459;
.reg .f64 %r460;
.reg .pred %r461;
.reg .u32 %r462;
.reg .u32 %r463;
.reg .pred %r464;
.reg .u32 %r467;
.reg .u32 %r468;
.reg .f64 %r469;
.reg .f64 %r470;
.reg .pred %r471;
.reg .u32 %r474;
.reg .u32 %r475;
.reg .f64 %r476;
.reg .pred %r477;
.reg .u32 %r478;
.reg .u32 %r479;
.reg .u32 %r480;
.reg .u32 %r481;
.reg .u32 %r482;
.reg .u32 %r483;
.reg .u32 %r484;
.reg .u32 %r485;
.reg .u32 %r486;
.reg .u64 %r487;
.reg .u64 %r488;
.reg .u32 %r491;
.reg .u32 %r492;
.reg .u32 %r493;
.reg .pred %r494;
.reg .u64 %r495;
.reg .f64 %r496;
.reg .f64 %r497;
.reg .f64 %r498;
.reg .f64 %r500;
.reg .f64 %r501;
.reg .f64 %r502;
.reg .f64 %r503;
.reg .f64 %r504;
.reg .f64 %r505;
.reg .u64 %r506;
.reg .u64 %r507;
.reg .pred %r509;
.reg .f64 %r512;
.reg .u64 %r513;
.reg .u64 %r514;
.reg .u64 %r515;
.reg .u64 %r516;
.reg .u32 %r518;
.reg .f64 %r520;
.reg .pred %r521;
.reg .u32 %r522;
.reg .u32 %r524;
.reg .u32 %r525;
.reg .u32 %r527;
.reg .u32 %r528;
.reg .u16 %r529;
.reg .u16 %r530;
.reg .u16 %r531;
.reg .u32 %r532;
.reg .u16 %r533;
.reg .pred %r534;
mov.f64 %r253,%ar0;
mov.f64 %r254,%ar1;
.loc 1 116 2
mov.b64 %r255,%r254;
shr.u64 %r256,%r255,32;
cvt.u32.u64 %r154,%r256;
cvt.u32.u64 %r163,%r255;
.loc 1 117 26
and.b32 %r155,%r154,2147483647;
.loc 1 120 8
or.b32 %r258,%r155,%r163;
.loc 1 120 4
setp.ne.u32 %r259,%r258,0;
@ %r259 bra $L2;
.loc 2 184 18
mov.b64 %r261,%r253;
xor.b64 %r260,%r261,2251799813685248;
.loc 2 184 12
add.u64 %r262,%r260,%r260;
.loc 1 121 9
setp.le.u64 %r263,%r262,-4503599627370496;
@ %r263 bra $L45;
$L5:
.loc 1 121 42
add.f64 %r252,%r253,%r254;
bra $L1;
$L2:
mov.b64 %r264,%r253;
shr.u64 %r265,%r264,32;
cvt.u32.u64 %r160,%r265;
.loc 1 115 2
cvt.u32.u64 %r153,%r265;
cvt.u32.u64 %r161,%r264;
.loc 1 117 5
and.b32 %r148,%r160,2147483647;
.loc 1 126 4
setp.gt.s32 %r267,%r148,2146435072;
@ %r267 bra $L4;
.loc 1 126 28
set.u32.eq.u32 %r269,%r148,2146435072;
neg.s32 %r270,%r269;
.loc 1 126 46
set.u32.ne.u32 %r272,%r161,0;
neg.s32 %r273,%r272;
.loc 1 126 41
cvt.u16.u32 %r275,%r270;
cvt.u16.u32 %r276,%r273;
and.b16 %r274,%r275,%r276;
.loc 1 126 21
cvt.u32.u16 %r277,%r274;
cvt.u16.u8 %r278,%r277;
setp.ne.u16 %r279,%r278,0;
@ %r279 bra $L5;
.loc 1 126 52
setp.gt.s32 %r280,%r155,2146435072;
@ %r280 bra $L4;
.loc 1 127 28
set.u32.eq.u32 %r282,%r155,2146435072;
neg.s32 %r283,%r282;
.loc 1 127 46
set.u32.ne.u32 %r285,%r163,0;
neg.s32 %r286,%r285;
.loc 1 127 41
cvt.u16.u32 %r288,%r283;
cvt.u16.u32 %r289,%r286;
and.b16 %r287,%r288,%r289;
.loc 1 127 21
cvt.u32.u16 %r290,%r287;
cvt.u16.u8 %r291,%r290;
setp.eq.u16 %r292,%r291,0;
@ %r292 bra $L6;
$L4:
.loc 1 128 13
add.u32 %r293,%r153,-1072693248;
.loc 1 128 25
or.b32 %r294,%r293,%r161;
.loc 1 128 8
setp.ne.u32 %r295,%r294,0;
@ %r295 bra $L5;
.loc 2 184 18
mov.b64 %r297,%r254;
xor.b64 %r296,%r297,2251799813685248;
.loc 2 184 12
add.u64 %r298,%r296,%r296;
.loc 1 128 33
setp.le.u64 %r299,%r298,-4503599627370496;
@ %r299 bra $L46;
bra $L5;
$L6:
.loc 1 138 4
setp.ge.s32 %r300,%r160,0;
@ %r300 bra $L47;
.loc 1 139 8
setp.gt.s32 %r301,%r155,1128267775;
@ %r301 bra $L48;
.loc 1 140 13
setp.le.s32 %r302,%r155,1072693247;
@ %r302 bra $L49;
.loc 1 141 10
shr.s32 %r303,%r155,20;
.loc 1 141 5
add.u32 %r157,%r303,-1023;
.loc 1 142 5
setp.le.s32 %r304,%r157,20;
@ %r304 bra $L8;
.loc 1 143 18
mov.u32 %r305,52;
sub.u32 %r34,%r305,%r157;
.loc 1 143 13
shr.u32 %r159,%r163,%r34;
.loc 1 144 12
shl.b32 %r306,%r159,%r34;
.loc 1 144 9
setp.ne.u32 %r307,%r306,%r163;
@ %r307 bra $L50;
.loc 1 144 40
and.b32 %r308,%r159,1;
.loc 1 144 34
mov.u32 %r309,2;
sub.u32 %r86,%r309,%r308;
bra $L7;
$L8:
.loc 1 145 12
setp.ne.u32 %r310,%r163,0;
@ %r310 bra $L9;
.loc 1 146 18
mov.u32 %r311,20;
sub.u32 %r39,%r311,%r157;
.loc 1 146 9
shr.s32 %r158,%r155,%r39;
.loc 1 147 12
shl.b32 %r312,%r158,%r39;
.loc 1 147 9
setp.ne.u32 %r313,%r312,%r155;
@ %r313 bra $L51;
.loc 1 147 40
and.b32 %r314,%r158,1;
.loc 1 147 34
mov.u32 %r315,2;
sub.u32 %r86,%r315,%r314;
bra $L12;
$L47:
.loc 1 137 10
mov.u32 %r86,0;
bra $L7;
$L48:
.loc 1 139 32
mov.u32 %r86,2;
bra $L7;
$L49:
.loc 1 137 10
mov.u32 %r86,0;
bra $L7;
$L50:
mov.u32 %r86,0;
$L7:
.loc 1 153 4
setp.ne.u32 %r316,%r163,0;
@ %r316 bra $L11;
.loc 1 154 9
setp.ne.u32 %r317,%r155,2146435072;
@ %r317 bra $L12;
.loc 1 155 17
add.u32 %r318,%r148,-1072693248;
.loc 1 155 29
or.b32 %r319,%r318,%r161;
.loc 1 155 12
setp.eq.u32 %r320,%r319,0;
@ %r320 bra $L52;
.loc 1 157 18
setp.le.s32 %r321,%r148,1072693247;
@ %r321 bra $L13;
.loc 1 158 24
setp.lt.s32 %r322,%r154,0;
selp.f64 %r252,0d0000000000000000,%r254,%r322;
bra $L1;
$L13:
.loc 1 160 23
setp.ge.s32 %r323,%r154,0;
@ %r323 bra $L54;
neg.f64 %r252,%r254;
bra $L1;
$L12:
.loc 1 162 8
setp.ne.u32 %r324,%r155,1072693248;
@ %r324 bra $L14;
.loc 1 163 5
setp.ge.s32 %r325,%r154,0;
@ %r325 bra $L55;
.loc 1 163 22
mov.f64 %r326,0d3ff0000000000000;
div.rn.f64 %r252,%r326,%r253;
bra $L1;
$L14:
.loc 1 165 8
setp.ne.u32 %r327,%r154,1073741824;
@ %r327 bra $L15;
.loc 1 165 33
mul.f64 %r252,%r253,%r253;
bra $L1;
$L15:
.loc 1 166 8
set.u32.eq.u32 %r329,%r154,1071644672;
neg.s32 %r330,%r329;
.loc 1 167 5
not.b32 %r332,%r153;
shr.u32 %r333,%r332,31;
cvt.u16.u32 %r336,%r330;
cvt.u16.u32 %r337,%r333;
and.b16 %r335,%r336,%r337;
cvt.u32.u16 %r338,%r335;
cvt.u16.u8 %r339,%r338;
setp.eq.u16 %r340,%r339,0;
@ %r340 bra $L11;
.loc 1 168 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r253;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r342,[%value_in];
}
mov.f64 %r252,%r342;
bra $L1;
$L11:
.loc 1 172 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r253;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r344,[%value_in];
}
mov.f64 %r252,%r344;
.loc 1 174 4
setp.ne.u32 %r345,%r161,0;
@ %r345 bra $L16;
.loc 1 175 30
and.b32 %r346,%r153,1073741823;
set.u32.eq.u32 %r348,%r346,1072693248;
neg.s32 %r349,%r348;
.loc 1 175 27
set.u32.eq.u32 %r351,%r148,0;
neg.s32 %r352,%r351;
.loc 1 175 30
cvt.u16.u32 %r354,%r349;
cvt.u16.u32 %r355,%r352;
or.b16 %r353,%r354,%r355;
cvt.u32.u16 %r356,%r353;
cvt.u16.u8 %r357,%r356;
setp.eq.u16 %r358,%r357,0;
@ %r358 bra $L16;
bra $L44;
$L61:
.loc 1 137 10
mov.u32 %r86,%r161;
$L44:
.loc 1 177 5
setp.ge.s32 %r359,%r154,0;
@ %r359 bra $L17;
.loc 1 177 14
mov.f64 %r360,0d3ff0000000000000;
div.rn.f64 %r252,%r360,%r252;
$L17:
.loc 1 178 5
setp.ge.s32 %r361,%r153,0;
@ %r361 bra $L1;
.loc 1 179 14
add.u32 %r362,%r148,-1072693248;
.loc 1 179 26
or.b32 %r363,%r362,%r86;
.loc 1 179 9
setp.ne.u32 %r364,%r363,0;
@ %r364 bra $L18;
.loc 1 180 10
sub.f64 %r48,%r252,%r252;
.loc 1 180 6
div.rn.f64 %r252,%r48,%r48;
bra $L1;
$L18:
.loc 1 181 16
setp.ne.u32 %r365,%r86,1;
@ %r365 bra $L1;
.loc 1 182 6
neg.f64 %r252,%r252;
bra $L1;
$L16:
.loc 1 193 27
set.u32.ge.s32 %r50,%r160,0;
.loc 1 193 30
or.b32 %r367,%r86,%r50;
.loc 1 193 4
setp.ne.u32 %r368,%r367,0;
@ %r368 bra $L19;
$L43:
.loc 1 193 52
sub.f64 %r53,%r253,%r253;
.loc 1 193 55
div.rn.f64 %r252,%r53,%r53;
bra $L1;
$L19:
.loc 1 196 4
setp.le.s32 %r369,%r155,1105199104;
@ %r369 bra $L20;
.loc 1 197 8
setp.le.s32 %r370,%r155,1139802112;
@ %r370 bra $L21;
.loc 1 198 5
setp.gt.s32 %r371,%r148,1072693247;
@ %r371 bra $L22;
.loc 1 198 52
setp.ge.s32 %r372,%r154,0;
@ %r372 bra $L23;
$L24:
.loc 1 198 37
mov.u32 %r373,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r373;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r374,[%value_in];
}
mov.f64 %r252,%r374;
bra $L1;
$L23:
.loc 1 198 53
mov.u32 %r375,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r375;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r376,[%value_in];
}
mov.f64 %r252,%r376;
bra $L1;
$L22:
.loc 1 199 52
setp.gt.s32 %r377,%r154,0;
@ %r377 bra $L24;
bra $L23;
$L21:
.loc 1 202 8
setp.gt.s32 %r378,%r148,1072693246;
@ %r378 bra $L25;
.loc 1 202 54
setp.lt.s32 %r379,%r154,0;
@ ! %r379 bra $L23;
bra $L24;
$L25:
.loc 1 203 8
setp.le.s32 %r380,%r148,1072693248;
@ %r380 bra $L26;
.loc 1 203 54
setp.gt.s32 %r381,%r154,0;
@ %r381 bra $L24;
bra $L23;
$L26:
.loc 1 206 8
mov.f64 %r382,0d3ff0000000000000;
sub.f64 %r189,%r344,%r382;
.loc 1 207 12
mul.f64 %r54,%r189,%r189;
.loc 1 207 48
fma.rn.f64 %r55,%r189,0dbfd0000000000000,0d3fd5555555555555;
.loc 1 207 20
neg.f64 %r384,%r55;
fma.rn.f64 %r56,%r384,%r189,0d3fe0000000000000;
.loc 1 207 8
mul.f64 %r385,%r54,%r56;
.loc 1 209 8
mul.f64 %r387,%r385,0dbff71547652b82fe;
fma.rn.f64 %r191,%r189,0d3e54ae0bf85ddf44,%r387;
.loc 1 210 9
fma.rn.f64 %r192,%r189,0d3ff7154760000000,%r191;
.loc 1 211 6
mov.b64 %r241,%r192;
and.b64 %r388,%r241,-4294967296;
mov.b64 %r142,%r388;
.loc 1 212 16
fma.rn.f64 %r58,%r189,0dbff7154760000000,%r142;
.loc 1 212 9
sub.f64 %r143,%r191,%r58;
bra $L27;
$L20:
.loc 1 217 8
and.b32 %r390,%r153,2146435072;
setp.ne.u32 %r391,%r390,0;
@ %r391 bra $L56;
.loc 1 218 7
mul.f64 %r252,%r344,0d4340000000000000;
.loc 1 218 26
mov.b64 %r392,%r252;
shr.u64 %r393,%r392,32;
cvt.u32.u64 %r148,%r393;
.loc 1 218 19
mov.u32 %r145,-53;
bra $L28;
$L56:
.loc 1 215 8
mov.u32 %r145,0;
$L28:
.loc 1 219 17
shr.s32 %r394,%r148,20;
.loc 1 219 22
add.u32 %r395,%r394,-1023;
.loc 1 219 9
add.u32 %r146,%r395,%r145;
.loc 1 220 9
and.b32 %r165,%r148,1048575;
.loc 1 222 9
or.b32 %r149,%r165,1072693248;
.loc 1 223 8
setp.le.s32 %r396,%r165,235662;
@ %r396 bra $L57;
.loc 1 224 13
setp.le.s32 %r397,%r165,767609;
@ %r397 bra $L58;
.loc 1 225 17
add.u32 %r146,%r146,1;
.loc 1 225 24
add.u32 %r149,%r149,-1048576;
mov.f64 %r219,0d0000000000000000;
mov.f64 %r224,%r219;
mov.u32 %r139,0;
mov.f64 %r225,0d3ff0000000000000;
bra $L29;
$L57:
mov.f64 %r219,0d0000000000000000;
mov.f64 %r224,%r219;
mov.u32 %r139,0;
mov.f64 %r225,0d3ff0000000000000;
bra $L29;
$L58:
mov.f64 %r219,0d3fe2b80340000000;
mov.f64 %r224,0d3e4cfdeb43cfd006;
mov.u32 %r139,262144;
mov.f64 %r225,0d3ff8000000000000;
$L29:
.loc 1 226 6
mov.b64 %r242,%r252;
cvt.u64.u32 %r398,%r149;
shl.b64 %r399,%r398,32;
and.b64 %r400,%r242,4294967295;
or.b64 %r401,%r400,%r399;
mov.b64 %r167,%r401;
.loc 1 229 8
sub.f64 %r168,%r167,%r225;
.loc 1 230 17
add.f64 %r402,%r167,%r225;
.loc 1 230 8
mov.f64 %r403,0d3ff0000000000000;
div.rn.f64 %r169,%r403,%r402;
.loc 1 231 8
mul.f64 %r170,%r168,%r169;
.loc 1 233 6
mov.b64 %r243,%r170;
and.b64 %r404,%r243,-4294967296;
mov.b64 %r172,%r404;
.loc 1 236 6
shr.s32 %r405,%r149,1;
or.b32 %r406,%r405,536870912;
add.u32 %r407,%r406,524288;
add.u32 %r408,%r407,%r139;
cvt.u64.u32 %r409,%r408;
shl.b64 %r410,%r409,32;
mov.b64 %r173,%r410;
.loc 1 237 21
sub.f64 %r413,%r173,%r225;
.loc 1 237 10
sub.f64 %r174,%r167,%r413;
.loc 1 238 17
neg.f64 %r414,%r172;
fma.rn.f64 %r69,%r414,%r173,%r168;
.loc 1 238 26
fma.rn.f64 %r70,%r414,%r174,%r69;
.loc 1 238 10
mul.f64 %r175,%r70,%r169;
.loc 1 240 9
mul.f64 %r176,%r170,%r170;
.loc 1 241 12
mul.f64 %r71,%r176,%r176;
.loc 1 241 47
fma.rn.f64 %r72,%r176,0d3fca7e284a454eef,0d3fcd864a93c9db65;
.loc 1 241 40
fma.rn.f64 %r73,%r72,%r176,0d3fd17460a91d4101;
.loc 1 241 33
fma.rn.f64 %r74,%r73,%r176,0d3fd55555518f264d;
.loc 1 241 26
fma.rn.f64 %r75,%r74,%r176,0d3fdb6db6db6fabff;
.loc 1 241 19
fma.rn.f64 %r76,%r75,%r176,0d3fe3333333333303;
.loc 1 242 19
add.f64 %r416,%r170,%r172;
.loc 1 242 14
mul.f64 %r417,%r416,%r175;
.loc 1 242 8
fma.rn.f64 %r177,%r71,%r76,%r417;
.loc 1 244 15
fma.rn.f64 %r79,%r172,%r172,0d4008000000000000;
.loc 1 244 10
add.f64 %r418,%r79,%r177;
.loc 1 245 6
mov.b64 %r245,%r418;
and.b64 %r419,%r245,-4294967296;
mov.b64 %r179,%r419;
.loc 1 246 19
mov.f64 %r422,0d4008000000000000;
sub.f64 %r421,%r179,%r422;
.loc 1 246 24
fma.rn.f64 %r81,%r414,%r172,%r421;
.loc 1 246 10
sub.f64 %r423,%r177,%r81;
.loc 1 249 21
mul.f64 %r424,%r423,%r170;
.loc 1 249 8
fma.rn.f64 %r181,%r175,%r179,%r424;
.loc 1 251 10
fma.rn.f64 %r182,%r172,%r179,%r181;
.loc 1 252 6
mov.b64 %r246,%r182;
and.b64 %r425,%r246,-4294967296;
mov.b64 %r183,%r425;
.loc 1 253 18
fma.rn.f64 %r83,%r414,%r179,%r183;
.loc 1 253 10
sub.f64 %r427,%r181,%r83;
.loc 1 255 24
mul.f64 %r428,%r427,0d3feec709dc3a03fd;
.loc 1 255 20
fma.rn.f64 %r85,%r183,0dbe3e2fe0145b01f5,%r428;
.loc 1 255 10
add.f64 %r185,%r85,%r224;
.loc 1 257 8
cvt.rn.f64.s32 %r186,%r146;
.loc 1 258 17
fma.rn.f64 %r87,%r183,0d3feec709e0000000,%r185;
.loc 1 258 22
add.f64 %r429,%r87,%r219;
.loc 1 258 9
add.f64 %r430,%r429,%r186;
.loc 1 259 6
mov.b64 %r247,%r430;
and.b64 %r431,%r247,-4294967296;
mov.b64 %r142,%r431;
.loc 1 260 20
sub.f64 %r433,%r142,%r186;
.loc 1 260 23
sub.f64 %r434,%r433,%r219;
.loc 1 260 32
fma.rn.f64 %r91,%r183,0dbfeec709e0000000,%r434;
.loc 1 260 9
sub.f64 %r143,%r185,%r91;
$L27:
.loc 1 264 38
add.u32 %r435,%r86,-1;
.loc 1 264 30
or.b32 %r436,%r435,%r50;
.loc 1 264 4
setp.ne.u32 %r437,%r436,0;
.loc 1 265 8
selp.f64 %r144,0d3ff0000000000000,0dbff0000000000000,%r437;
.loc 1 269 2
mov.b64 %r248,%r254;
and.b64 %r438,%r248,-4294967296;
mov.b64 %r193,%r438;
.loc 1 270 10
sub.f64 %r439,%r254,%r193;
.loc 1 270 19
mul.f64 %r440,%r143,%r254;
.loc 1 270 6
fma.rn.f64 %r194,%r439,%r142,%r440;
.loc 1 271 6
mul.f64 %r141,%r142,%r193;
.loc 1 272 4
add.f64 %r195,%r194,%r141;
mov.b64 %r441,%r195;
shr.u64 %r442,%r441,32;
cvt.u32.u64 %r166,%r442;
.loc 1 273 2
cvt.u32.u64 %r196,%r442;
cvt.u32.u64 %r171,%r441;
.loc 1 274 5
setp.le.s32 %r444,%r166,1083179007;
@ %r444 bra $L31;
.loc 1 275 12
add.u32 %r445,%r166,-1083179008;
.loc 1 275 24
or.b32 %r446,%r445,%r171;
.loc 1 275 8
setp.eq.u32 %r447,%r446,0;
@ %r447 bra $L32;
.loc 1 276 10
set.u32.lt.f64 %r450,%r144,0d0000000000000000;
neg.s32 %r451,%r450;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r451;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r452,[%value_in];
}
mov.f64 %r252,%r452;
bra $L1;
$L32:
.loc 1 278 9
add.f64 %r453,%r194,0d3c971547652b82fe;
.loc 1 278 15
sub.f64 %r454,%r195,%r141;
.loc 1 278 5
setp.gt.f64 %r455,%r453,%r454;
@ ! %r455 bra $L33;
.loc 1 278 28
set.u32.lt.f64 %r458,%r144,0d0000000000000000;
neg.s32 %r459,%r458;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r459;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r460,[%value_in];
}
mov.f64 %r252,%r460;
bra $L1;
$L31:
.loc 1 280 14
and.b32 %r105,%r166,2147483647;
.loc 1 280 11
setp.le.s32 %r461,%r105,1083231231;
@ %r461 bra $L35;
.loc 1 281 12
add.u32 %r462,%r166,1064252416;
.loc 1 281 24
or.b32 %r463,%r462,%r171;
.loc 1 281 8
setp.eq.u32 %r464,%r463,0;
@ %r464 bra $L36;
.loc 1 282 10
set.u32.lt.f64 %r467,%r144,0d0000000000000000;
neg.s32 %r468,%r467;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r468;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r469,[%value_in];
}
mov.f64 %r252,%r469;
bra $L1;
$L36:
.loc 1 284 12
sub.f64 %r470,%r195,%r141;
.loc 1 284 5
setp.ge.f64 %r471,%r470,%r194;
@ ! %r471 bra $L33;
.loc 1 284 25
set.u32.lt.f64 %r474,%r144,0d0000000000000000;
neg.s32 %r475,%r474;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r475;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r476,[%value_in];
}
mov.f64 %r252,%r476;
bra $L1;
$L35:
.loc 1 293 4
setp.le.s32 %r477,%r105,1071644672;
@ %r477 bra $L60;
.loc 1 291 8
shr.s32 %r226,%r105,20;
$L42:
.loc 1 294 27
add.u32 %r478,%r226,-1022;
.loc 1 294 23
mov.u32 %r480,1048576;
shr.s32 %r479,%r480,%r478;
.loc 1 294 8
add.u32 %r198,%r479,%r196;
.loc 1 295 25
shr.s32 %r481,%r198,20;
and.b32 %r482,%r481,2047;
.loc 1 295 8
add.u32 %r199,%r482,-1023;
.loc 1 297 6
mov.u32 %r484,1048575;
shr.s32 %r483,%r484,%r199;
not.b32 %r485,%r483;
and.b32 %r486,%r485,%r198;
cvt.u64.u32 %r487,%r486;
shl.b64 %r488,%r487,32;
mov.b64 %r200,%r488;
.loc 1 298 13
and.b32 %r491,%r198,1048575;
.loc 1 298 25
or.b32 %r122,%r491,1048576;
.loc 1 298 42
mov.u32 %r493,20;
sub.u32 %r492,%r493,%r199;
.loc 1 298 8
shr.s32 %r147,%r122,%r492;
.loc 1 299 8
setp.ge.s32 %r494,%r196,0;
@ %r494 bra $L39;
.loc 1 299 16
neg.s32 %r147,%r147;
$L39:
.loc 1 300 10
sub.f64 %r141,%r141,%r200;
.loc 1 313 9
shl.b32 %r150,%r147,20;
.loc 1 302 4
add.f64 %r195,%r194,%r141;
bra $L38;
$L60:
mov.u32 %r150,0;
.loc 1 292 4
mov.u32 %r147,%r150;
$L38:
.loc 1 303 2
mov.b64 %r250,%r195;
and.b64 %r495,%r250,-4294967296;
mov.b64 %r201,%r495;
.loc 1 305 13
sub.f64 %r496,%r201,%r141;
.loc 1 305 10
sub.f64 %r497,%r194,%r496;
.loc 1 305 25
mul.f64 %r498,%r201,0dbe205c610ca86c39;
.loc 1 305 4
fma.rn.f64 %r202,%r497,0d3fe62e42fefa39ef,%r498;
.loc 1 306 4
fma.rn.f64 %r203,%r201,0d3fe62e4300000000,%r202;
.loc 1 307 10
fma.rn.f64 %r127,%r201,0dbfe62e4300000000,%r203;
.loc 1 307 4
sub.f64 %r204,%r202,%r127;
.loc 1 308 5
mul.f64 %r205,%r203,%r203;
.loc 1 309 35
fma.rn.f64 %r128,%r205,0d3e66376972bea4d0,0dbebbbd41c5d26bf1;
.loc 1 309 29
fma.rn.f64 %r129,%r128,%r205,0d3f11566aaf25de2c;
.loc 1 309 23
fma.rn.f64 %r130,%r129,%r205,0dbf66c16c16bebd93;
.loc 1 309 17
fma.rn.f64 %r131,%r130,%r205,0d3fc555555555553e;
.loc 1 309 6
neg.f64 %r500,%r131;
fma.rn.f64 %r206,%r500,%r205,%r203;
.loc 1 310 9
mul.f64 %r501,%r203,%r206;
.loc 1 310 17
mov.f64 %r503,0d4000000000000000;
sub.f64 %r502,%r206,%r503;
.loc 1 310 13
div.rn.f64 %r134,%r501,%r502;
.loc 1 310 25
fma.rn.f64 %r135,%r203,%r204,%r204;
.loc 1 310 5
sub.f64 %r504,%r134,%r135;
.loc 1 311 13
sub.f64 %r136,%r504,%r203;
.loc 1 311 5
mov.f64 %r505,0d3ff0000000000000;
sub.f64 %r208,%r505,%r136;
.loc 1 312 2
mov.b64 %r506,%r208;
shr.u64 %r507,%r506,32;
cvt.u32.u64 %r209,%r507;
.loc 1 313 4
add.u32 %r210,%r150,%r209;
.loc 1 314 4
setp.gt.s32 %r509,%r210,1048575;
@ %r509 bra $L40;
.loc 1 314 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r208;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r147;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r512,[%value_in];
}
mov.f64 %r140,%r512;
bra $L41;
$L40:
.loc 1 315 7
cvt.u64.u32 %r513,%r210;
shl.b64 %r514,%r513,32;
and.b64 %r515,%r506,4294967295;
or.b64 %r516,%r515,%r514;
mov.b64 %r140,%r516;
$L41:
.loc 1 316 10
mul.f64 %r252,%r140,%r144;
bra $L1;
$L45:
.loc 1 122 13
mov.f64 %r252,0d3ff0000000000000;
bra $L1;
$L46:
mov.f64 %r252,0d3ff0000000000000;
bra $L1;
$L52:
mov.f64 %r252,0d3ff0000000000000;
bra $L1;
$L54:
.loc 1 158 24
mov.f64 %r252,0d0000000000000000;
bra $L1;
$L55:
.loc 1 163 38
mov.f64 %r252,%r253;
bra $L1;
$L33:
.loc 1 291 8
shr.s32 %r518,%r196,20;
and.b32 %r226,%r518,2047;
bra $L42;
$L9:
.loc 1 172 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r253;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r520,[%value_in];
}
mov.f64 %r252,%r520;
.loc 1 174 4
setp.ne.u32 %r521,%r161,0;
@ %r521 bra $L43;
.loc 1 175 30
and.b32 %r522,%r153,1073741823;
set.u32.eq.u32 %r524,%r522,1072693248;
neg.s32 %r525,%r524;
.loc 1 175 27
set.u32.eq.u32 %r527,%r148,0;
neg.s32 %r528,%r527;
.loc 1 175 30
cvt.u16.u32 %r530,%r525;
cvt.u16.u32 %r531,%r528;
or.b16 %r529,%r530,%r531;
cvt.u32.u16 %r532,%r529;
cvt.u16.u8 %r533,%r532;
setp.ne.u16 %r534,%r533,0;
@ ! %r534 bra $L43;
bra $L61;
$L51:
.loc 1 137 10
mov.u32 %r86,0;
bra $L12;
$L1:
.loc 1 317 1
mov.f64 %value,%r252;
st.param.f64 [%value_out],%value;
ret;
}

/84             1612277259  0     0     100666  10914     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2
.visible .func (.param .u32 %value_out) __ieee754_rem_pio2 (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_rem_pio2.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_rem_pio2
.extern .func (.param .u32 %value_out) __kernel_rem_pio2 (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5);
// BEGIN VAR DEF: npio2_hw
.const .align 4 .u32 npio2_hw[32] =
{1073291771,1074340347,1074977148,1075388923,1075800698,1076025724,1076231611,1076437499,1076643386,1076849274,1076971356,1077074300,1077177244,1077280187,1077383131,1077486075,1077589019,1077691962,1077794906,1077897850,1077968460,1078019932,1078071404,1078122876,1078174348,1078225820,1078277292,1078328763,1078380235,1078431707,1078483179,1078534651 };
// BEGIN VAR DEF: two_over_pi
.const .align 4 .u32 two_over_pi[66] =
{10680707,7228996,1387004,2578385,16069853,12639074,9804092,4427841,16666979,11263675,12935607,2387514,4345298,14681673,3074569,13734428,16653803,1880361,10960616,8533493,3062596,8710556,7349940,6258241,3772886,3769171,3798172,8675211,12450088,3874808,9961438,366607,15675153,9132554,7151469,3571407,2607881,12013382,4155038,6285869,7677882,13102053,15825725,473591,9065106,15363067,6271263,9264392,5636912,4652155,7056368,13614112,10155062,1944035,9527646,15080200,6658437,6231200,6832269,16767104,5075751,3212806,1398474,7579849,6349435,12618859 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_rem_pio2
.visible .func (.param .u32 %value_out) __ieee754_rem_pio2 (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.local .align 16 .b8 %frame_ar[32];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r22;
.reg .f64 %r25;
.reg .f64 %r28;
.reg .u32 %r30;
.reg .f64 %r32;
.reg .f64 %r36;
.reg .u32 %r41;
.reg .f64 %r46;
.reg .f64 %r51;
.reg .f64 %r54;
.reg .f64 %r58;
.reg .f64 %r64;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .u32 %r77;
.reg .f64 %r78;
.reg .f64 %r80;
.reg .f64 %r83;
.reg .f64 %r85;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .f64 %r88;
.reg .f64 %r92;
.reg .f64 %r93;
.reg .f64 %r94;
.reg .u32 %r95;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .u32 %r101;
.reg .f64 %r102;
.reg .u64 %r103;
.reg .u64 %r104;
.reg .u64 %r105;
.reg .pred %r106;
.reg .f64 %r107;
.reg .pred %r108;
.reg .pred %r109;
.reg .f64 %r110;
.reg .pred %r111;
.reg .f64 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r116;
.reg .f64 %r117;
.reg .f64 %r118;
.reg .f64 %r119;
.reg .pred %r121;
.reg .f64 %r122;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .pred %r126;
.reg .f64 %r128;
.reg .pred %r130;
.reg .u64 %r131;
.reg .u32 %r132;
.reg .u64 %r133;
.reg .u64 %r134;
.reg .u64 %r135;
.reg .u32 %r136;
.reg .pred %r137;
.reg .u64 %r138;
.reg .u64 %r139;
.reg .u32 %r140;
.reg .u32 %r141;
.reg .u32 %r142;
.reg .u32 %r143;
.reg .pred %r144;
.reg .f64 %r147;
.reg .f64 %r148;
.reg .u64 %r149;
.reg .u64 %r150;
.reg .u32 %r151;
.reg .u32 %r152;
.reg .u32 %r153;
.reg .u32 %r154;
.reg .pred %r155;
.reg .f64 %r158;
.reg .f64 %r159;
.reg .f64 %r160;
.reg .pred %r161;
.reg .f64 %r162;
.reg .f64 %r163;
.reg .pred %r164;
.reg .u32 %r167;
.reg .u32 %r170;
.reg .u32 %r171;
.reg .u32 %r172;
.reg .u64 %r173;
.reg .u64 %r174;
.reg .u64 %r175;
.reg .u64 %r176;
.reg .u32 %r177;
.reg .pred %r178;
.reg .pred %r179;
.reg .u32 %r184;
.reg .u64 %r185;
.reg .u32 %r186;
.reg .pred %r187;
.reg .f64 %r188;
.reg .f64 %r189;
.reg .f64 %r190;
.reg .f64 %r191;
.reg .f64 %r193;
mov.f64 %r102,%ar0;
mov.u64 %r103,%ar1;
.loc 1 98 2
mov.b64 %r104,%r102;
shr.u64 %r105,%r104,32;
cvt.u32.u64 %r74,%r105;
.loc 1 99 5
and.b32 %r75,%r74,2147483647;
.loc 1 100 4
setp.gt.s32 %r106,%r75,1072243195;
@ %r106 bra $L2;
.loc 1 101 12
st.f64 [%r103],%r102;
.loc 1 101 22
mov.f64 %r107,0d0000000000000000;
st.f64 [%r103+8],%r107;
.loc 1 101 34
mov.u32 %r101,0;
bra $L1;
$L2:
.loc 1 102 4
setp.gt.s32 %r108,%r75,1073928571;
@ %r108 bra $L4;
.loc 1 103 8
setp.le.s32 %r109,%r74,0;
@ %r109 bra $L5;
.loc 1 104 5
mov.f64 %r110,0d3ff921fb54400000;
sub.f64 %r87,%r102,%r110;
.loc 1 105 5
setp.eq.u32 %r111,%r75,1073291771;
@ %r111 bra $L6;
.loc 1 106 16
mov.f64 %r112,0d3dd0b4611a626331;
sub.f64 %r22,%r87,%r112;
.loc 1 106 12
st.f64 [%r103],%r22;
.loc 1 107 16
sub.f64 %r113,%r87,%r22;
.loc 1 107 22
sub.f64 %r114,%r113,%r112;
.loc 1 107 12
st.f64 [%r103+8],%r114;
.loc 1 113 10
mov.u32 %r101,1;
bra $L1;
$L6:
.loc 1 109 9
mov.f64 %r116,0d3dd0b4611a600000;
sub.f64 %r88,%r87,%r116;
.loc 1 110 16
mov.f64 %r117,0d3ba3198a2e037073;
sub.f64 %r25,%r88,%r117;
.loc 1 110 12
st.f64 [%r103],%r25;
.loc 1 111 16
sub.f64 %r118,%r88,%r25;
.loc 1 111 22
sub.f64 %r119,%r118,%r117;
.loc 1 111 12
st.f64 [%r103+8],%r119;
.loc 1 113 10
mov.u32 %r101,1;
bra $L1;
$L5:
.loc 1 115 5
add.f64 %r85,%r102,0d3ff921fb54400000;
.loc 1 116 5
setp.eq.u32 %r121,%r75,1073291771;
@ %r121 bra $L7;
.loc 1 117 16
add.f64 %r28,%r85,0d3dd0b4611a626331;
.loc 1 117 12
st.f64 [%r103],%r28;
.loc 1 118 16
sub.f64 %r122,%r85,%r28;
.loc 1 118 22
add.f64 %r123,%r122,0d3dd0b4611a626331;
.loc 1 118 12
st.f64 [%r103+8],%r123;
.loc 1 124 10
mov.u32 %r101,-1;
bra $L1;
$L7:
.loc 1 120 9
add.f64 %r86,%r85,0d3dd0b4611a600000;
.loc 1 121 16
add.f64 %r32,%r86,0d3ba3198a2e037073;
.loc 1 121 12
st.f64 [%r103],%r32;
.loc 1 122 16
sub.f64 %r124,%r86,%r32;
.loc 1 122 22
add.f64 %r125,%r124,0d3ba3198a2e037073;
.loc 1 122 12
st.f64 [%r103+8],%r125;
.loc 1 124 10
mov.u32 %r101,-1;
bra $L1;
$L4:
.loc 1 127 4
setp.gt.s32 %r126,%r75,1094263291;
@ %r126 bra $L8;
.loc 1 128 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r102;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r128,[%value_in];
}
.loc 1 129 33
fma.rn.f64 %r36,%r128,0d3fe45f306dc9c883,0d3fe0000000000000;
.loc 1 129 9
cvt.rzi.s32.f64 %r101,%r36;
.loc 1 130 9
cvt.rn.f64.s32 %r80,%r101;
.loc 1 131 9
neg.f64 %r193,%r80;
fma.rn.f64 %r71,%r80,0dbff921fb54400000,%r128;
.loc 1 132 9
mul.f64 %r70,%r80,0d3dd0b4611a626331;
.loc 1 133 8
setp.gt.s32 %r130,%r101,31;
@ %r130 bra $L9;
.loc 1 134 11
sub.f64 %r64,%r71,%r70;
.loc 1 133 27
cvta.const.u64 %r131,npio2_hw;
.loc 1 133 29
add.u32 %r132,%r101,-1;
.loc 1 133 27
cvt.s64.s32 %r133,%r132;
shl.b64 %r134,%r133,2;
add.u64 %r135,%r131,%r134;
.loc 1 133 13
ld.u32 %r136,[%r135];
setp.eq.u32 %r137,%r136,%r75;
@ %r137 bra $L10;
.loc 1 134 8
st.f64 [%r103],%r64;
bra $L11;
$L9:
.loc 1 134 11
sub.f64 %r64,%r71,%r70;
$L10:
.loc 1 137 13
shr.s32 %r41,%r75,20;
.loc 1 140 22
mov.b64 %r138,%r64;
shr.u64 %r139,%r138,32;
cvt.u32.u64 %r141,%r139;
shr.u32 %r140,%r141,20;
.loc 1 140 27
and.b32 %r142,%r140,2047;
.loc 1 140 15
sub.u32 %r143,%r41,%r142;
.loc 1 141 12
setp.gt.s32 %r144,%r143,16;
@ %r144 bra $L12;
.loc 1 138 15
st.f64 [%r103],%r64;
bra $L11;
$L12:
.loc 1 144 10
fma.rn.f64 %r83,%r193,0d3dd0b4611a600000,%r71;
.loc 1 145 26
sub.f64 %r147,%r71,%r83;
.loc 1 145 29
fma.rn.f64 %r46,%r193,0d3dd0b4611a600000,%r147;
.loc 1 145 10
neg.f64 %r148,%r46;
fma.rn.f64 %r70,%r80,0d3ba3198a2e037073,%r148;
.loc 1 146 15
sub.f64 %r64,%r83,%r70;
.loc 1 148 19
mov.b64 %r149,%r64;
shr.u64 %r150,%r149,32;
cvt.u32.u64 %r152,%r150;
shr.u32 %r151,%r152,20;
.loc 1 148 24
and.b32 %r153,%r151,2047;
.loc 1 148 12
sub.u32 %r154,%r41,%r153;
.loc 1 149 9
setp.gt.s32 %r155,%r154,49;
@ %r155 bra $L13;
.loc 1 146 12
st.f64 [%r103],%r64;
.loc 1 144 10
mov.f64 %r71,%r83;
bra $L11;
$L13:
.loc 1 152 11
fma.rn.f64 %r71,%r193,0d3ba3198a2e000000,%r83;
.loc 1 153 27
sub.f64 %r158,%r83,%r71;
.loc 1 153 30
fma.rn.f64 %r51,%r193,0d3ba3198a2e000000,%r158;
.loc 1 153 11
neg.f64 %r159,%r51;
fma.rn.f64 %r70,%r80,0d397b839a252049c1,%r159;
.loc 1 154 16
sub.f64 %r64,%r71,%r70;
.loc 1 154 13
st.f64 [%r103],%r64;
$L11:
.loc 1 158 15
sub.f64 %r160,%r71,%r64;
.loc 1 158 21
sub.f64 %r54,%r160,%r70;
.loc 1 158 11
st.f64 [%r103+8],%r54;
.loc 1 159 8
setp.ge.s32 %r161,%r74,0;
@ %r161 bra $L1;
.loc 1 159 24
neg.f64 %r162,%r64;
.loc 1 159 22
st.f64 [%r103],%r162;
.loc 1 159 38
neg.f64 %r163,%r54;
.loc 1 159 36
st.f64 [%r103+8],%r163;
.loc 1 159 52
neg.s32 %r101,%r101;
bra $L1;
$L8:
.loc 1 165 4
setp.le.s32 %r164,%r75,2146435071;
@ %r164 bra $L14;
.loc 1 166 17
sub.f64 %r58,%r102,%r102;
.loc 1 166 15
st.f64 [%r103+8],%r58;
.loc 1 166 10
st.f64 [%r103],%r58;
.loc 1 166 28
mov.u32 %r101,0;
bra $L1;
$L14:
.loc 1 170 2
cvt.u32.u64 %r167,%r104;
.loc 1 171 17
shr.s32 %r170,%r75,20;
.loc 1 171 6
add.u32 %r77,%r170,-1046;
.loc 1 172 2
shl.b32 %r171,%r77,20;
sub.u32 %r172,%r75,%r171;
cvt.u64.u32 %r173,%r172;
shl.b64 %r174,%r173,32;
cvt.u64.u32 %r175,%r167;
or.b64 %r176,%r175,%r174;
mov.b64 %r78,%r176;
.loc 1 174 20
cvt.rzi.s32.f64 %r177,%r78;
.loc 1 174 11
cvt.rn.f64.s32 %r92,%r177;
.loc 1 174 9
st.f64 [%frame],%r92;
.loc 1 175 13
sub.f64 %r93,%r78,%r92;
.loc 1 175 9
mul.f64 %r94,%r93,0d4170000000000000;
.loc 1 174 20
cvt.rzi.s32.f64 %r95,%r94;
.loc 1 174 11
cvt.rn.f64.s32 %r96,%r95;
.loc 1 174 9
st.f64 [%frame+8],%r96;
.loc 1 175 13
sub.f64 %r97,%r94,%r96;
.loc 1 175 9
mul.f64 %r98,%r97,0d4170000000000000;
.loc 1 177 8
st.f64 [%frame+16],%r98;
.loc 1 179 7
setp.neu.f64 %r178,%r98,0d0000000000000000;
@ %r178 bra $L16;
setp.ne.u32 %r179,%r95,0;
.loc 1 179 13
selp.u32 %r30,2,1,%r179;
bra $L15;
$L16:
.loc 1 178 5
mov.u32 %r30,3;
$L15:
.loc 1 180 8
cvta.const.u64 %r185,two_over_pi;
mov.u32 %r184,2;
{
.param .u32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r103;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r77;
.param .u32 %out_arg4;
st.param.u32 [%out_arg4],%r30;
.param .u32 %out_arg5;
st.param.u32 [%out_arg5],%r184;
.param .u64 %out_arg6;
st.param.u64 [%out_arg6],%r185;
call (%value_in),__kernel_rem_pio2,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5,%out_arg6);
ld.param.u32 %r186,[%value_in];
}
mov.u32 %r101,%r186;
.loc 1 181 4
setp.ge.s32 %r187,%r74,0;
@ %r187 bra $L1;
.loc 1 181 19
ld.f64 %r189,[%r103];
neg.f64 %r188,%r189;
.loc 1 181 17
st.f64 [%r103],%r188;
.loc 1 181 33
ld.f64 %r191,[%r103+8];
neg.f64 %r190,%r191;
.loc 1 181 31
st.f64 [%r103+8],%r190;
.loc 1 181 47
neg.s32 %r101,%r101;
$L1:
.loc 1 183 1
mov.u32 %value,%r101;
st.param.u32 [%value_out],%value;
ret;
}
/104            1612277259  0     0     100666  4649      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_remainder
.visible .func (.param .f64 %value_out) __ieee754_remainder (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_remainder.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmod
.extern .func (.param .f64 %value_out) __ieee754_fmod (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_remainder
.visible .func (.param .f64 %value_out) __ieee754_remainder (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r25;
.reg .f64 %r29;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .u32 %r41;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .f64 %r46;
.reg .u32 %r47;
.reg .u32 %r50;
.reg .u64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .u64 %r56;
.reg .u64 %r57;
.reg .u32 %r59;
.reg .pred %r60;
.reg .u64 %r61;
.reg .u64 %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .pred %r67;
.reg .pred %r68;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .u32 %r73;
.reg .u64 %r74;
.reg .u32 %r75;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .pred %r78;
.reg .f64 %r80;
.reg .f64 %r82;
.reg .u32 %r83;
.reg .pred %r84;
.reg .f64 %r85;
.reg .pred %r86;
.reg .f64 %r87;
.reg .pred %r88;
.reg .pred %r89;
.reg .pred %r90;
.reg .u32 %r91;
.reg .u64 %r93;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .u64 %r98;
.reg .u64 %r99;
mov.f64 %r54,%ar0;
mov.f64 %r55,%ar1;
.loc 1 46 2
mov.b64 %r56,%r55;
shr.u64 %r57,%r56,32;
cvt.u32.u64 %r41,%r57;
cvt.u32.u64 %r50,%r56;
.loc 1 48 5
and.b32 %r43,%r41,2147483647;
.loc 1 52 8
or.b32 %r59,%r43,%r50;
.loc 1 52 4
setp.ne.u32 %r60,%r59,0;
@ %r60 bra $L2;
.loc 1 52 26
mul.f64 %r25,%r54,%r55;
.loc 1 52 29
div.rn.f64 %r53,%r25,%r25;
bra $L1;
$L2:
mov.b64 %r61,%r54;
shr.u64 %r62,%r61,32;
cvt.u32.u64 %r47,%r62;
.loc 1 49 5
and.b32 %r44,%r47,2147483647;
.loc 1 53 4
setp.gt.s32 %r63,%r44,2146435071;
@ %r63 bra $L4;
.loc 1 53 21
setp.le.s32 %r64,%r43,2146435071;
@ %r64 bra $L5;
.loc 1 55 9
add.u32 %r65,%r43,-2146435072;
.loc 1 55 21
or.b32 %r66,%r65,%r50;
.loc 1 54 21
setp.eq.u32 %r67,%r66,0;
@ %r67 bra $L6;
$L4:
.loc 1 56 15
mul.f64 %r29,%r54,%r55;
.loc 1 56 18
div.rn.f64 %r53,%r29,%r29;
bra $L1;
$L5:
.loc 1 59 5
setp.gt.s32 %r68,%r43,2145386495;
@ %r68 bra $L14;
.loc 1 59 26
add.f64 %r71,%r55,%r55;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r54;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r71;
call (%value_in),__ieee754_fmod,(%out_arg1,%out_arg2);
ld.param.f64 %r72,[%value_in];
}
mov.f64 %r38,%r72;
bra $L7;
$L14:
mov.f64 %r38,%r54;
$L7:
.loc 1 60 10
sub.u32 %r73,%r44,%r43;
.loc 1 60 18
mov.b64 %r74,%r54;
cvt.u32.u64 %r76,%r74;
sub.u32 %r75,%r76,%r50;
.loc 1 60 14
or.b32 %r77,%r73,%r75;
.loc 1 60 5
setp.ne.u32 %r78,%r77,0;
@ %r78 bra $L15;
.loc 1 60 39
mul.f64 %r53,%r38,0d0000000000000000;
bra $L1;
$L15:
mov.f64 %r54,%r38;
$L6:
.loc 1 61 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r54;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r80,[%value_in];
}
mov.f64 %r39,%r80;
.loc 1 62 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r55;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r82,[%value_in];
}
.loc 1 63 5
and.b32 %r83,%r41,2145386496;
setp.ne.u32 %r84,%r83,0;
@ %r84 bra $L8;
.loc 1 64 10
add.f64 %r85,%r39,%r39;
.loc 1 64 8
setp.gt.f64 %r86,%r85,%r82;
@ ! %r86 bra $L9;
.loc 1 65 4
sub.f64 %r39,%r39,%r82;
.loc 1 66 7
add.f64 %r87,%r39,%r39;
.loc 1 66 5
setp.ge.f64 %r88,%r87,%r82;
@ ! %r88 bra $L9;
.loc 1 66 16
sub.f64 %r39,%r39,%r82;
bra $L9;
$L8:
.loc 1 69 13
mul.f64 %r46,%r82,0d3fe0000000000000;
.loc 1 70 8
setp.gt.f64 %r89,%r39,%r46;
@ ! %r89 bra $L9;
.loc 1 71 4
sub.f64 %r39,%r39,%r82;
.loc 1 72 5
setp.le.f64 %r90,%r46,%r39;
@ ! %r90 bra $L9;
.loc 1 72 19
sub.f64 %r39,%r39,%r82;
$L9:
.loc 1 76 2
mov.b64 %r52,%r39;
.loc 1 47 5
and.b32 %r91,%r47,-2147483648;
.loc 1 76 2
shr.u64 %r93,%r52,32;
cvt.u32.u64 %r95,%r93;
xor.b32 %r94,%r91,%r95;
cvt.u64.u32 %r96,%r94;
shl.b64 %r97,%r96,32;
and.b64 %r98,%r52,4294967295;
or.b64 %r99,%r98,%r97;
mov.b64 %r53,%r99;
$L1:
.loc 1 78 1
mov.f64 %value,%r53;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-e_scalb.o/1612277259  0     0     100666  3190      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalb
.visible .func (.param .f64 %value_out) __ieee754_scalb (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/e_scalb.c"
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: rint
.extern .func (.param .f64 %value_out) rint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbn
.extern .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_scalb
.visible .func (.param .f64 %value_out) __ieee754_scalb (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r25;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .pred %r30;
.reg .u32 %r32;
.reg .pred %r33;
.reg .pred %r34;
.reg .f64 %r35;
.reg .f64 %r37;
.reg .pred %r38;
.reg .pred %r39;
.reg .u32 %r41;
.reg .f64 %r42;
.reg .pred %r43;
.reg .u32 %r45;
.reg .f64 %r46;
.reg .u32 %r49;
.reg .f64 %r50;
mov.f64 %r28,%ar0;
mov.f64 %r29,%ar1;
.loc 1 43 5
setp.num.f64 %r30,%r28,%r29;
@ %r30 bra $L2;
$L5:
.loc 1 43 35
mul.f64 %r27,%r28,%r29;
bra $L1;
$L2:
.loc 1 44 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r32,[%value_in];
}
.loc 1 44 5
setp.ne.u32 %r33,%r32,0;
@ %r33 bra $L4;
.loc 1 45 8
setp.gt.f64 %r34,%r29,0d0000000000000000;
@ %r34 bra $L5;
.loc 1 46 25
neg.f64 %r35,%r28;
div.rn.f64 %r27,%r35,%r29;
bra $L1;
$L4:
.loc 1 48 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
call (%value_in),rint,(%out_arg1);
ld.param.f64 %r37,[%value_in];
}
.loc 1 48 5
setp.eq.f64 %r38,%r37,%r29;
@ %r38 bra $L6;
.loc 1 48 30
sub.f64 %r25,%r29,%r29;
.loc 1 48 34
div.rn.f64 %r27,%r25,%r25;
bra $L1;
$L6:
.loc 1 53 5
setp.gt.f64 %r39,%r29,0d40efbd0000000000;
@ ! %r39 bra $L13;
.loc 1 53 28
mov.u32 %r41,65000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r41;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r42,[%value_in];
}
mov.f64 %r27,%r42;
bra $L1;
$L13:
.loc 1 54 5
setp.lt.f64 %r43,%r29,0dc0efbd0000000000;
@ ! %r43 bra $L14;
.loc 1 54 28
mov.u32 %r45,-65000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r45;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r46,[%value_in];
}
mov.f64 %r27,%r46;
bra $L1;
$L14:
.loc 1 56 9
cvt.rzi.s32.f64 %r49,%r29;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r49;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
mov.f64 %r27,%r50;
$L1:
.loc 1 58 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_sinh.o/ 1612277259  0     0     100666  5030      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sinh
.visible .func (.param .f64 %value_out) __ieee754_sinh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_sinh.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1
.extern .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.extern .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_sinh
.visible .func (.param .f64 %value_out) __ieee754_sinh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r27;
.reg .f64 %r38;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r44;
.reg .f64 %r45;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .u64 %r50;
.reg .u64 %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .f64 %r56;
.reg .pred %r57;
.reg .f64 %r59;
.reg .f64 %r61;
.reg .pred %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .pred %r70;
.reg .f64 %r72;
.reg .f64 %r74;
.reg .pred %r76;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .u32 %r81;
.reg .u32 %r82;
.reg .u16 %r83;
.reg .u16 %r84;
.reg .u16 %r85;
.reg .u32 %r86;
.reg .u16 %r87;
.reg .pred %r88;
.reg .f64 %r90;
.reg .f64 %r92;
.reg .f64 %r93;
.reg .f64 %r94;
.reg .f64 %r97;
.reg .f64 %r99;
mov.f64 %r49,%ar0;
.loc 1 54 2
mov.b64 %r50,%r49;
shr.u64 %r51,%r50,32;
cvt.u32.u64 %r39,%r51;
.loc 1 55 5
and.b32 %r40,%r39,2147483647;
.loc 1 58 4
setp.le.s32 %r52,%r40,2146435071;
@ %r52 bra $L2;
.loc 1 58 29
add.f64 %r48,%r49,%r49;
bra $L1;
$L2:
.loc 1 61 5
setp.ge.s32 %r53,%r39,0;
.loc 1 61 14
selp.f64 %r38,0d3fe0000000000000,0dbfe0000000000000,%r53;
.loc 1 63 5
setp.gt.s32 %r54,%r40,1077280767;
@ %r54 bra $L5;
.loc 1 64 9
setp.gt.s32 %r55,%r40,1043333119;
@ %r55 bra $L6;
.loc 1 65 11
add.f64 %r56,%r49,0d7fac7b1f3cac7433;
.loc 1 65 5
setp.gt.f64 %r57,%r56,0d3ff0000000000000;
@ ! %r57 bra $L15;
bra $L14;
$L6:
.loc 1 66 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r59,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r59;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r61,[%value_in];
}
mov.f64 %r45,%r61;
.loc 1 67 8
setp.gt.s32 %r62,%r40,1072693247;
@ %r62 bra $L8;
$L12:
.loc 1 67 41
mul.f64 %r63,%r45,%r45;
.loc 1 67 46
add.f64 %r64,%r45,0d3ff0000000000000;
.loc 1 67 43
div.rn.f64 %r65,%r63,%r64;
.loc 1 67 39
neg.f64 %r66,%r65;
fma.rn.f64 %r27,%r45,0d4000000000000000,%r66;
.loc 1 67 32
mul.f64 %r48,%r27,%r38;
bra $L1;
$L8:
.loc 1 68 22
add.f64 %r67,%r61,0d3ff0000000000000;
.loc 1 68 19
div.rn.f64 %r68,%r61,%r67;
.loc 1 68 17
add.f64 %r69,%r68,%r61;
.loc 1 68 14
mul.f64 %r48,%r69,%r38;
bra $L1;
$L5:
.loc 1 72 5
setp.gt.s32 %r70,%r40,1082535489;
@ %r70 bra $L9;
.loc 1 72 33
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r72,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r72;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r74,[%value_in];
}
.loc 1 72 32
mul.f64 %r48,%r74,%r38;
bra $L1;
$L9:
cvt.u32.u64 %r44,%r50;
.loc 1 76 11
setp.le.s32 %r76,%r40,1082536909;
@ %r76 bra $L10;
.loc 1 76 32
set.u32.eq.u32 %r78,%r40,1082536910;
neg.s32 %r79,%r78;
.loc 1 76 50
set.u32.le.u32 %r81,%r44,-1883637635;
neg.s32 %r82,%r81;
.loc 1 76 45
cvt.u16.u32 %r84,%r79;
cvt.u16.u32 %r85,%r82;
and.b16 %r83,%r84,%r85;
.loc 1 76 26
cvt.u32.u16 %r86,%r83;
cvt.u16.u8 %r87,%r86;
setp.eq.u16 %r88,%r87,0;
@ %r88 bra $L11;
$L10:
.loc 1 77 28
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r90,[%value_in];
}
.loc 1 77 10
mul.f64 %r92,%r90,0d3fe0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r92;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r93,[%value_in];
}
.loc 1 78 8
mul.f64 %r94,%r38,%r93;
.loc 1 79 14
mul.f64 %r48,%r94,%r93;
bra $L1;
$L11:
.loc 1 83 10
mul.f64 %r48,%r49,0d7fac7b1f3cac7433;
bra $L1;
$L14:
.loc 1 65 26
mov.f64 %r48,%r49;
bra $L1;
$L15:
.loc 1 66 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r49;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r97,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r97;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r99,[%value_in];
}
mov.f64 %r45,%r99;
bra $L12;
$L1:
.loc 1 84 1
mov.f64 %value,%r48;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-e_sqrt.o/ 1612277259  0     0     100666  7340      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.visible .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_sqrt.c"
// BEGIN GLOBAL FUNCTION DEF: __ieee754_sqrt
.visible .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f64 %r28;
.reg .u32 %r33;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .u32 %r44;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r60;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r70;
.reg .u32 %r72;
.reg .u32 %r74;
.reg .u32 %r76;
.reg .u32 %r78;
.reg .u32 %r80;
.reg .u32 %r82;
.reg .u32 %r83;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .u32 %r99;
.reg .pred %r100;
.reg .pred %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .pred %r104;
.reg .pred %r105;
.reg .pred %r106;
.reg .pred %r107;
.reg .u32 %r108;
.reg .pred %r109;
.reg .u32 %r111;
.reg .pred %r112;
.reg .u32 %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .u32 %r116;
.reg .u32 %r117;
.reg .u32 %r119;
.reg .pred %r120;
.reg .u32 %r121;
.reg .u32 %r122;
.reg .pred %r123;
.reg .u32 %r124;
.reg .u32 %r125;
.reg .pred %r127;
.reg .pred %r128;
.reg .u32 %r130;
.reg .u32 %r131;
.reg .u32 %r133;
.reg .u32 %r134;
.reg .u16 %r135;
.reg .u16 %r136;
.reg .u16 %r137;
.reg .u32 %r138;
.reg .u16 %r139;
.reg .pred %r140;
.reg .pred %r141;
.reg .pred %r142;
.reg .pred %r143;
.reg .u32 %r144;
.reg .u32 %r145;
.reg .pred %r147;
.reg .u32 %r148;
.reg .pred %r149;
.reg .pred %r150;
.reg .u32 %r151;
.reg .u32 %r152;
.reg .u32 %r153;
.reg .pred %r154;
.reg .u32 %r155;
.reg .u32 %r156;
.reg .u64 %r157;
.reg .u64 %r161;
.reg .u64 %r162;
.reg .u64 %r163;
.reg .pred %r165;
mov.f64 %r95,%ar0;
.loc 1 106 2
mov.b64 %r96,%r95;
shr.u64 %r97,%r96,32;
cvt.u32.u64 %r58,%r97;
cvt.u32.u64 %r44,%r96;
.loc 1 109 9
and.b32 %r99,%r58,2146435072;
.loc 1 109 4
setp.ne.u32 %r100,%r99,2146435072;
@ %r100 bra $L2;
.loc 1 110 16
fma.rn.f64 %r94,%r95,%r95,%r95;
bra $L1;
$L2:
.loc 1 114 4
setp.gt.s32 %r101,%r58,0;
@ %r101 bra $L4;
.loc 1 115 14
and.b32 %r102,%r58,2147483647;
.loc 1 115 23
or.b32 %r103,%r102,%r44;
.loc 1 115 8
setp.eq.u32 %r104,%r103,0;
@ %r104 bra $L24;
.loc 1 116 13
setp.eq.u32 %r105,%r58,0;
@ %r105 bra $L25;
.loc 1 117 12
sub.f64 %r28,%r95,%r95;
.loc 1 117 15
div.rn.f64 %r94,%r28,%r28;
bra $L1;
$L4:
.loc 1 120 4
shr.s32 %r39,%r58,20;
.loc 1 121 4
setp.eq.u32 %r106,%r39,0;
@ ! %r106 bra $L7;
bra $L6;
$L25:
cvt.u32.u64 %r39,%r97;
$L5:
.loc 1 123 5
add.u32 %r39,%r39,-21;
.loc 1 124 14
shr.u32 %r83,%r44,11;
.loc 1 124 7
mov.u32 %r58,%r83;
.loc 1 124 25
shl.b32 %r44,%r44,21;
.loc 1 122 11
setp.eq.u32 %r107,%r83,0;
@ %r107 bra $L5;
.loc 1 126 18
and.b32 %r108,%r83,1048576;
.loc 1 126 6
setp.ne.u32 %r109,%r108,0;
@ %r109 bra $L26;
$L6:
mov.u32 %r67,0;
$L9:
.loc 1 126 42
add.u32 %r58,%r58,%r58;
mov.u32 %r23,%r67;
.loc 1 126 35
add.u32 %r67,%r23,1;
.loc 1 126 18
and.b32 %r111,%r58,1048576;
.loc 1 126 6
setp.eq.u32 %r112,%r111,0;
@ %r112 bra $L9;
.loc 1 128 22
mov.u32 %r113,32;
sub.u32 %r82,%r113,%r67;
.loc 1 128 10
mov.u32 %r83,%r58;
.loc 1 129 10
mov.u32 %r80,%r44;
shl.b32 %r44,%r44,%r67;
bra $L8;
$L26:
.loc 1 124 25
mov.u32 %r80,%r44;
.loc 1 126 6
mov.u32 %r82,32;
mov.u32 %r23,-1;
$L8:
.loc 1 127 8
sub.u32 %r39,%r39,%r23;
.loc 1 128 17
shr.u32 %r114,%r80,%r82;
.loc 1 128 10
or.b32 %r58,%r114,%r83;
$L7:
.loc 1 131 4
add.u32 %r68,%r39,-1023;
.loc 1 132 12
and.b32 %r33,%r58,1048575;
.loc 1 132 6
or.b32 %r115,%r33,1048576;
.loc 1 134 10
add.u32 %r116,%r115,%r115;
shr.u32 %r117,%r44,31;
add.u32 %r62,%r116,%r117;
.loc 1 135 10
add.u32 %r59,%r44,%r44;
.loc 1 133 6
and.b32 %r119,%r68,1;
.loc 1 133 4
setp.eq.u32 %r120,%r119,0;
@ %r120 bra $L10;
.loc 1 140 6
add.u32 %r121,%r62,%r62;
shr.u32 %r122,%r59,31;
add.u32 %r62,%r121,%r122;
shl.b32 %r59,%r44,2;
$L10:
.loc 1 137 4
shr.s32 %r70,%r68,1;
mov.u32 %r57,22;
.loc 1 142 4
mov.u32 %r65,0;
.loc 1 142 14
mov.u32 %r63,%r65;
.loc 1 143 4
mov.u32 %r78,2097152;
$L12:
.loc 1 146 12
add.u32 %r38,%r63,%r78;
.loc 1 147 8
setp.gt.s32 %r123,%r38,%r62;
@ %r123 bra $L11;
.loc 1 148 11
add.u32 %r63,%r38,%r78;
.loc 1 149 7
sub.u32 %r62,%r62,%r38;
.loc 1 150 7
add.u32 %r65,%r65,%r78;
$L11:
.loc 1 152 10
shr.u32 %r124,%r59,31;
add.u32 %r125,%r62,%r62;
add.u32 %r62,%r124,%r125;
.loc 1 153 10
add.u32 %r59,%r59,%r59;
.loc 1 154 7
shr.u32 %r78,%r78,1;
.loc 1 145 7
add.u32 %r57,%r57,-1;
setp.ne.u32 %r127,%r57,0;
@ %r127 bra $L12;
.loc 1 142 9
mov.u32 %r61,%r57;
mov.u32 %r60,32;
.loc 1 157 4
mov.u32 %r76,-2147483648;
$L18:
.loc 1 159 9
add.u32 %r74,%r76,%r57;
.loc 1 161 8
setp.gt.s32 %r128,%r62,%r63;
@ %r128 bra $L13;
.loc 1 161 21
set.u32.eq.u32 %r130,%r62,%r63;
neg.s32 %r131,%r130;
.loc 1 161 32
set.u32.le.u32 %r133,%r74,%r59;
neg.s32 %r134,%r133;
.loc 1 161 27
cvt.u16.u32 %r136,%r131;
cvt.u16.u32 %r137,%r134;
and.b16 %r135,%r136,%r137;
.loc 1 161 16
cvt.u32.u16 %r138,%r135;
cvt.u16.u8 %r139,%r138;
setp.ne.u16 %r140,%r139,0;
@ %r140 bra $L14;
bra $L15;
$L13:
.loc 1 162 7
add.u32 %r57,%r74,%r76;
.loc 1 163 5
setp.ge.s32 %r141,%r74,0;
@ %r141 bra $L27;
$L23:
.loc 1 163 23
setp.lt.s32 %r142,%r57,0;
@ %r142 bra $L28;
.loc 1 163 42
add.u32 %r64,%r63,1;
bra $L16;
$L27:
mov.u32 %r64,%r63;
bra $L16;
$L28:
mov.u32 %r64,%r63;
$L16:
.loc 1 164 7
sub.u32 %r62,%r62,%r63;
.loc 1 165 6
setp.le.u32 %r143,%r74,%r59;
@ %r143 bra $L17;
.loc 1 165 21
add.u32 %r62,%r62,-1;
$L17:
.loc 1 166 7
sub.u32 %r59,%r59,%r74;
.loc 1 167 7
add.u32 %r61,%r61,%r76;
mov.u32 %r63,%r64;
$L15:
.loc 1 169 10
add.u32 %r144,%r62,%r62;
shr.u32 %r145,%r59,31;
add.u32 %r62,%r144,%r145;
.loc 1 170 10
add.u32 %r59,%r59,%r59;
.loc 1 171 7
shr.u32 %r76,%r76,1;
.loc 1 158 7
add.u32 %r60,%r60,-1;
setp.ne.u32 %r147,%r60,0;
@ %r147 bra $L18;
.loc 1 175 9
or.b32 %r148,%r62,%r59;
.loc 1 175 4
setp.ne.u32 %r149,%r148,0;
@ %r149 bra $L19;
.loc 1 188 6
shr.u32 %r60,%r61,1;
bra $L20;
$L19:
.loc 1 179 13
setp.ne.u32 %r150,%r61,-1;
@ %r150 bra $L21;
.loc 1 179 52
add.u32 %r65,%r65,1;
bra $L20;
$L21:
.loc 1 184 17
add.u32 %r151,%r61,1;
shr.u32 %r60,%r151,1;
$L20:
.loc 1 187 10
shr.s32 %r152,%r65,1;
.loc 1 187 6
add.u32 %r72,%r152,1071644672;
.loc 1 189 8
and.b32 %r153,%r65,1;
.loc 1 189 5
setp.eq.u32 %r154,%r153,0;
@ %r154 bra $L22;
.loc 1 189 20
or.b32 %r60,%r60,-2147483648;
$L22:
.loc 1 190 12
shl.b32 %r155,%r70,20;
.loc 1 190 6
add.u32 %r156,%r155,%r72;
.loc 1 191 2
cvt.u64.u32 %r157,%r156;
cvt.u64.u32 %r161,%r60;
shl.b64 %r162,%r157,32;
or.b64 %r163,%r162,%r161;
mov.b64 %r94,%r163;
.loc 1 192 9
bra $L1;
$L24:
.loc 1 115 40
mov.f64 %r94,%r95;
bra $L1;
$L14:
.loc 1 162 7
add.u32 %r57,%r74,%r76;
.loc 1 163 5
setp.lt.s32 %r165,%r74,0;
@ %r165 bra $L23;
mov.u32 %r64,%r63;
.loc 1 164 7
mov.u32 %r62,0;
bra $L17;
$L1:
.loc 1 193 1
mov.f64 %value,%r94;
st.param.f64 [%value_out],%value;
ret;
}
/125            1612277259  0     0     100666  1584      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_tgamma
.visible .func (.param .f64 %value_out) __ieee754_tgamma (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/e_tgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgamma_r
.extern .func (.param .f64 %value_out) __ieee754_lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.extern .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_tgamma
.visible .func (.param .f64 %value_out) __ieee754_tgamma (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r28;
.reg .f64 %r30;
.reg .u32 %r31;
.reg .pred %r32;
mov.f64 %r25,%ar0;
.loc 1 31 13
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_lgamma_r,(%out_arg1,%out_arg2);
ld.param.f64 %r28,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
mov.f64 %r24,%r30;
.loc 1 32 5
ld.u32 %r31,[%frame];
setp.ge.s32 %r32,%r31,0;
@ %r32 bra $L1;
.loc 1 33 5
neg.f64 %r24,%r24;
$L1:
.loc 1 35 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-ef_acos.o/1612277259  0     0     100666  5540      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acosf
.visible .func (.param .f32 %value_out) __ieee754_acosf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_acos.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_acosf
.visible .func (.param .f32 %value_out) __ieee754_acosf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r46;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .f32 %r59;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .f32 %r76;
.reg .f32 %r81;
.reg .f32 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .pred %r86;
.reg .pred %r87;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .f32 %r90;
.reg .f32 %r91;
.reg .pred %r92;
.reg .f32 %r93;
.reg .f32 %r95;
.reg .f32 %r96;
.reg .f32 %r97;
.reg .f32 %r99;
.reg .f32 %r100;
.reg .f32 %r102;
.reg .u32 %r103;
.reg .u32 %r104;
.reg .f32 %r105;
.reg .f32 %r106;
.reg .f32 %r107;
.reg .f32 %r108;
mov.f32 %r82,%ar0;
.loc 1 47 2
mov.b32 %r57,%r82;
.loc 1 48 5
and.b32 %r58,%r57,2147483647;
.loc 1 49 4
setp.ne.u32 %r83,%r58,1065353216;
@ %r83 bra $L2;
.loc 1 50 8
setp.gt.s32 %r84,%r57,0;
.loc 1 51 20
selp.f32 %r81,0f00000000,0f40490fdb,%r84;
bra $L1;
$L2:
.loc 1 52 11
setp.le.s32 %r85,%r58,1065353216;
@ %r85 bra $L4;
.loc 1 53 15
sub.f32 %r22,%r82,%r82;
.loc 1 53 18
div.rn.f32 %r81,%r22,%r22;
bra $L1;
$L4:
.loc 1 55 4
setp.gt.s32 %r86,%r58,1056964607;
@ %r86 bra $L5;
.loc 1 56 8
setp.le.s32 %r87,%r58,587202560;
@ %r87 bra $L8;
.loc 1 57 8
mul.f32 %r74,%r82,%r82;
.loc 1 58 44
fma.rn.f32 %r23,%r74,0f3811ef08,0f3a4f7f04;
.loc 1 58 37
fma.rn.f32 %r24,%r23,%r74,0fbd241146;
.loc 1 58 30
fma.rn.f32 %r25,%r24,%r74,0f3e4e0aa8;
.loc 1 58 23
fma.rn.f32 %r26,%r25,%r74,0fbea6b090;
.loc 1 58 16
fma.rn.f32 %r27,%r26,%r74,0f3e2aaaab;
.loc 1 58 8
mul.f32 %r75,%r27,%r74;
.loc 1 59 34
fma.rn.f32 %r28,%r74,0f3d9dc62e,0fbf303361;
.loc 1 59 27
fma.rn.f32 %r29,%r28,%r74,0f4001572d;
.loc 1 59 20
fma.rn.f32 %r30,%r29,%r74,0fc019d139;
.loc 1 59 8
fma.rn.f32 %r76,%r30,%r74,0f3f800000;
.loc 1 61 36
neg.f32 %r88,%r82;
.loc 1 60 8
div.rn.f32 %r89,%r75,%r76;
.loc 1 61 36
fma.rn.f32 %r31,%r88,%r89,0f33a22168;
.loc 1 61 26
sub.f32 %r90,%r82,%r31;
.loc 1 61 21
mov.f32 %r91,0f3fc90fda;
sub.f32 %r81,%r91,%r90;
bra $L1;
$L5:
.loc 1 62 13
setp.ge.s32 %r92,%r57,0;
@ %r92 bra $L6;
.loc 1 63 14
add.f32 %r93,%r82,0f3f800000;
.loc 1 63 8
mul.f32 %r68,%r93,0f3f000000;
.loc 1 64 44
fma.rn.f32 %r34,%r68,0f3811ef08,0f3a4f7f04;
.loc 1 64 37
fma.rn.f32 %r35,%r34,%r68,0fbd241146;
.loc 1 64 30
fma.rn.f32 %r36,%r35,%r68,0f3e4e0aa8;
.loc 1 64 23
fma.rn.f32 %r37,%r36,%r68,0fbea6b090;
.loc 1 64 16
fma.rn.f32 %r38,%r37,%r68,0f3e2aaaab;
.loc 1 64 8
mul.f32 %r69,%r38,%r68;
.loc 1 65 34
fma.rn.f32 %r39,%r68,0f3d9dc62e,0fbf303361;
.loc 1 65 27
fma.rn.f32 %r40,%r39,%r68,0f4001572d;
.loc 1 65 20
fma.rn.f32 %r41,%r40,%r68,0fc019d139;
.loc 1 65 8
fma.rn.f32 %r70,%r41,%r68,0f3f800000;
.loc 1 66 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r68;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r95,[%value_in];
}
.loc 1 67 8
div.rn.f32 %r96,%r69,%r70;
.loc 1 68 8
fma.rn.f32 %r73,%r95,%r96,0fb3a22168;
.loc 1 69 31
add.f32 %r97,%r95,%r73;
.loc 1 69 16
fma.rn.f32 %r81,%r97,0fc0000000,0f40490fda;
bra $L1;
$L6:
.loc 1 72 14
mov.f32 %r100,0f3f800000;
sub.f32 %r99,%r100,%r82;
.loc 1 72 8
mul.f32 %r59,%r99,0f3f000000;
.loc 1 73 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r59;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r102,[%value_in];
}
.loc 1 76 6
mov.b32 %r104,%r102;
and.b32 %r103,%r104,-4096;
mov.b32 %r62,%r103;
.loc 1 77 13
neg.f32 %r105,%r62;
fma.rn.f32 %r46,%r105,%r62,%r59;
.loc 1 77 23
add.f32 %r106,%r102,%r62;
.loc 1 77 9
div.rn.f32 %r63,%r46,%r106;
.loc 1 78 44
fma.rn.f32 %r48,%r59,0f3811ef08,0f3a4f7f04;
.loc 1 78 37
fma.rn.f32 %r49,%r48,%r59,0fbd241146;
.loc 1 78 30
fma.rn.f32 %r50,%r49,%r59,0f3e4e0aa8;
.loc 1 78 23
fma.rn.f32 %r51,%r50,%r59,0fbea6b090;
.loc 1 78 16
fma.rn.f32 %r52,%r51,%r59,0f3e2aaaab;
.loc 1 78 8
mul.f32 %r64,%r52,%r59;
.loc 1 79 34
fma.rn.f32 %r53,%r59,0f3d9dc62e,0fbf303361;
.loc 1 79 27
fma.rn.f32 %r54,%r53,%r59,0f4001572d;
.loc 1 79 20
fma.rn.f32 %r55,%r54,%r59,0fc019d139;
.loc 1 79 8
fma.rn.f32 %r65,%r55,%r59,0f3f800000;
.loc 1 80 8
div.rn.f32 %r107,%r64,%r65;
.loc 1 81 8
fma.rn.f32 %r67,%r102,%r107,%r63;
.loc 1 82 27
add.f32 %r108,%r62,%r67;
.loc 1 82 23
add.f32 %r81,%r108,%r108;
bra $L1;
$L8:
.loc 1 56 39
mov.f32 %r81,0f3fc90fdb;
$L1:
.loc 1 84 1
mov.f32 %value,%r81;
st.param.f32 [%value_out],%value;
ret;
}
/143            1612277259  0     0     100666  3302      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acoshf
.visible .func (.param .f32 %value_out) __ieee754_acoshf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_acosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log1pf
.extern .func (.param .f32 %value_out) log1pf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_acoshf
.visible .func (.param .f32 %value_out) __ieee754_acoshf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .f32 %r24;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .u32 %r33;
.reg .f32 %r34;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .pred %r41;
.reg .f32 %r43;
.reg .pred %r44;
.reg .pred %r45;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r57;
.reg .f32 %r59;
.reg .f32 %r60;
mov.f32 %r38,%ar0;
.loc 1 36 2
mov.b32 %r33,%r38;
.loc 1 37 4
setp.gt.s32 %r39,%r33,1065353215;
@ %r39 bra $L2;
.loc 1 38 15
sub.f32 %r22,%r38,%r38;
.loc 1 38 18
div.rn.f32 %r37,%r22,%r22;
bra $L1;
$L2:
.loc 1 39 11
setp.le.s32 %r40,%r33,1300234239;
@ %r40 bra $L4;
.loc 1 40 8
setp.le.s32 %r41,%r33,2139095039;
@ %r41 bra $L5;
.loc 1 41 18
add.f32 %r37,%r38,%r38;
bra $L1;
$L5:
.loc 1 43 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r43,[%value_in];
}
.loc 1 43 27
add.f32 %r37,%r43,0f3f317218;
bra $L1;
$L4:
.loc 1 44 12
setp.eq.u32 %r44,%r33,1065353216;
@ %r44 bra $L7;
.loc 1 46 12
setp.le.s32 %r45,%r33,1073741824;
@ %r45 bra $L6;
.loc 1 48 48
fma.rn.f32 %r24,%r38,%r38,0fbf800000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r47,[%value_in];
}
.loc 1 48 47
add.f32 %r48,%r47,%r38;
.loc 1 48 44
mov.f32 %r50,0f3f800000;
div.rn.f32 %r49,%r50,%r48;
.loc 1 48 13
neg.f32 %r51,%r49;
fma.rn.f32 %r28,%r38,0f40000000,%r51;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r53,[%value_in];
}
mov.f32 %r37,%r53;
bra $L1;
$L6:
.loc 1 50 8
mov.f32 %r54,0f3f800000;
sub.f32 %r34,%r38,%r54;
.loc 1 51 52
mul.f32 %r55,%r34,%r34;
.loc 1 51 22
fma.rn.f32 %r30,%r34,0f40000000,%r55;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r57,[%value_in];
}
.loc 1 51 13
add.f32 %r59,%r57,%r34;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r59;
call (%value_in),log1pf,(%out_arg1);
ld.param.f32 %r60,[%value_in];
}
mov.f32 %r37,%r60;
bra $L1;
$L7:
.loc 1 45 13
mov.f32 %r37,0f00000000;
$L1:
.loc 1 53 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ef_asin.o/1612277259  0     0     100666  5190      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_asinf
.visible .func (.param .f32 %value_out) __ieee754_asinf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_asin.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_asinf
.visible .func (.param .f32 %value_out) __ieee754_asinf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r45;
.reg .f32 %r48;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r63;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .pred %r75;
.reg .f32 %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .pred %r79;
.reg .f32 %r80;
.reg .pred %r81;
.reg .f32 %r82;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .f32 %r86;
.reg .f32 %r88;
.reg .pred %r89;
.reg .f32 %r90;
.reg .f32 %r91;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .f32 %r94;
.reg .f32 %r95;
.reg .f32 %r96;
.reg .f32 %r98;
.reg .f32 %r99;
.reg .f32 %r101;
.reg .f32 %r102;
.reg .pred %r103;
mov.f32 %r74,%ar0;
.loc 1 49 2
mov.b32 %r50,%r74;
.loc 1 50 5
and.b32 %r51,%r50,2147483647;
.loc 1 51 4
setp.ne.u32 %r75,%r51,1065353216;
@ %r75 bra $L2;
.loc 1 53 24
mul.f32 %r76,%r74,0fb33bbd2e;
.loc 1 53 22
fma.rn.f32 %r73,%r74,0f3fc90fdb,%r76;
bra $L1;
$L2:
.loc 1 54 11
setp.le.s32 %r77,%r51,1065353216;
@ %r77 bra $L4;
.loc 1 55 15
sub.f32 %r23,%r74,%r74;
.loc 1 55 18
div.rn.f32 %r73,%r23,%r23;
bra $L1;
$L4:
.loc 1 56 12
setp.gt.s32 %r78,%r51,1056964607;
@ %r78 bra $L5;
.loc 1 57 8
setp.gt.s32 %r79,%r51,838860799;
@ %r79 bra $L6;
.loc 1 58 10
add.f32 %r80,%r74,0f7149f2ca;
.loc 1 58 5
setp.gt.f32 %r81,%r80,0f3f800000;
@ ! %r81 bra $L5;
bra $L9;
$L6:
.loc 1 60 5
mul.f32 %r52,%r74,%r74;
.loc 1 61 41
fma.rn.f32 %r25,%r52,0f3811ef08,0f3a4f7f04;
.loc 1 61 34
fma.rn.f32 %r26,%r25,%r52,0fbd241146;
.loc 1 61 27
fma.rn.f32 %r27,%r26,%r52,0f3e4e0aa8;
.loc 1 61 20
fma.rn.f32 %r28,%r27,%r52,0fbea6b090;
.loc 1 61 13
fma.rn.f32 %r29,%r28,%r52,0f3e2aaaab;
.loc 1 61 5
mul.f32 %r53,%r29,%r52;
.loc 1 62 31
fma.rn.f32 %r30,%r52,0f3d9dc62e,0fbf303361;
.loc 1 62 24
fma.rn.f32 %r31,%r30,%r52,0f4001572d;
.loc 1 62 17
fma.rn.f32 %r32,%r31,%r52,0fc019d139;
.loc 1 62 5
fma.rn.f32 %r54,%r32,%r52,0f3f800000;
.loc 1 63 5
div.rn.f32 %r82,%r53,%r54;
.loc 1 64 11
fma.rn.f32 %r73,%r74,%r82,%r74;
bra $L1;
$L5:
.loc 1 68 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r74;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r84,[%value_in];
}
.loc 1 68 4
mov.f32 %r86,0f3f800000;
sub.f32 %r85,%r86,%r84;
.loc 1 69 4
mul.f32 %r58,%r85,0f3f000000;
.loc 1 70 40
fma.rn.f32 %r34,%r58,0f3811ef08,0f3a4f7f04;
.loc 1 70 33
fma.rn.f32 %r35,%r34,%r58,0fbd241146;
.loc 1 70 26
fma.rn.f32 %r36,%r35,%r58,0f3e4e0aa8;
.loc 1 70 19
fma.rn.f32 %r37,%r36,%r58,0fbea6b090;
.loc 1 70 12
fma.rn.f32 %r38,%r37,%r58,0f3e2aaaab;
.loc 1 70 4
mul.f32 %r59,%r38,%r58;
.loc 1 71 30
fma.rn.f32 %r39,%r58,0f3d9dc62e,0fbf303361;
.loc 1 71 23
fma.rn.f32 %r40,%r39,%r58,0f4001572d;
.loc 1 71 16
fma.rn.f32 %r41,%r40,%r58,0fc019d139;
.loc 1 71 4
fma.rn.f32 %r60,%r41,%r58,0f3f800000;
.loc 1 72 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r58;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r88,[%value_in];
}
.loc 1 73 4
setp.le.s32 %r89,%r51,1064933785;
@ %r89 bra $L7;
.loc 1 74 8
div.rn.f32 %r90,%r59,%r60;
.loc 1 75 32
fma.rn.f32 %r42,%r88,%r90,%r88;
.loc 1 75 37
fma.rn.f32 %r43,%r42,0f40000000,0f333bbd2e;
.loc 1 75 8
mov.f32 %r91,0f3fc90fdb;
sub.f32 %r73,%r91,%r43;
bra $L8;
$L7:
.loc 1 80 6
mov.b32 %r93,%r88;
and.b32 %r92,%r93,-4096;
mov.b32 %r63,%r92;
.loc 1 81 13
neg.f32 %r94,%r63;
fma.rn.f32 %r45,%r94,%r63,%r58;
.loc 1 82 9
div.rn.f32 %r65,%r59,%r60;
.loc 1 81 21
add.f32 %r95,%r88,%r63;
.loc 1 81 9
div.rn.f32 %r96,%r45,%r95;
.loc 1 83 34
fma.rn.f32 %r48,%r96,0fc0000000,0fb33bbd2e;
.loc 1 83 21
add.f32 %r98,%r88,%r88;
.loc 1 83 9
neg.f32 %r99,%r48;
fma.rn.f32 %r66,%r98,%r65,%r99;
.loc 1 84 9
fma.rn.f32 %r67,%r94,0f40000000,0f3f490fdb;
.loc 1 85 21
sub.f32 %r101,%r66,%r67;
.loc 1 85 9
mov.f32 %r102,0f3f490fdb;
sub.f32 %r73,%r102,%r101;
$L8:
.loc 1 87 4
setp.gt.s32 %r103,%r50,0;
@ %r103 bra $L1;
.loc 1 87 33
neg.f32 %r73,%r73;
bra $L1;
$L9:
.loc 1 58 25
mov.f32 %r73,%r74;
$L1:
.loc 1 88 1
mov.f32 %value,%r73;
st.param.f32 [%value_out],%value;
ret;
}
/161            1612277259  0     0     100666  5909      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atan2f
.visible .func (.param .f32 %value_out) __ieee754_atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_atan2.c"
// BEGIN GLOBAL FUNCTION DECL: atanf
.extern .func (.param .f32 %value_out) atanf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN VAR DEF: CSWTCH$8
.const .align 4 .u32 CSWTCH$8[3] =
{3209236443,1075235812,3222719460 };
// BEGIN VAR DEF: CSWTCH$9
.const .align 4 .u32 CSWTCH$9[3] =
{2147483648,1078530011,3226013659 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_atan2f
.visible .func (.param .f32 %value_out) __ieee754_atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r36;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u16 %r58;
.reg .u16 %r59;
.reg .u16 %r60;
.reg .u32 %r61;
.reg .u16 %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .f32 %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .pred %r70;
.reg .pred %r71;
.reg .pred %r72;
.reg .pred %r73;
.reg .pred %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .u64 %r78;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .u64 %r81;
.reg .pred %r82;
.reg .u64 %r83;
.reg .u64 %r84;
.reg .u64 %r85;
.reg .u64 %r86;
.reg .pred %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .pred %r90;
.reg .u32 %r92;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u16 %r97;
.reg .u16 %r98;
.reg .u16 %r99;
.reg .u32 %r100;
.reg .u16 %r101;
.reg .pred %r102;
.reg .f32 %r104;
.reg .f32 %r105;
.reg .f32 %r107;
.reg .pred %r108;
.reg .pred %r109;
.reg .pred %r110;
.reg .u32 %r111;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .f32 %r114;
.reg .f32 %r115;
mov.f32 %r50,%ar0;
mov.f32 %r51,%ar1;
.loc 1 41 2
mov.b32 %r39,%r51;
.loc 1 42 5
and.b32 %r40,%r39,2147483647;
.loc 1 43 2
mov.b32 %r44,%r50;
.loc 1 44 5
and.b32 %r42,%r44,2147483647;
.loc 1 45 5
set.u32.gt.s32 %r53,%r40,2139095040;
neg.s32 %r54,%r53;
.loc 1 46 5
set.u32.gt.s32 %r56,%r42,2139095040;
neg.s32 %r57,%r56;
.loc 1 45 25
cvt.u16.u32 %r59,%r54;
cvt.u16.u32 %r60,%r57;
or.b16 %r58,%r59,%r60;
.loc 1 45 4
cvt.u32.u16 %r61,%r58;
cvt.u16.u8 %r62,%r61;
setp.eq.u16 %r63,%r62,0;
@ %r63 bra $L2;
.loc 1 47 13
add.f32 %r49,%r51,%r50;
bra $L1;
$L2:
.loc 1 48 4
setp.ne.u32 %r64,%r39,1065353216;
@ %r64 bra $L4;
.loc 1 48 28
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
call (%value_in),atanf,(%out_arg1);
ld.param.f32 %r66,[%value_in];
}
mov.f32 %r49,%r66;
bra $L1;
$L4:
.loc 1 49 23
shr.s32 %r67,%r39,30;
.loc 1 49 28
and.b32 %r68,%r67,2;
.loc 1 49 15
shr.u32 %r69,%r44,31;
.loc 1 49 4
or.b32 %r43,%r68,%r69;
.loc 1 52 4
setp.ne.u32 %r70,%r42,0;
@ %r70 bra $L5;
.loc 1 53 6
setp.eq.u32 %r71,%r43,2;
@ %r71 bra $L14;
setp.ne.u32 %r72,%r43,3;
.loc 1 57 21
selp.f32 %r49,%r50,0fc0490fdb,%r72;
bra $L1;
$L5:
.loc 1 61 4
setp.ne.u32 %r73,%r40,0;
@ %r73 bra $L6;
.loc 1 61 56
setp.ge.s32 %r74,%r44,0;
selp.f32 %r49,0f3fc90fdb,0fbfc90fdb,%r74;
bra $L1;
$L6:
.loc 1 64 4
setp.ne.u32 %r75,%r40,2139095040;
@ %r75 bra $L7;
add.u32 %r47,%r43,-1;
.loc 1 65 8
setp.ne.u32 %r76,%r42,2139095040;
@ %r76 bra $L8;
setp.gt.u32 %r77,%r47,2;
@ %r77 bra $L17;
cvta.const.u64 %r78,CSWTCH$8;
cvt.u64.u32 %r79,%r47;
shl.b64 %r80,%r79,2;
add.u64 %r81,%r78,%r80;
ld.f32 %r49,[%r81];
bra $L1;
$L8:
setp.gt.u32 %r82,%r47,2;
@ %r82 bra $L18;
cvta.const.u64 %r83,CSWTCH$9;
cvt.u64.u32 %r84,%r47;
shl.b64 %r85,%r84,2;
add.u64 %r86,%r83,%r85;
ld.f32 %r49,[%r86];
bra $L1;
$L7:
.loc 1 82 4
setp.ne.u32 %r87,%r42,2139095040;
@ %r87 bra $L9;
.loc 1 82 59
setp.ge.s32 %r88,%r44,0;
.loc 1 61 56
selp.f32 %r49,0f3fc90fdb,0fbfc90fdb,%r88;
bra $L1;
$L9:
.loc 1 85 9
sub.u32 %r89,%r42,%r40;
.loc 1 85 4
shr.s32 %r46,%r89,23;
.loc 1 86 4
setp.gt.s32 %r90,%r89,511705087;
@ %r90 bra $L20;
.loc 1 87 12
shr.u32 %r92,%r39,31;
.loc 1 87 17
set.u32.lt.s32 %r94,%r46,-60;
neg.s32 %r95,%r94;
.loc 1 87 14
cvt.u16.u32 %r98,%r92;
cvt.u16.u32 %r99,%r95;
and.b16 %r97,%r98,%r99;
.loc 1 87 9
cvt.u32.u16 %r100,%r97;
cvt.u16.u8 %r101,%r100;
setp.ne.u16 %r102,%r101,0;
@ %r102 bra $L21;
.loc 1 88 9
div.rn.f32 %r104,%r50,%r51;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r104;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r105,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r105;
call (%value_in),atanf,(%out_arg1);
ld.param.f32 %r107,[%value_in];
}
mov.f32 %r49,%r107;
bra $L10;
$L20:
.loc 1 86 14
mov.f32 %r49,0f3fc90fdb;
bra $L10;
$L21:
.loc 1 87 24
mov.f32 %r49,0f00000000;
$L10:
.loc 1 89 2
setp.eq.u32 %r108,%r43,1;
@ %r108 bra $L11;
setp.eq.u32 %r109,%r43,2;
@ %r109 bra $L12;
setp.eq.u32 %r110,%r43,0;
@ ! %r110 bra $L25;
bra $L1;
$L11:
.loc 1 94 9
mov.b32 %r111,%r49;
add.u32 %r36,%r111,-2147483648;
mov.b32 %r49,%r36;
.loc 1 96 20
bra $L1;
$L12:
.loc 1 97 27
add.f32 %r112,%r49,0f33bbbd2e;
.loc 1 97 24
mov.f32 %r113,0f40490fdb;
sub.f32 %r49,%r113,%r112;
bra $L1;
$L25:
.loc 1 99 21
add.f32 %r114,%r49,0f33bbbd2e;
.loc 1 99 28
mov.f32 %r115,0f40490fdb;
sub.f32 %r49,%r114,%r115;
bra $L1;
$L14:
.loc 1 53 6
mov.f32 %r49,0f40490fdb;
bra $L1;
$L17:
.loc 1 65 8
mov.f32 %r49,0f3f490fdb;
bra $L1;
$L18:
mov.f32 %r49,0f00000000;
$L1:
.loc 1 101 1
mov.f32 %value,%r49;
st.param.f32 [%value_out],%value;
ret;
}

/179            1612277259  0     0     100666  2735      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atanhf
.visible .func (.param .f32 %value_out) __ieee754_atanhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_atanh.c"
// BEGIN GLOBAL FUNCTION DECL: log1pf
.extern .func (.param .f32 %value_out) log1pf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_atanhf
.visible .func (.param .f32 %value_out) __ieee754_atanhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .u32 %r30;
.reg .u32 %r31;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .pred %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .f32 %r41;
.reg .pred %r42;
.reg .f32 %r43;
.reg .pred %r44;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .pred %r53;
.reg .f32 %r55;
mov.f32 %r37,%ar0;
.loc 1 40 2
mov.b32 %r30,%r37;
.loc 1 41 5
and.b32 %r31,%r30,2147483647;
.loc 1 42 5
setp.le.s32 %r38,%r31,1065353216;
@ %r38 bra $L2;
.loc 1 43 15
sub.f32 %r22,%r37,%r37;
.loc 1 43 18
div.rn.f32 %r36,%r22,%r22;
bra $L1;
$L2:
.loc 1 44 4
setp.ne.u32 %r39,%r31,1065353216;
@ %r39 bra $L4;
.loc 1 45 14
div.rn.f32 %r36,%r37,0f00000000;
bra $L1;
$L4:
.loc 1 46 4
setp.gt.s32 %r40,%r31,830472191;
@ %r40 bra $L5;
.loc 1 46 25
add.f32 %r41,%r37,0f7149f2ca;
.loc 1 46 18
setp.gt.f32 %r42,%r41,0f00000000;
@ ! %r42 bra $L11;
bra $L10;
$L5:
.loc 1 47 2
mov.b32 %r34,%r31;
.loc 1 52 30
add.f32 %r33,%r34,%r34;
.loc 1 52 38
mov.f32 %r43,0f3f800000;
sub.f32 %r35,%r43,%r34;
.loc 1 48 4
setp.gt.s32 %r44,%r31,1056964607;
@ %r44 bra $L7;
$L9:
.loc 1 50 31
mul.f32 %r46,%r34,%r33;
.loc 1 50 33
div.rn.f32 %r47,%r46,%r35;
.loc 1 50 21
add.f32 %r48,%r47,%r33;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r48;
call (%value_in),log1pf,(%out_arg1);
ld.param.f32 %r49,[%value_in];
}
.loc 1 50 8
mul.f32 %r36,%r49,0f3f000000;
bra $L8;
$L7:
.loc 1 52 21
div.rn.f32 %r51,%r33,%r35;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r51;
call (%value_in),log1pf,(%out_arg1);
ld.param.f32 %r52,[%value_in];
}
.loc 1 52 8
mul.f32 %r36,%r52,0f3f000000;
$L8:
.loc 1 53 4
setp.ge.s32 %r53,%r30,0;
@ %r53 bra $L1;
.loc 1 53 34
neg.f32 %r36,%r36;
bra $L1;
$L10:
.loc 1 46 42
mov.f32 %r36,%r37;
bra $L1;
$L11:
.loc 1 47 2
mov.b32 %r34,%r31;
.loc 1 52 30
add.f32 %r33,%r34,%r34;
.loc 1 52 38
mov.f32 %r55,0f3f800000;
sub.f32 %r35,%r55,%r34;
bra $L9;
$L1:
.loc 1 54 1
mov.f32 %value,%r36;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_cosh.o/1612277259  0     0     100666  4117      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_coshf
.visible .func (.param .f32 %value_out) __ieee754_coshf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_cosh.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1f
.extern .func (.param .f32 %value_out) expm1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.extern .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflowf
.extern .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_coshf
.visible .func (.param .f32 %value_out) __ieee754_coshf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r32;
.reg .u32 %r33;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .pred %r41;
.reg .pred %r42;
.reg .f32 %r44;
.reg .f32 %r46;
.reg .pred %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .pred %r51;
.reg .f32 %r53;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .pred %r58;
.reg .f32 %r60;
.reg .f32 %r62;
.reg .pred %r63;
.reg .f32 %r65;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .u32 %r70;
.reg .f32 %r71;
mov.f32 %r40,%ar0;
.loc 1 39 2
mov.b32 %r32,%r40;
.loc 1 40 5
and.b32 %r33,%r32,2147483647;
.loc 1 43 4
setp.le.s32 %r41,%r33,2139095039;
@ %r41 bra $L2;
.loc 1 43 39
mul.f32 %r39,%r40,%r40;
bra $L1;
$L2:
.loc 1 46 4
setp.gt.s32 %r42,%r33,1051816471;
@ %r42 bra $L4;
.loc 1 47 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r44,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r44;
call (%value_in),expm1f,(%out_arg1);
ld.param.f32 %r46,[%value_in];
}
.loc 1 48 8
add.f32 %r39,%r46,0f3f800000;
.loc 1 49 9
setp.le.s32 %r47,%r33,603979775;
@ %r47 bra $L1;
.loc 1 50 19
mul.f32 %r48,%r46,%r46;
.loc 1 50 25
add.f32 %r49,%r39,%r39;
.loc 1 50 22
div.rn.f32 %r50,%r48,%r49;
.loc 1 50 16
add.f32 %r39,%r50,0f3f800000;
bra $L1;
$L4:
.loc 1 54 5
setp.gt.s32 %r51,%r33,1102053375;
@ %r51 bra $L5;
.loc 1 55 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r53,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r53;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r55,[%value_in];
}
.loc 1 56 21
mov.f32 %r57,0f3f000000;
div.rn.f32 %r56,%r57,%r55;
.loc 1 56 16
fma.rn.f32 %r39,%r55,0f3f000000,%r56;
bra $L1;
$L5:
.loc 1 60 5
setp.gt.s32 %r58,%r33,1118925335;
@ %r58 bra $L6;
.loc 1 61 16
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r60,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r62,[%value_in];
}
.loc 1 61 15
mul.f32 %r39,%r62,0f3f000000;
bra $L1;
$L6:
.loc 1 64 5
setp.gt.s32 %r63,%r33,1119016188;
@ %r63 bra $L7;
.loc 1 65 30
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r40;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r65,[%value_in];
}
.loc 1 65 10
mul.f32 %r67,%r65,0f3f000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r67;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r68,[%value_in];
}
.loc 1 66 8
mul.f32 %r69,%r68,0f3f000000;
.loc 1 67 14
mul.f32 %r39,%r69,%r68;
bra $L1;
$L7:
.loc 1 71 9
mov.u32 %r70,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r70;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r71,[%value_in];
}
mov.f32 %r39,%r71;
$L1:
.loc 1 72 1
mov.f32 %value,%r39;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_exp.o/ 1612277259  0     0     100666  6513      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.visible .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_exp.c"
// BEGIN GLOBAL FUNCTION DECL: __math_oflowf
.extern .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflowf
.extern .func (.param .f32 %value_out) __math_uflowf (.param .u32 %in_ar0);
// BEGIN VAR DEF: ln2LO
.const .align 4 .u32 ln2LO[2] =
{924317649,3071801297 };
// BEGIN VAR DEF: halF
.const .align 4 .u32 halF[2] =
{1056964608,3204448256 };
// BEGIN VAR DEF: ln2HI
.const .align 4 .u32 ln2HI[2] =
{1060204928,3207688576 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_expf
.visible .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .f32 %r29;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .u32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .pred %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .u32 %r78;
.reg .f32 %r79;
.reg .u32 %r83;
.reg .u32 %r84;
.reg .u16 %r86;
.reg .u16 %r87;
.reg .u16 %r88;
.reg .u32 %r89;
.reg .u16 %r90;
.reg .pred %r91;
.reg .u32 %r92;
.reg .f32 %r93;
.reg .pred %r94;
.reg .pred %r95;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .u64 %r98;
.reg .u64 %r99;
.reg .f32 %r100;
.reg .u64 %r101;
.reg .u64 %r104;
.reg .u32 %r105;
.reg .u32 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .u64 %r110;
.reg .f32 %r111;
.reg .f32 %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .f32 %r116;
.reg .pred %r117;
.reg .f32 %r119;
.reg .f32 %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .f32 %r124;
.reg .f32 %r125;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .f32 %r128;
.reg .f32 %r129;
.reg .f32 %r130;
.reg .pred %r131;
.reg .u32 %r132;
.reg .u32 %r133;
.reg .u32 %r134;
.reg .u32 %r135;
.reg .u32 %r136;
.reg .f32 %r137;
.reg .f32 %r139;
.reg .f32 %r140;
mov.f32 %r73,%ar0;
.loc 1 55 2
mov.b32 %r53,%r73;
.loc 1 57 5
and.b32 %r56,%r53,2147483647;
.loc 1 60 11
setp.le.u32 %r74,%r56,2139095040;
@ %r74 bra $L2;
.loc 1 61 21
add.f32 %r72,%r73,%r73;
bra $L1;
$L2:
.loc 1 56 16
shr.u32 %r22,%r53,31;
.loc 1 62 11
setp.ne.u32 %r75,%r56,2139095040;
@ %r75 bra $L4;
.loc 1 63 24
setp.eq.u32 %r76,%r22,0;
selp.f32 %r72,%r73,0f00000000,%r76;
bra $L1;
$L4:
.loc 1 64 4
setp.le.s32 %r77,%r53,1118925335;
@ %r77 bra $L5;
.loc 1 65 13
mov.u32 %r78,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r78;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r79,[%value_in];
}
mov.f32 %r72,%r79;
bra $L1;
$L5:
.loc 1 66 18
set.u32.gt.u32 %r83,%r56,1120924085;
neg.s32 %r84,%r83;
.loc 1 66 12
cvt.u16.u32 %r87,%r22;
cvt.u16.u32 %r88,%r84;
and.b16 %r86,%r87,%r88;
.loc 1 66 4
cvt.u32.u16 %r89,%r86;
cvt.u16.u8 %r90,%r89;
setp.eq.u16 %r91,%r90,0;
@ %r91 bra $L6;
.loc 1 67 13
mov.u32 %r92,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r92;
call (%value_in),__math_uflowf,(%out_arg1);
ld.param.f32 %r93,[%value_in];
}
mov.f32 %r72,%r93;
bra $L1;
$L6:
.loc 1 70 4
setp.le.u32 %r94,%r56,1051816472;
@ %r94 bra $L7;
.loc 1 71 8
setp.gt.u32 %r95,%r56,1065686417;
@ %r95 bra $L8;
.loc 1 72 15
cvta.const.u64 %r96,ln2HI;
cvt.s64.s32 %r97,%r22;
shl.b64 %r98,%r97,2;
add.u64 %r99,%r96,%r98;
.loc 1 72 6
ld.f32 %r100,[%r99];
sub.f32 %r50,%r73,%r100;
.loc 1 72 24
cvta.const.u64 %r101,ln2LO;
add.u64 %r104,%r101,%r98;
ld.f32 %r51,[%r104];
.loc 1 72 42
mov.u32 %r106,1;
sub.u32 %r105,%r106,%r22;
.loc 1 72 39
sub.u32 %r52,%r105,%r22;
bra $L9;
$L8:
.loc 1 74 21
cvta.const.u64 %r107,halF;
cvt.s64.s32 %r108,%r22;
shl.b64 %r109,%r108,2;
add.u64 %r110,%r107,%r109;
.loc 1 74 16
ld.f32 %r111,[%r110];
fma.rn.f32 %r29,%r73,0f3fb8aa3b,%r111;
.loc 1 74 6
cvt.rzi.s32.f32 %r52,%r29;
.loc 1 75 6
cvt.rn.f32.s32 %r57,%r52;
.loc 1 76 6
fma.rn.f32 %r50,%r57,0fbf317180,%r73;
.loc 1 77 6
mul.f32 %r51,%r57,0f3717f7d1;
$L9:
.loc 1 79 9
sub.f32 %r73,%r50,%r51;
.loc 1 86 5
mul.f32 %r58,%r73,%r73;
.loc 1 87 34
fma.rn.f32 %r31,%r58,0f3331bb4c,0fb5ddea0e;
.loc 1 87 28
fma.rn.f32 %r32,%r31,%r58,0f388ab355;
.loc 1 87 22
fma.rn.f32 %r33,%r32,%r58,0fbb360b61;
.loc 1 87 16
fma.rn.f32 %r34,%r33,%r58,0f3e2aaaab;
.loc 1 87 5
neg.f32 %r113,%r34;
fma.rn.f32 %r66,%r113,%r58,%r73;
.loc 1 89 24
mul.f32 %r140,%r73,%r66;
.loc 1 88 4
setp.eq.u32 %r114,%r52,0;
@ ! %r114 bra $L20;
bra $L10;
$L7:
.loc 1 81 9
setp.gt.u32 %r115,%r56,872415231;
@ %r115 bra $L12;
.loc 1 82 13
add.f32 %r116,%r73,0f7149f2ca;
.loc 1 82 8
setp.gt.f32 %r117,%r116,0f3f800000;
@ ! %r117 bra $L12;
.loc 1 82 31
add.f32 %r72,%r73,0f3f800000;
bra $L1;
$L10:
.loc 1 88 32
mov.f32 %r120,0f40000000;
sub.f32 %r119,%r66,%r120;
.loc 1 88 29
div.rn.f32 %r121,%r140,%r119;
.loc 1 88 44
sub.f32 %r122,%r121,%r73;
.loc 1 88 22
mov.f32 %r123,0f3f800000;
sub.f32 %r72,%r123,%r122;
bra $L1;
$L20:
.loc 1 89 39
mov.f32 %r125,0f40000000;
sub.f32 %r124,%r125,%r66;
.loc 1 89 27
div.rn.f32 %r126,%r140,%r124;
.loc 1 89 21
sub.f32 %r127,%r51,%r126;
.loc 1 89 43
sub.f32 %r128,%r127,%r50;
.loc 1 89 11
mov.f32 %r130,0f3f800000;
sub.f32 %r129,%r130,%r128;
.loc 1 92 6
mov.b32 %r71,%r129;
.loc 1 90 4
setp.lt.s32 %r131,%r52,-125;
@ %r131 bra $L14;
.loc 1 93 6
shl.b32 %r132,%r52,23;
add.u32 %r133,%r132,%r71;
mov.b32 %r72,%r133;
.loc 1 94 13
bra $L1;
$L14:
.loc 1 98 6
add.u32 %r134,%r52,100;
shl.b32 %r135,%r134,23;
add.u32 %r136,%r135,%r71;
.loc 1 99 14
mov.b32 %r137,%r136;
mul.f32 %r72,%r137,0f0d800000;
bra $L1;
$L12:
.loc 1 86 5
mul.f32 %r61,%r73,%r73;
.loc 1 87 34
fma.rn.f32 %r62,%r61,0f3331bb4c,0fb5ddea0e;
.loc 1 87 28
fma.rn.f32 %r63,%r61,%r62,0f388ab355;
.loc 1 87 22
fma.rn.f32 %r64,%r61,%r63,0fbb360b61;
.loc 1 87 16
fma.rn.f32 %r65,%r61,%r64,0f3e2aaaab;
.loc 1 87 5
neg.f32 %r139,%r61;
fma.rn.f32 %r66,%r139,%r65,%r73;
mul.f32 %r140,%r73,%r66;
bra $L10;
$L1:
.loc 1 101 1
mov.f32 %value,%r72;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_fmod.o/1612277259  0     0     100666  6669      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmodf
.visible .func (.param .f32 %value_out) __ieee754_fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_fmod.c"
// BEGIN VAR DEF: Zero
.const .align 4 .u32 Zero[2] =
{0,2147483648 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_fmodf
.visible .func (.param .f32 %value_out) __ieee754_fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r22;
.reg .u32 %r26;
.reg .f32 %r27;
.reg .u32 %r32;
.reg .u32 %r33;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r64;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .u16 %r76;
.reg .u16 %r77;
.reg .u16 %r78;
.reg .u32 %r80;
.reg .u32 %r81;
.reg .u16 %r83;
.reg .u16 %r85;
.reg .u32 %r86;
.reg .u16 %r87;
.reg .pred %r88;
.reg .pred %r89;
.reg .pred %r90;
.reg .u64 %r91;
.reg .u32 %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u32 %r96;
.reg .pred %r97;
.reg .pred %r98;
.reg .pred %r100;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .pred %r103;
.reg .pred %r104;
.reg .pred %r106;
.reg .u32 %r107;
.reg .pred %r108;
.reg .u32 %r109;
.reg .u32 %r110;
.reg .u32 %r112;
.reg .u32 %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .pred %r117;
.reg .u64 %r118;
.reg .u32 %r119;
.reg .u64 %r120;
.reg .u64 %r121;
.reg .u64 %r122;
.reg .pred %r124;
.reg .pred %r125;
.reg .pred %r126;
.reg .pred %r127;
.reg .u64 %r128;
.reg .u32 %r129;
.reg .u64 %r130;
.reg .u64 %r131;
.reg .u64 %r132;
.reg .pred %r134;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u32 %r139;
.reg .u32 %r140;
.reg .u32 %r141;
.reg .u32 %r142;
.reg .u32 %r143;
.reg .u32 %r144;
.reg .pred %r146;
mov.f32 %r68,%ar0;
mov.f32 %r69,%ar1;
.loc 1 39 2
mov.b32 %r45,%r68;
.loc 1 40 2
mov.b32 %r46,%r69;
.loc 1 42 5
and.b32 %r48,%r45,2147483647;
.loc 1 43 5
and.b32 %r49,%r46,2147483647;
.loc 1 47 29
set.u32.gt.s32 %r71,%r49,2139095040;
neg.s32 %r72,%r71;
.loc 1 46 5
set.u32.eq.u32 %r74,%r49,0;
neg.s32 %r75,%r74;
.loc 1 47 29
cvt.u16.u32 %r77,%r72;
cvt.u16.u32 %r78,%r75;
or.b16 %r76,%r77,%r78;
.loc 1 47 5
set.u32.gt.s32 %r80,%r48,2139095039;
neg.s32 %r81,%r80;
.loc 1 47 29
cvt.u16.u32 %r85,%r81;
or.b16 %r83,%r76,%r85;
cvt.u32.u16 %r86,%r83;
cvt.u16.u8 %r87,%r86;
setp.eq.u16 %r88,%r87,0;
@ %r88 bra $L2;
.loc 1 49 15
mul.f32 %r27,%r68,%r69;
.loc 1 49 18
div.rn.f32 %r67,%r27,%r27;
bra $L1;
$L2:
.loc 1 50 4
setp.lt.s32 %r89,%r48,%r49;
@ %r89 bra $L25;
.loc 1 41 5
and.b32 %r47,%r45,-2147483648;
.loc 1 51 4
setp.ne.u32 %r90,%r48,%r49;
@ %r90 bra $L4;
.loc 1 52 17
cvta.const.u64 %r91,Zero;
.loc 1 52 32
shr.u32 %r92,%r47,31;
.loc 1 52 17
cvt.u64.u32 %r93,%r92;
shl.b64 %r94,%r93,2;
add.u64 %r95,%r91,%r94;
ld.f32 %r67,[%r95];
bra $L1;
$L4:
.loc 1 57 4
and.b32 %r96,%r45,2139095040;
setp.ne.u32 %r97,%r96,0;
@ %r97 bra $L5;
.loc 1 58 22
shl.b32 %r52,%r48,8;
.loc 1 58 6
setp.le.s32 %r98,%r52,0;
@ %r98 bra $L26;
.loc 1 58 14
mov.u32 %r51,-126;
$L7:
.loc 1 58 47
add.u32 %r51,%r51,-1;
.loc 1 58 38
add.u32 %r52,%r52,%r52;
.loc 1 58 6
setp.gt.s32 %r100,%r52,0;
@ %r100 bra $L7;
bra $L6;
$L5:
.loc 1 59 17
shr.s32 %r101,%r48,23;
.loc 1 59 12
add.u32 %r51,%r101,-127;
bra $L6;
$L26:
.loc 1 58 14
mov.u32 %r51,-126;
$L6:
.loc 1 62 4
and.b32 %r102,%r46,2139095040;
setp.ne.u32 %r103,%r102,0;
@ %r103 bra $L8;
.loc 1 63 22
shl.b32 %r55,%r49,8;
.loc 1 63 6
setp.lt.s32 %r104,%r55,0;
@ %r104 bra $L27;
.loc 1 63 14
mov.u32 %r54,-126;
$L10:
.loc 1 63 48
add.u32 %r54,%r54,-1;
.loc 1 63 39
add.u32 %r55,%r55,%r55;
.loc 1 63 6
setp.ge.s32 %r106,%r55,0;
@ %r106 bra $L10;
bra $L9;
$L8:
.loc 1 64 17
shr.s32 %r107,%r49,23;
.loc 1 64 12
add.u32 %r54,%r107,-127;
bra $L9;
$L27:
.loc 1 63 14
mov.u32 %r54,-126;
$L9:
.loc 1 67 4
setp.lt.s32 %r108,%r51,-126;
@ %r108 bra $L11;
.loc 1 68 33
and.b32 %r32,%r45,8388607;
.loc 1 68 9
or.b32 %r22,%r32,8388608;
bra $L12;
$L11:
.loc 1 70 8
mov.u32 %r110,-126;
sub.u32 %r109,%r110,%r51;
.loc 1 71 9
shl.b32 %r22,%r48,%r109;
$L12:
.loc 1 73 4
setp.lt.s32 %r146,%r54,-126;
@ %r146 bra $L13;
.loc 1 74 33
and.b32 %r33,%r46,8388607;
.loc 1 74 9
or.b32 %r44,%r33,8388608;
bra $L14;
$L13:
.loc 1 76 8
mov.u32 %r113,-126;
sub.u32 %r112,%r113,%r54;
.loc 1 77 9
shl.b32 %r44,%r49,%r112;
$L14:
.loc 1 81 4
sub.u32 %r58,%r51,%r54;
.loc 1 82 7
setp.eq.u32 %r114,%r51,%r54;
@ %r114 bra $L15;
mov.u32 %r26,%r58;
$L19:
.loc 1 83 8
sub.u32 %r64,%r22,%r44;
.loc 1 84 8
setp.ge.s32 %r115,%r64,0;
@ %r115 bra $L16;
.loc 1 84 18
add.u32 %r22,%r22,%r22;
bra $L17;
$L16:
.loc 1 86 9
setp.ne.u32 %r117,%r64,0;
@ %r117 bra $L18;
.loc 1 87 18
cvta.const.u64 %r118,Zero;
.loc 1 87 33
shr.u32 %r119,%r47,31;
.loc 1 87 18
cvt.u64.u32 %r120,%r119;
shl.b64 %r121,%r120,2;
add.u64 %r122,%r118,%r121;
ld.f32 %r67,[%r122];
bra $L1;
$L18:
.loc 1 88 10
add.u32 %r22,%r64,%r64;
$L17:
.loc 1 82 7
add.u32 %r26,%r26,-1;
setp.ne.u32 %r124,%r26,0;
@ %r124 bra $L19;
$L15:
.loc 1 91 4
sub.u32 %r59,%r22,%r44;
.loc 1 92 4
setp.lt.s32 %r125,%r59,0;
selp.u32 %r22,%r22,%r59,%r125;
.loc 1 95 4
setp.eq.u32 %r126,%r22,0;
@ %r126 bra $L21;
.loc 1 97 7
setp.le.s32 %r127,%r22,8388607;
@ %r127 bra $L22;
bra $L23;
$L21:
.loc 1 96 17
cvta.const.u64 %r128,Zero;
.loc 1 96 32
shr.u32 %r129,%r47,31;
.loc 1 96 17
cvt.u64.u32 %r130,%r129;
shl.b64 %r131,%r130,2;
add.u64 %r132,%r128,%r131;
ld.f32 %r67,[%r132];
bra $L1;
$L22:
.loc 1 98 9
add.u32 %r22,%r22,%r22;
.loc 1 99 9
add.u32 %r54,%r54,-1;
.loc 1 97 7
setp.le.s32 %r134,%r22,8388607;
@ %r134 bra $L22;
setp.lt.s32 %r146,%r54,-126;
$L23:
.loc 1 101 4
@ %r146 bra $L24;
.loc 1 102 32
add.u32 %r136,%r54,127;
.loc 1 102 37
shl.b32 %r137,%r136,23;
.loc 1 102 15
add.u32 %r138,%r22,-8388608;
.loc 1 103 6
or.b32 %r139,%r138,%r47;
or.b32 %r140,%r137,%r139;
mov.b32 %r67,%r140;
bra $L1;
$L24:
.loc 1 107 8
mov.u32 %r142,-126;
sub.u32 %r141,%r142,%r54;
.loc 1 108 9
shr.s32 %r143,%r22,%r141;
.loc 1 109 6
or.b32 %r144,%r143,%r47;
mov.b32 %r67,%r144;
bra $L1;
$L25:
.loc 1 50 19
mov.f32 %r67,%r68;
$L1:
.loc 1 113 1
mov.f32 %value,%r67;
st.param.f32 [%value_out],%value;
ret;
}

/197            1612277259  0     0     100666  4941      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypotf
.visible .func (.param .f32 %value_out) __ieee754_hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_hypot.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_hypotf
.visible .func (.param .f32 %value_out) __ieee754_hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r46;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .u32 %r70;
.reg .pred %r71;
.reg .u32 %r72;
.reg .pred %r73;
.reg .pred %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .pred %r79;
.reg .pred %r80;
.reg .pred %r81;
.reg .u32 %r82;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .f32 %r86;
.reg .f32 %r87;
.reg .f32 %r88;
.reg .f32 %r90;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .f32 %r94;
.reg .f32 %r95;
.reg .f32 %r96;
.reg .f32 %r97;
.reg .f32 %r98;
.reg .f32 %r100;
.reg .pred %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .f32 %r104;
mov.f32 %r68,%ar0;
mov.f32 %r69,%ar1;
.loc 1 28 2
mov.b32 %r51,%r68;
.loc 1 29 5
and.b32 %r49,%r51,2147483647;
.loc 1 30 2
mov.b32 %r52,%r69;
.loc 1 31 5
and.b32 %r50,%r52,2147483647;
.loc 1 32 4
setp.ge.s32 %r71,%r49,%r50;
@ %r71 bra $L2;
mov.u32 %r70,%r49;
mov.u32 %r49,%r50;
mov.u32 %r50,%r70;
$L2:
.loc 1 33 2
mov.b32 %r67,%r49;
.loc 1 34 2
mov.b32 %r46,%r50;
.loc 1 35 8
sub.u32 %r72,%r49,%r50;
.loc 1 35 4
setp.le.s32 %r73,%r72,251658240;
@ %r73 bra $L3;
.loc 1 35 34
add.f32 %r67,%r67,%r46;
bra $L1;
$L3:
.loc 1 37 4
setp.le.s32 %r74,%r49,1484783616;
@ %r74 bra $L13;
.loc 1 38 7
setp.le.s32 %r75,%r49,2139095039;
@ %r75 bra $L6;
.loc 1 40 11
setp.eq.u32 %r76,%r49,2139095040;
@ %r76 bra $L14;
.loc 1 39 11
add.f32 %r67,%r67,%r46;
bra $L7;
$L14:
.loc 1 40 41
mov.f32 %r67,0f7f800000;
$L7:
.loc 1 41 11
setp.ne.u32 %r77,%r50,2139095040;
.loc 1 41 41
selp.f32 %r67,%r67,0f7f800000,%r77;
bra $L1;
$L6:
.loc 1 45 8
add.u32 %r49,%r49,-570425344;
.loc 1 45 27
add.u32 %r50,%r50,-570425344;
.loc 1 46 5
mov.b32 %r67,%r49;
.loc 1 47 5
mov.b32 %r46,%r50;
.loc 1 45 45
mov.u32 %r48,68;
bra $L5;
$L13:
.loc 1 36 3
mov.u32 %r48,0;
$L5:
.loc 1 49 4
setp.gt.s32 %r78,%r50,645922815;
@ %r78 bra $L8;
.loc 1 50 8
setp.eq.u32 %r79,%r50,0;
@ %r79 bra $L1;
.loc 1 52 15
setp.gt.s32 %r80,%r50,8388607;
@ %r80 bra $L9;
.loc 1 54 5
mul.f32 %r46,%r46,0f7e800000;
.loc 1 55 5
mul.f32 %r67,%r67,0f7e800000;
.loc 1 56 5
add.u32 %r48,%r48,-126;
bra $L8;
$L9:
.loc 1 58 13
add.u32 %r49,%r49,570425344;
.loc 1 59 6
add.u32 %r50,%r50,570425344;
.loc 1 60 5
add.u32 %r48,%r48,-68;
.loc 1 61 3
mov.b32 %r67,%r49;
.loc 1 62 3
mov.b32 %r46,%r50;
$L8:
.loc 1 66 4
sub.f32 %r55,%r67,%r46;
.loc 1 67 5
setp.lt.f32 %r81,%r46,%r55;
@ ! %r81 bra $L22;
.loc 1 68 6
and.b32 %r82,%r49,-4096;
mov.b32 %r60,%r82;
.loc 1 70 37
neg.f32 %r83,%r46;
.loc 1 70 46
add.f32 %r84,%r67,%r60;
.loc 1 69 9
sub.f32 %r85,%r67,%r60;
.loc 1 70 43
mul.f32 %r86,%r84,%r85;
.loc 1 70 40
neg.f32 %r87,%r86;
fma.rn.f32 %r31,%r83,%r46,%r87;
.loc 1 70 11
neg.f32 %r88,%r31;
fma.rn.f32 %r32,%r60,%r60,%r88;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r90,[%value_in];
}
mov.f32 %r67,%r90;
bra $L12;
$L22:
.loc 1 73 6
and.b32 %r91,%r50,-4096;
mov.b32 %r56,%r91;
.loc 1 74 9
sub.f32 %r57,%r46,%r56;
.loc 1 75 6
add.u32 %r92,%r49,8388608;
and.b32 %r93,%r92,-4096;
mov.b32 %r58,%r93;
.loc 1 76 9
neg.f32 %r94,%r58;
fma.rn.f32 %r59,%r67,0f40000000,%r94;
.loc 1 77 50
mul.f32 %r95,%r46,%r59;
.loc 1 77 47
fma.rn.f32 %r40,%r57,%r58,%r95;
.loc 1 77 37
neg.f32 %r96,%r55;
.loc 1 77 40
neg.f32 %r97,%r40;
fma.rn.f32 %r41,%r96,%r55,%r97;
.loc 1 77 11
neg.f32 %r98,%r41;
fma.rn.f32 %r42,%r56,%r58,%r98;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r100,[%value_in];
}
mov.f32 %r67,%r100;
$L12:
.loc 1 79 4
setp.eq.u32 %r101,%r48,0;
@ %r101 bra $L1;
.loc 1 80 6
shl.b32 %r102,%r48,23;
add.u32 %r103,%r102,1065353216;
.loc 1 81 15
mov.b32 %r104,%r103;
mul.f32 %r67,%r67,%r104;
$L1:
.loc 1 83 1
mov.f32 %value,%r67;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_j0.o/  1612277259  0     0     100666  17366     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: pzerof
.func (.param .f32 %value_out) pzerof (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_j0.c"
// BEGIN FUNCTION DECL: qzerof
.func (.param .f32 %value_out) qzerof (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0f
.visible .func (.param .f32 %value_out) __ieee754_j0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0f
.visible .func (.param .f32 %value_out) __ieee754_y0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN FUNCTION DEF: pzerof
.func (.param .f32 %value_out) pzerof (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r50;
.reg .pred %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r57;
mov.f32 %r50,%ar0;
.loc 1 293 2
mov.b32 %r35,%r50;
.loc 1 294 5
and.b32 %r36,%r35,2147483647;
.loc 1 295 4
setp.gt.s32 %r51,%r36,1090519039;
@ %r51 bra $L3;
.loc 1 296 9
setp.gt.s32 %r52,%r36,1089936471;
@ %r52 bra $L4;
.loc 1 297 9
setp.le.s32 %r53,%r36,1077336935;
selp.f32 %r48,0f416a859a,0f432d94b8,%r53;
selp.f32 %r47,0f4319e01a,0f448cffe6,%r53;
selp.f32 %r46,0f43873c32,0f44953373,%r53;
selp.f32 %r45,0f430834f0,0f43b4c1ca,%r53;
selp.f32 %r44,0fc04ef40d,0fc1fb9565,%r53;
selp.f32 %r43,0fc1331736,0fc2685112,%r53;
selp.f32 %r42,0fc0f4579f,0fc1afba52,%r53;
selp.f32 %r41,0fbfb9b1cc,0fc01a2d95,%r53;
selp.f32 %r40,0fbd8ffb12,0fbd8fffb8,%r53;
selp.f32 %r28,0f41b1c32d,0f420f6c94,%r53;
selp.f32 %r23,0fb3be98b7,0fb12f081b,%r53;
bra $L2;
$L3:
mov.f32 %r48,0f473a0bba;
mov.f32 %r47,0f47e4087c;
mov.f32 %r46,0f471e95db;
mov.f32 %r45,0f456f9beb;
mov.f32 %r44,0fc5a4285a;
mov.f32 %r43,0fc51b5376;
mov.f32 %r42,0fc3808814;
mov.f32 %r41,0fc1014e86;
mov.f32 %r40,0fbd900000;
.loc 1 295 36
mov.f32 %r28,0f42e91198;
.loc 1 295 28
mov.f32 %r23,0f00000000;
bra $L2;
$L4:
mov.f32 %r48,0f451660ee;
mov.f32 %r47,0f461665c8;
mov.f32 %r46,0f45bad7c4;
mov.f32 %r45,0f44836813;
mov.f32 %r44,0fc3ad3779;
mov.f32 %r43,0fc3a59d9b;
mov.f32 %r42,0fc287597b;
mov.f32 %r41,0fc0851b88;
mov.f32 %r40,0fbd8fffff;
.loc 1 296 36
mov.f32 %r28,0f42730408;
.loc 1 296 28
mov.f32 %r23,0fad48c58a;
$L2:
.loc 1 299 12
mul.f32 %r54,%r50,%r50;
.loc 1 299 4
mov.f32 %r55,0f3f800000;
div.rn.f32 %r37,%r55,%r54;
.loc 1 300 42
fma.rn.f32 %r24,%r37,%r44,%r43;
.loc 1 300 34
fma.rn.f32 %r25,%r24,%r37,%r42;
.loc 1 300 26
fma.rn.f32 %r26,%r25,%r37,%r41;
.loc 1 300 18
fma.rn.f32 %r27,%r26,%r37,%r40;
.loc 1 300 4
fma.rn.f32 %r38,%r27,%r37,%r23;
.loc 1 301 41
fma.rn.f32 %r30,%r37,%r48,%r47;
.loc 1 301 33
fma.rn.f32 %r31,%r30,%r37,%r46;
.loc 1 301 25
fma.rn.f32 %r32,%r31,%r37,%r45;
.loc 1 301 17
fma.rn.f32 %r33,%r32,%r37,%r28;
.loc 1 301 4
fma.rn.f32 %r39,%r33,%r37,0f3f800000;
.loc 1 302 15
div.rn.f32 %r57,%r38,%r39;
.loc 1 302 12
add.f32 %value,%r57,0f3f800000;
.loc 1 303 1
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: qzerof
.func (.param .f32 %value_out) qzerof (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
mov.f32 %r53,%ar0;
.loc 1 429 2
mov.b32 %r37,%r53;
.loc 1 430 5
and.b32 %r38,%r37,2147483647;
.loc 1 431 4
setp.gt.s32 %r54,%r38,1090519039;
@ %r54 bra $L8;
.loc 1 432 9
setp.gt.s32 %r55,%r38,1089936471;
@ %r55 bra $L9;
.loc 1 433 9
setp.le.s32 %r56,%r38,1077336935;
selp.f32 %r51,0fc0a9f358,0fc3153f59,%r56;
selp.f32 %r50,0f4354aa98,0f451d4557,%r56;
selp.f32 %r49,0f445cbbe5,0f45c9e367,%r56;
selp.f32 %r48,0f44533229,0f4567825f,%r56;
selp.f32 %r47,0f4386ac8f,0f44316c1c,%r56;
selp.f32 %r46,0f4182058c,0f4326bbe4,%r56;
selp.f32 %r45,0f41fd5471,0f432acedf,%r56;
selp.f32 %r44,0f4167edfd,0f422a7cc5,%r56;
selp.f32 %r43,0f3fffc4bf,0f405607e3,%r56;
selp.f32 %r42,0f3d95f62a,0f3d95ff70,%r56;
selp.f32 %r28,0f41f2ecb8,0f42430916,%r56;
selp.f32 %r23,0f342189db,0f3196681b,%r56;
bra $L7;
$L8:
mov.f32 %r51,0fc8a7eb69;
mov.f32 %r50,0f494d3359;
mov.f32 %r49,0f49441ed4;
mov.f32 %r48,0f480b3293;
mov.f32 %r47,0f45fd12c2;
mov.f32 %r46,0f471096a0;
mov.f32 %r45,0f460a6cca;
mov.f32 %r44,0f440b6b19;
mov.f32 %r43,0f413c4a93;
mov.f32 %r42,0f3d960000;
.loc 1 431 36
mov.f32 %r28,0f4323c6aa;
.loc 1 431 28
mov.f32 %r23,0f00000000;
bra $L7;
$L9:
mov.f32 %r51,0fc5a752be;
mov.f32 %r50,0f470c88c1;
mov.f32 %r49,0f475daf1d;
mov.f32 %r48,0f46933e94;
mov.f32 %r47,0f4501dd07;
mov.f32 %r46,0f44f8bf4b;
mov.f32 %r45,0f448067cd;
mov.f32 %r44,0f43071c90;
mov.f32 %r43,0f40babd86;
mov.f32 %r42,0f3d95ffff;
.loc 1 432 36
mov.f32 %r28,0f42a58da0;
.loc 1 432 28
mov.f32 %r23,0f2da1ec79;
$L7:
.loc 1 435 12
mul.f32 %r57,%r53,%r53;
.loc 1 435 4
mov.f32 %r58,0f3f800000;
div.rn.f32 %r39,%r58,%r57;
.loc 1 436 42
fma.rn.f32 %r24,%r39,%r46,%r45;
.loc 1 436 34
fma.rn.f32 %r25,%r24,%r39,%r44;
.loc 1 436 26
fma.rn.f32 %r26,%r25,%r39,%r43;
.loc 1 436 18
fma.rn.f32 %r27,%r26,%r39,%r42;
.loc 1 436 4
fma.rn.f32 %r40,%r27,%r39,%r23;
.loc 1 437 49
fma.rn.f32 %r30,%r39,%r51,%r50;
.loc 1 437 41
fma.rn.f32 %r31,%r30,%r39,%r49;
.loc 1 437 33
fma.rn.f32 %r32,%r31,%r39,%r48;
.loc 1 437 25
fma.rn.f32 %r33,%r32,%r39,%r47;
.loc 1 437 17
fma.rn.f32 %r34,%r33,%r39,%r28;
.loc 1 437 4
fma.rn.f32 %r41,%r34,%r39,0f3f800000;
.loc 1 438 26
div.rn.f32 %r60,%r40,%r41;
.loc 1 438 23
mov.f32 %r62,0f3e000000;
sub.f32 %r61,%r60,%r62;
.loc 1 438 29
div.rn.f32 %value,%r61,%r53;
.loc 1 439 1
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_j0f
.visible .func (.param .f32 %value_out) __ieee754_j0f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r29;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r56;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .pred %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r69;
.reg .u32 %r70;
.reg .pred %r71;
.reg .f32 %r73;
.reg .f32 %r75;
.reg .pred %r76;
.reg .f32 %r78;
.reg .f32 %r79;
.reg .f32 %r80;
.reg .pred %r81;
.reg .pred %r82;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .f32 %r87;
.reg .f32 %r89;
.reg .f32 %r90;
.reg .f32 %r91;
.reg .f32 %r93;
.reg .f32 %r94;
.reg .pred %r95;
.reg .f32 %r96;
.reg .pred %r97;
.reg .pred %r98;
.reg .f32 %r100;
.reg .pred %r101;
.reg .f32 %r102;
.reg .f32 %r103;
.reg .f32 %r105;
mov.f32 %r64,%ar0;
.loc 1 59 2
mov.b32 %r47,%r64;
.loc 1 60 5
and.b32 %r48,%r47,2147483647;
.loc 1 61 4
setp.le.s32 %r65,%r48,2139095039;
@ %r65 bra $L12;
.loc 1 61 44
mul.f32 %r66,%r64,%r64;
.loc 1 61 41
mov.f32 %r67,0f3f800000;
div.rn.f32 %r63,%r67,%r66;
bra $L11;
$L12:
.loc 1 62 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r64;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r69,[%value_in];
}
.loc 1 63 4
and.b32 %r70,%r47,1073741824;
setp.eq.u32 %r71,%r70,0;
@ %r71 bra $L14;
.loc 1 64 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r73,[%value_in];
}
.loc 1 65 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r75,[%value_in];
}
.loc 1 66 6
sub.f32 %r45,%r73,%r75;
.loc 1 67 6
add.f32 %r46,%r73,%r75;
.loc 1 68 5
setp.gt.s32 %r76,%r48,2130706431;
@ %r76 bra $L15;
.loc 1 69 12
add.f32 %r78,%r69,%r69;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r78;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r79,[%value_in];
}
.loc 1 69 9
neg.f32 %r56,%r79;
.loc 1 70 13
mul.f32 %r80,%r73,%r75;
.loc 1 70 10
setp.lt.f32 %r81,%r80,0f00000000;
@ ! %r81 bra $L25;
.loc 1 70 26
div.rn.f32 %r46,%r56,%r45;
bra $L15;
$L25:
.loc 1 71 20
div.rn.f32 %r45,%r56,%r46;
$L15:
.loc 1 77 5
setp.le.s32 %r82,%r48,1543503872;
@ %r82 bra $L18;
.loc 1 77 40
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r84,[%value_in];
}
.loc 1 77 35
mul.f32 %r85,%r46,0f3f106ebb;
.loc 1 77 23
div.rn.f32 %r63,%r85,%r84;
bra $L11;
$L18:
.loc 1 79 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),pzerof,(%out_arg1);
ld.param.f32 %r87,[%value_in];
}
.loc 1 79 26
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),qzerof,(%out_arg1);
ld.param.f32 %r89,[%value_in];
}
.loc 1 80 28
mul.f32 %r90,%r45,%r89;
.loc 1 80 26
neg.f32 %r91,%r90;
fma.rn.f32 %r29,%r46,%r87,%r91;
.loc 1 80 33
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r69;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r93,[%value_in];
}
.loc 1 80 20
mul.f32 %r94,%r29,0f3f106ebb;
.loc 1 80 9
div.rn.f32 %r63,%r94,%r93;
bra $L11;
$L14:
.loc 1 84 4
setp.gt.s32 %r95,%r48,956301311;
@ %r95 bra $L19;
.loc 1 85 13
add.f32 %r96,%r69,0f7149f2ca;
.loc 1 85 8
setp.gt.f32 %r97,%r96,0f3f800000;
@ ! %r97 bra $L19;
.loc 1 86 12
setp.le.s32 %r98,%r48,838860799;
@ %r98 bra $L22;
.loc 1 87 33
mul.f32 %r100,%r69,0fbe800000;
fma.rn.f32 %r63,%r100,%r69,0f3f800000;
bra $L11;
$L19:
.loc 1 90 4
mul.f32 %r51,%r69,%r69;
.loc 1 91 27
fma.rn.f32 %r34,%r51,0fb19eaf3c,0f35f58e88;
.loc 1 91 20
fma.rn.f32 %r35,%r34,%r51,0fb947352e;
.loc 1 91 13
fma.rn.f32 %r36,%r35,%r51,0f3c800000;
.loc 1 91 4
mul.f32 %r52,%r36,%r51;
.loc 1 92 31
fma.rn.f32 %r37,%r51,0f30a045e8,0f3509daa6;
.loc 1 92 24
fma.rn.f32 %r38,%r37,%r51,0f38f53697;
.loc 1 92 17
fma.rn.f32 %r39,%r38,%r51,0f3c7fe744;
.loc 1 92 4
fma.rn.f32 %r53,%r39,%r51,0f3f800000;
.loc 1 94 37
div.rn.f32 %r62,%r52,%r53;
.loc 1 93 4
setp.gt.s32 %r101,%r48,1065353215;
@ %r101 bra $L21;
.loc 1 94 34
mov.f32 %r103,0f3e800000;
sub.f32 %r102,%r62,%r103;
.loc 1 94 17
fma.rn.f32 %r63,%r102,%r51,0f3f800000;
bra $L11;
$L21:
.loc 1 97 17
fma.rn.f32 %r41,%r69,0f3f000000,0f3f800000;
.loc 1 97 25
fma.rn.f32 %r42,%r69,0fbf000000,0f3f800000;
.loc 1 97 30
mul.f32 %r105,%r51,%r62;
.loc 1 97 28
fma.rn.f32 %r63,%r41,%r42,%r105;
bra $L11;
$L22:
.loc 1 86 35
mov.f32 %r63,0f3f800000;
$L11:
.loc 1 99 1
mov.f32 %value,%r63;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_y0f
.visible .func (.param .f32 %value_out) __ieee754_y0f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .f32 %r29;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r54;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .pred %r61;
.reg .f32 %r62;
.reg .pred %r63;
.reg .f32 %r64;
.reg .pred %r65;
.reg .f32 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .f32 %r70;
.reg .f32 %r72;
.reg .pred %r73;
.reg .f32 %r75;
.reg .f32 %r76;
.reg .f32 %r77;
.reg .pred %r78;
.reg .pred %r79;
.reg .f32 %r81;
.reg .f32 %r82;
.reg .f32 %r84;
.reg .f32 %r86;
.reg .f32 %r87;
.reg .f32 %r89;
.reg .f32 %r90;
.reg .pred %r91;
.reg .f32 %r93;
.reg .f32 %r95;
.reg .f32 %r97;
.reg .f32 %r98;
mov.f32 %r60,%ar0;
.loc 1 128 2
mov.b32 %r47,%r60;
.loc 1 129 12
and.b32 %r48,%r47,2147483647;
.loc 1 131 4
setp.le.s32 %r61,%r48,2139095039;
@ %r61 bra $L27;
.loc 1 131 45
fma.rn.f32 %r22,%r60,%r60,%r60;
.loc 1 131 42
mov.f32 %r62,0f3f800000;
div.rn.f32 %r59,%r62,%r22;
bra $L26;
$L27:
.loc 1 132 11
setp.ne.u32 %r63,%r48,0;
@ %r63 bra $L29;
.loc 1 132 46
mov.f32 %r64,0fbf800000;
div.rn.f32 %r59,%r64,0f00000000;
bra $L26;
$L29:
.loc 1 133 11
setp.ge.s32 %r65,%r47,0;
@ %r65 bra $L30;
.loc 1 133 29
mov.f32 %r66,0f00000000;
div.rn.f32 %r59,%r66,%r66;
bra $L26;
$L30:
.loc 1 134 11
and.b32 %r67,%r47,1073741824;
setp.eq.u32 %r68,%r67,0;
@ %r68 bra $L31;
.loc 1 146 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r70,[%value_in];
}
.loc 1 147 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r72,[%value_in];
}
.loc 1 148 20
sub.f32 %r45,%r70,%r72;
.loc 1 149 20
add.f32 %r46,%r70,%r72;
.loc 1 154 19
setp.gt.s32 %r73,%r48,2130706431;
@ %r73 bra $L32;
.loc 1 155 26
add.f32 %r75,%r60,%r60;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r75;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r76,[%value_in];
}
.loc 1 155 23
neg.f32 %r54,%r76;
.loc 1 156 27
mul.f32 %r77,%r70,%r72;
.loc 1 156 24
setp.lt.f32 %r78,%r77,0f00000000;
@ ! %r78 bra $L38;
.loc 1 156 40
div.rn.f32 %r46,%r54,%r45;
bra $L32;
$L38:
.loc 1 157 40
div.rn.f32 %r45,%r54,%r46;
$L32:
.loc 1 159 19
setp.le.s32 %r79,%r48,1543503872;
@ %r79 bra $L35;
.loc 1 159 54
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r81,[%value_in];
}
.loc 1 159 49
mul.f32 %r82,%r45,0f3f106ebb;
.loc 1 159 37
div.rn.f32 %r59,%r82,%r81;
bra $L26;
$L35:
.loc 1 161 25
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),pzerof,(%out_arg1);
ld.param.f32 %r84,[%value_in];
}
.loc 1 161 40
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),qzerof,(%out_arg1);
ld.param.f32 %r86,[%value_in];
}
.loc 1 162 42
mul.f32 %r87,%r46,%r86;
.loc 1 162 40
fma.rn.f32 %r29,%r45,%r84,%r87;
.loc 1 162 47
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r89,[%value_in];
}
.loc 1 162 34
mul.f32 %r90,%r29,0f3f106ebb;
.loc 1 162 23
div.rn.f32 %r59,%r90,%r89;
bra $L26;
$L31:
.loc 1 166 4
setp.gt.s32 %r91,%r48,964689920;
@ %r91 bra $L36;
.loc 1 167 23
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r93,[%value_in];
}
.loc 1 167 17
fma.rn.f32 %r59,%r93,0f3f22f983,0fbd9726b5;
bra $L26;
$L36:
.loc 1 169 4
mul.f32 %r49,%r60,%r60;
.loc 1 170 44
fma.rn.f32 %r33,%r49,0fae2f21eb,0f32a802ba;
.loc 1 170 37
fma.rn.f32 %r34,%r33,%r49,0fb67ff53c;
.loc 1 170 30
fma.rn.f32 %r35,%r34,%r49,0f39b62a69;
.loc 1 170 23
fma.rn.f32 %r36,%r35,%r49,0fbc626746;
.loc 1 170 16
fma.rn.f32 %r37,%r36,%r49,0f3e34e80d;
.loc 1 170 4
fma.rn.f32 %r50,%r37,%r49,0fbd9726b5;
.loc 1 171 30
fma.rn.f32 %r38,%r49,0f2ff280c2,0f348b216c;
.loc 1 171 23
fma.rn.f32 %r39,%r38,%r49,0f389f65e0;
.loc 1 171 16
fma.rn.f32 %r40,%r39,%r49,0f3c509385;
.loc 1 171 4
fma.rn.f32 %r51,%r40,%r49,0f3f800000;
.loc 1 172 10
div.rn.f32 %r41,%r50,%r51;
.loc 1 172 20
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_j0f,(%out_arg1);
ld.param.f32 %r95,[%value_in];
}
.loc 1 172 37
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r97,[%value_in];
}
.loc 1 172 36
mul.f32 %r98,%r95,%r97;
.loc 1 172 13
fma.rn.f32 %r59,%r98,0f3f22f983,%r41;
$L26:
.loc 1 173 1
mov.f32 %value,%r59;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ef_j1.o/  1612277259  0     0     100666  15894     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: ponef
.func (.param .f32 %value_out) ponef (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_j1.c"
// BEGIN FUNCTION DECL: qonef
.func (.param .f32 %value_out) qonef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1f
.visible .func (.param .f32 %value_out) __ieee754_j1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1f
.visible .func (.param .f32 %value_out) __ieee754_y1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN FUNCTION DEF: ponef
.func (.param .f32 %value_out) ponef (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r50;
.reg .pred %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r57;
mov.f32 %r50,%ar0;
.loc 1 292 2
mov.b32 %r35,%r50;
.loc 1 293 5
and.b32 %r36,%r35,2147483647;
.loc 1 294 11
setp.gt.s32 %r51,%r36,1090519039;
@ %r51 bra $L3;
.loc 1 295 16
setp.gt.s32 %r52,%r36,1089936471;
@ %r52 bra $L4;
.loc 1 296 16
setp.le.s32 %r53,%r36,1077336935;
selp.f32 %r48,0f4105d590,0f42cf936c,%r53;
selp.f32 %r47,0f42eb5bd7,0f445eb3ed,%r53;
selp.f32 %r46,0f436846c7,0f4482dbe3,%r53;
selp.f32 %r45,0f42fa9499,0f43a86198,%r53;
selp.f32 %r44,0f40a25a4d,0f42423c7c,%r53;
selp.f32 %r43,0f418d8d41,0f42b61c2a,%r53;
selp.f32 %r42,0f4143e1bc,0f420c7a45,%r53;
selp.f32 %r41,0f401795c0,0f407bb5e7,%r53;
selp.f32 %r40,0f3deffa16,0f3defffab,%r53;
selp.f32 %r28,0f41ab7dec,0f420b2a4d,%r53;
selp.f32 %r23,0f33e74ea8,0f314fe10d,%r53;
bra $L2;
$L3:
mov.f32 %r48,0f46f0a88b;
mov.f32 %r47,0f47bea166;
mov.f32 %r46,0f47105c35;
mov.f32 %r45,0f45642ee5;
mov.f32 %r44,0f45f753d6;
mov.f32 %r43,0f45722bed;
mov.f32 %r42,0f43ce06a3;
mov.f32 %r41,0f4153d4ea;
mov.f32 %r40,0f3df00000;
.loc 1 294 43
mov.f32 %r28,0f42e46a2c;
.loc 1 294 35
mov.f32 %r23,0f00000000;
bra $L2;
$L4:
mov.f32 %r48,0f44bc0180;
mov.f32 %r47,0f45f52586;
mov.f32 %r46,0f45a74a23;
mov.f32 %r45,0f4477d9b1;
mov.f32 %r44,0f44042dc6;
mov.f32 %r43,0f440168b7;
mov.f32 %r42,0f42d89dca;
mov.f32 %r41,0f40d9b023;
mov.f32 %r40,0f3defffff;
.loc 1 295 43
mov.f32 %r28,0f426d1f55;
.loc 1 295 35
mov.f32 %r23,0f2d68333f;
$L2:
.loc 1 298 19
mul.f32 %r54,%r50,%r50;
.loc 1 298 11
mov.f32 %r55,0f3f800000;
div.rn.f32 %r37,%r55,%r54;
.loc 1 299 49
fma.rn.f32 %r24,%r37,%r44,%r43;
.loc 1 299 41
fma.rn.f32 %r25,%r24,%r37,%r42;
.loc 1 299 33
fma.rn.f32 %r26,%r25,%r37,%r41;
.loc 1 299 25
fma.rn.f32 %r27,%r26,%r37,%r40;
.loc 1 299 11
fma.rn.f32 %r38,%r27,%r37,%r23;
.loc 1 300 48
fma.rn.f32 %r30,%r37,%r48,%r47;
.loc 1 300 40
fma.rn.f32 %r31,%r30,%r37,%r46;
.loc 1 300 32
fma.rn.f32 %r32,%r31,%r37,%r45;
.loc 1 300 24
fma.rn.f32 %r33,%r32,%r37,%r28;
.loc 1 300 11
fma.rn.f32 %r39,%r33,%r37,0f3f800000;
.loc 1 301 22
div.rn.f32 %r57,%r38,%r39;
.loc 1 301 19
add.f32 %value,%r57,0f3f800000;
.loc 1 302 1
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: qonef
.func (.param .f32 %value_out) qonef (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .u32 %r37;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r53;
.reg .u32 %r54;
.reg .pred %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r59;
.reg .f32 %r60;
mov.f32 %r53,%ar0;
.loc 1 429 2
mov.b32 %r37,%r53;
.loc 1 430 5
and.b32 %r54,%r37,2147483647;
.loc 1 431 4
setp.le.s32 %r55,%r54,1075838975;
selp.f32 %r51,0fc09eb437,0fc88fcb48,%r55;
selp.f32 %r50,0f431bf2f2,0f4922be94,%r55;
selp.f32 %r49,0f4438d92a,0f492fb29c,%r55;
selp.f32 %r48,0f443d602e,0f4802bcd6,%r55;
selp.f32 %r47,0f437cfb47,0f45f48b17,%r55;
selp.f32 %r46,0fc1aaf9b2,0fc73d3683,%r55;
selp.f32 %r45,0fc2294d1f,0fc639273a,%r55;
selp.f32 %r44,0fc19d4f16,0fc43de683,%r55;
selp.f32 %r43,0fc0302423,0fc1822c8d,%r55;
selp.f32 %r42,0fbdd1f475,0fbdd20000,%r55;
selp.f32 %r28,0f41ec4454,0f43216537,%r55;
selp.f32 %r23,0fb43f8932,0f00000000,%r55;
.loc 1 435 12
mul.f32 %r56,%r53,%r53;
.loc 1 435 4
mov.f32 %r57,0f3f800000;
div.rn.f32 %r39,%r57,%r56;
.loc 1 436 42
fma.rn.f32 %r24,%r39,%r46,%r45;
.loc 1 436 34
fma.rn.f32 %r25,%r24,%r39,%r44;
.loc 1 436 26
fma.rn.f32 %r26,%r25,%r39,%r43;
.loc 1 436 18
fma.rn.f32 %r27,%r26,%r39,%r42;
.loc 1 436 4
fma.rn.f32 %r40,%r27,%r39,%r23;
.loc 1 437 49
fma.rn.f32 %r30,%r39,%r51,%r50;
.loc 1 437 41
fma.rn.f32 %r31,%r30,%r39,%r49;
.loc 1 437 33
fma.rn.f32 %r32,%r31,%r39,%r48;
.loc 1 437 25
fma.rn.f32 %r33,%r32,%r39,%r47;
.loc 1 437 17
fma.rn.f32 %r34,%r33,%r39,%r28;
.loc 1 437 4
fma.rn.f32 %r41,%r34,%r39,0f3f800000;
.loc 1 438 25
div.rn.f32 %r59,%r40,%r41;
.loc 1 438 22
add.f32 %r60,%r59,0f3ec00000;
.loc 1 438 28
div.rn.f32 %value,%r60,%r53;
.loc 1 439 1
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_j1f
.visible .func (.param .f32 %value_out) __ieee754_j1f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r28;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .pred %r59;
.reg .f32 %r60;
.reg .f32 %r62;
.reg .u32 %r63;
.reg .pred %r64;
.reg .f32 %r66;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .pred %r70;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .f32 %r78;
.reg .f32 %r79;
.reg .f32 %r81;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .f32 %r87;
.reg .f32 %r88;
.reg .pred %r89;
.reg .pred %r90;
.reg .f32 %r91;
.reg .pred %r92;
.reg .f32 %r93;
.reg .f32 %r94;
mov.f32 %r58,%ar0;
.loc 1 60 2
mov.b32 %r42,%r58;
.loc 1 61 5
and.b32 %r43,%r42,2147483647;
.loc 1 62 4
setp.le.s32 %r59,%r43,2139095039;
@ %r59 bra $L10;
.loc 1 62 41
mov.f32 %r60,0f3f800000;
div.rn.f32 %r57,%r60,%r58;
bra $L9;
$L10:
.loc 1 63 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r58;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r62,[%value_in];
}
.loc 1 64 4
and.b32 %r63,%r42,1073741824;
setp.eq.u32 %r64,%r63,0;
@ %r64 bra $L12;
.loc 1 65 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r66,[%value_in];
}
.loc 1 66 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r68,[%value_in];
}
.loc 1 67 8
neg.f32 %r69,%r66;
.loc 1 67 6
sub.f32 %r40,%r69,%r68;
.loc 1 68 6
sub.f32 %r41,%r66,%r68;
.loc 1 69 5
setp.gt.s32 %r70,%r43,2130706431;
@ %r70 bra $L13;
.loc 1 70 11
add.f32 %r72,%r62,%r62;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r72;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r73,[%value_in];
}
.loc 1 71 13
mul.f32 %r74,%r66,%r68;
.loc 1 71 10
setp.gt.f32 %r75,%r74,0f00000000;
@ ! %r75 bra $L20;
.loc 1 71 26
div.rn.f32 %r41,%r73,%r40;
bra $L13;
$L20:
.loc 1 72 20
div.rn.f32 %r40,%r73,%r41;
$L13:
.loc 1 78 5
setp.le.s32 %r76,%r43,1543503872;
@ %r76 bra $L16;
.loc 1 78 40
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r78,[%value_in];
}
.loc 1 78 35
mul.f32 %r79,%r41,0f3f106ebb;
.loc 1 78 23
div.rn.f32 %r57,%r79,%r78;
bra $L17;
$L16:
.loc 1 80 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),ponef,(%out_arg1);
ld.param.f32 %r81,[%value_in];
}
.loc 1 80 25
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),qonef,(%out_arg1);
ld.param.f32 %r83,[%value_in];
}
.loc 1 81 28
mul.f32 %r84,%r40,%r83;
.loc 1 81 26
neg.f32 %r85,%r84;
fma.rn.f32 %r28,%r41,%r81,%r85;
.loc 1 81 33
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r62;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r87,[%value_in];
}
.loc 1 81 20
mul.f32 %r88,%r28,0f3f106ebb;
.loc 1 81 9
div.rn.f32 %r57,%r88,%r87;
$L17:
.loc 1 83 5
setp.ge.s32 %r89,%r42,0;
@ %r89 bra $L9;
.loc 1 83 19
neg.f32 %r57,%r57;
bra $L9;
$L12:
.loc 1 87 38
mul.f32 %r57,%r58,0f3f000000;
.loc 1 86 4
setp.gt.s32 %r90,%r43,838860799;
@ %r90 bra $L18;
.loc 1 87 13
add.f32 %r91,%r58,0f7149f2ca;
.loc 1 87 8
setp.gt.f32 %r92,%r91,0f3f800000;
@ %r92 bra $L9;
$L18:
.loc 1 89 4
mul.f32 %r45,%r58,%r58;
.loc 1 90 27
fma.rn.f32 %r32,%r45,0f335557d2,0fb7862e36;
.loc 1 90 20
fma.rn.f32 %r33,%r32,%r45,0f3ab86cfd;
.loc 1 90 13
fma.rn.f32 %r34,%r33,%r45,0fbd800000;
.loc 1 90 4
mul.f32 %r46,%r34,%r45;
.loc 1 91 38
fma.rn.f32 %r35,%r45,0f2d59567e,0f31ad6446;
.loc 1 91 31
fma.rn.f32 %r36,%r35,%r45,0f359dffc2;
.loc 1 91 24
fma.rn.f32 %r37,%r36,%r45,0f3942fab6;
.loc 1 91 17
fma.rn.f32 %r38,%r37,%r45,0f3c9ce859;
.loc 1 91 4
fma.rn.f32 %r47,%r38,%r45,0f3f800000;
.loc 1 92 4
mul.f32 %r93,%r58,%r46;
.loc 1 93 23
div.rn.f32 %r94,%r93,%r47;
.loc 1 93 21
add.f32 %r57,%r57,%r94;
$L9:
.loc 1 94 1
mov.f32 %value,%r57;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_y1f
.visible .func (.param .f32 %value_out) __ieee754_y1f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .f32 %r29;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r45;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .pred %r62;
.reg .f32 %r63;
.reg .pred %r64;
.reg .f32 %r65;
.reg .pred %r66;
.reg .f32 %r67;
.reg .u32 %r68;
.reg .pred %r69;
.reg .f32 %r71;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .pred %r75;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .f32 %r79;
.reg .pred %r80;
.reg .pred %r81;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r86;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .f32 %r91;
.reg .f32 %r92;
.reg .pred %r93;
.reg .f32 %r94;
.reg .f32 %r96;
.reg .f32 %r98;
.reg .f32 %r99;
.reg .f32 %r100;
.reg .f32 %r101;
.reg .f32 %r102;
mov.f32 %r61,%ar0;
.loc 1 129 2
mov.b32 %r49,%r61;
.loc 1 130 12
and.b32 %r50,%r49,2147483647;
.loc 1 132 4
setp.le.s32 %r62,%r50,2139095039;
@ %r62 bra $L22;
.loc 1 132 44
fma.rn.f32 %r22,%r61,%r61,%r61;
.loc 1 132 41
mov.f32 %r63,0f3f800000;
div.rn.f32 %r60,%r63,%r22;
bra $L21;
$L22:
.loc 1 133 11
setp.ne.u32 %r64,%r50,0;
@ %r64 bra $L24;
.loc 1 133 46
mov.f32 %r65,0fbf800000;
div.rn.f32 %r60,%r65,0f00000000;
bra $L21;
$L24:
.loc 1 134 11
setp.ge.s32 %r66,%r49,0;
@ %r66 bra $L25;
.loc 1 134 29
mov.f32 %r67,0f00000000;
div.rn.f32 %r60,%r67,%r67;
bra $L21;
$L25:
.loc 1 135 11
and.b32 %r68,%r49,1073741824;
setp.eq.u32 %r69,%r68,0;
@ %r69 bra $L26;
.loc 1 136 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r71,[%value_in];
}
.loc 1 137 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r73,[%value_in];
}
.loc 1 138 22
neg.f32 %r74,%r71;
.loc 1 138 20
sub.f32 %r47,%r74,%r73;
.loc 1 139 20
sub.f32 %r48,%r71,%r73;
.loc 1 140 19
setp.gt.s32 %r75,%r50,2130706431;
@ %r75 bra $L27;
.loc 1 141 25
add.f32 %r77,%r61,%r61;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r77;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r78,[%value_in];
}
.loc 1 142 27
mul.f32 %r79,%r71,%r73;
.loc 1 142 24
setp.gt.f32 %r80,%r79,0f00000000;
@ ! %r80 bra $L33;
.loc 1 142 40
div.rn.f32 %r48,%r78,%r47;
bra $L27;
$L33:
.loc 1 143 40
div.rn.f32 %r47,%r78,%r48;
$L27:
.loc 1 156 19
setp.le.s32 %r81,%r50,1543503872;
@ %r81 bra $L30;
.loc 1 156 54
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r83,[%value_in];
}
.loc 1 156 49
mul.f32 %r84,%r47,0f3f106ebb;
.loc 1 156 37
div.rn.f32 %r60,%r84,%r83;
bra $L21;
$L30:
.loc 1 158 25
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),ponef,(%out_arg1);
ld.param.f32 %r86,[%value_in];
}
.loc 1 158 39
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),qonef,(%out_arg1);
ld.param.f32 %r88,[%value_in];
}
.loc 1 159 42
mul.f32 %r89,%r48,%r88;
.loc 1 159 40
fma.rn.f32 %r29,%r47,%r86,%r89;
.loc 1 159 47
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r91,[%value_in];
}
.loc 1 159 34
mul.f32 %r92,%r29,0f3f106ebb;
.loc 1 159 23
div.rn.f32 %r60,%r92,%r91;
bra $L21;
$L26:
.loc 1 163 11
setp.gt.s32 %r93,%r50,612368384;
@ %r93 bra $L31;
.loc 1 164 24
mov.f32 %r94,0fbf22f983;
div.rn.f32 %r60,%r94,%r61;
bra $L21;
$L31:
.loc 1 166 11
mul.f32 %r51,%r61,%r61;
.loc 1 167 45
fma.rn.f32 %r34,%r51,0fb3c56003,0f37c5581c;
.loc 1 167 36
fma.rn.f32 %r35,%r34,%r51,0fbafaaf2a;
.loc 1 167 27
fma.rn.f32 %r36,%r35,%r51,0f3d4e9e3c;
.loc 1 167 11
fma.rn.f32 %r52,%r36,%r51,0fbe48c331;
.loc 1 168 52
fma.rn.f32 %r37,%r51,0f2d9281cf,0f31d5f8eb;
.loc 1 168 43
fma.rn.f32 %r38,%r37,%r51,0f35b602d4;
.loc 1 168 34
fma.rn.f32 %r39,%r38,%r51,0f3954644b;
.loc 1 168 25
fma.rn.f32 %r40,%r39,%r51,0f3ca3286a;
.loc 1 168 11
fma.rn.f32 %r53,%r40,%r51,0f3f800000;
.loc 1 169 20
div.rn.f32 %r41,%r52,%r53;
.loc 1 169 31
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),__ieee754_j1f,(%out_arg1);
ld.param.f32 %r96,[%value_in];
}
.loc 1 169 48
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r61;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r98,[%value_in];
}
.loc 1 169 69
mov.f32 %r100,0f3f800000;
div.rn.f32 %r99,%r100,%r61;
.loc 1 169 65
neg.f32 %r101,%r99;
fma.rn.f32 %r45,%r96,%r98,%r101;
.loc 1 169 29
mul.f32 %r102,%r45,0f3f22f983;
.loc 1 169 24
fma.rn.f32 %r60,%r41,%r61,%r102;
$L21:
.loc 1 170 1
mov.f32 %value,%r60;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ef_jn.o/  1612277259  0     0     100666  13527     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_jnf
.visible .func (.param .f32 %value_out) __ieee754_jnf (.param .u32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_jn.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_ynf
.visible .func (.param .f32 %value_out) __ieee754_ynf (.param .u32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0f
.extern .func (.param .f32 %value_out) __ieee754_j0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1f
.extern .func (.param .f32 %value_out) __ieee754_j1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0f
.extern .func (.param .f32 %value_out) __ieee754_y0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1f
.extern .func (.param .f32 %value_out) __ieee754_y1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_jnf
.visible .func (.param .f32 %value_out) __ieee754_jnf (.param .u32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r27;
.reg .f32 %r31;
.reg .u32 %r33;
.reg .f32 %r35;
.reg .f32 %r39;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r47;
.reg .u32 %r48;
.reg .f32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .f32 %r53;
.reg .u32 %r56;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r60;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .u32 %r64;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .f32 %r76;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .u32 %r80;
.reg .f32 %r82;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .u32 %r86;
.reg .f32 %r87;
.reg .pred %r88;
.reg .pred %r89;
.reg .pred %r90;
.reg .f32 %r92;
.reg .pred %r93;
.reg .f32 %r95;
.reg .u32 %r97;
.reg .f32 %r99;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .u16 %r106;
.reg .u16 %r107;
.reg .u16 %r108;
.reg .u32 %r109;
.reg .u16 %r110;
.reg .pred %r111;
.reg .pred %r112;
.reg .f32 %r114;
.reg .f32 %r116;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .pred %r120;
.reg .pred %r121;
.reg .pred %r122;
.reg .f32 %r123;
.reg .pred %r124;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .pred %r128;
.reg .f32 %r129;
.reg .pred %r130;
.reg .u32 %r131;
.reg .u32 %r133;
.reg .f32 %r135;
.reg .f32 %r136;
.reg .f32 %r137;
.reg .pred %r138;
.reg .f32 %r140;
.reg .f32 %r141;
.reg .f32 %r143;
.reg .f32 %r144;
.reg .pred %r145;
.reg .f32 %r146;
.reg .f32 %r147;
.reg .pred %r148;
.reg .f32 %r149;
.reg .f32 %r150;
.reg .pred %r151;
.reg .pred %r152;
.reg .f32 %r154;
.reg .f32 %r155;
.reg .pred %r156;
.reg .f32 %r158;
mov.u32 %r86,%ar0;
mov.f32 %r87,%ar1;
.loc 1 46 2
mov.b32 %r58,%r87;
.loc 1 47 5
and.b32 %r59,%r58,2147483647;
.loc 1 49 4
setp.le.s32 %r88,%r59,2139095040;
@ %r88 bra $L2;
.loc 1 49 35
add.f32 %r85,%r87,%r87;
bra $L1;
$L2:
.loc 1 50 4
setp.ge.s32 %r89,%r86,0;
@ %r89 bra $L4;
.loc 1 51 5
neg.s32 %r86,%r86;
.loc 1 52 5
neg.f32 %r87,%r87;
.loc 1 53 6
add.u32 %r58,%r58,-2147483648;
bra $L5;
$L4:
.loc 1 55 4
setp.ne.u32 %r90,%r86,0;
@ %r90 bra $L5;
.loc 1 55 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r87;
call (%value_in),__ieee754_j0f,(%out_arg1);
ld.param.f32 %r92,[%value_in];
}
mov.f32 %r85,%r92;
bra $L1;
$L5:
.loc 1 56 4
setp.ne.u32 %r93,%r86,1;
@ %r93 bra $L6;
.loc 1 56 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r87;
call (%value_in),__ieee754_j1f,(%out_arg1);
ld.param.f32 %r95,[%value_in];
}
mov.f32 %r85,%r95;
bra $L1;
$L6:
.loc 1 57 6
shr.u32 %r97,%r58,31;
and.b32 %r60,%r97,%r86;
.loc 1 58 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r87;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r99,[%value_in];
}
.loc 1 59 5
set.u32.eq.u32 %r101,%r59,0;
neg.s32 %r102,%r101;
.loc 1 59 28
set.u32.eq.u32 %r104,%r59,2139095040;
neg.s32 %r105,%r104;
.loc 1 59 26
cvt.u16.u32 %r107,%r102;
cvt.u16.u32 %r108,%r105;
or.b16 %r106,%r107,%r108;
.loc 1 59 4
cvt.u32.u16 %r109,%r106;
cvt.u16.u8 %r110,%r109;
setp.ne.u16 %r111,%r110,0;
@ %r111 bra $L26;
.loc 1 61 10
cvt.rn.f32.s32 %r27,%r86;
.loc 1 61 9
setp.le.f32 %r112,%r27,%r99;
@ ! %r112 bra $L42;
.loc 1 63 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r99;
call (%value_in),__ieee754_j0f,(%out_arg1);
ld.param.f32 %r114,[%value_in];
}
mov.f32 %r31,%r114;
.loc 1 64 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r99;
call (%value_in),__ieee754_j1f,(%out_arg1);
ld.param.f32 %r116,[%value_in];
}
mov.f32 %r85,%r116;
add.u32 %r56,%r86,%r86;
mov.u32 %r64,2;
$L10:
neg.f32 %r83,%r31;
mov.f32 %r31,%r85;
.loc 1 67 10
cvt.rn.f32.s32 %r118,%r64;
.loc 1 67 22
div.rn.f32 %r119,%r118,%r99;
.loc 1 67 5
fma.rn.f32 %r85,%r119,%r85,%r83;
.loc 1 65 6
add.u32 %r64,%r64,2;
setp.ne.u32 %r120,%r56,%r64;
@ %r120 bra $L10;
bra $L7;
$L42:
.loc 1 71 8
setp.gt.s32 %r121,%r59,813694975;
@ %r121 bra $L11;
.loc 1 75 5
setp.gt.s32 %r122,%r86,33;
@ %r122 bra $L27;
.loc 1 78 12
mul.f32 %r76,%r99,0f3f000000;
add.u32 %r51,%r86,1;
.loc 1 78 30
mov.f32 %r78,%r76;
.loc 1 79 13
mov.f32 %r77,0f3f800000;
.loc 1 79 19
mov.u32 %r50,2;
$L12:
.loc 1 80 9
cvt.rn.f32.s32 %r123,%r50;
.loc 1 80 6
mul.f32 %r77,%r77,%r123;
.loc 1 81 6
mul.f32 %r78,%r78,%r76;
.loc 1 79 28
add.u32 %r50,%r50,1;
.loc 1 79 7
setp.ne.u32 %r124,%r51,%r50;
@ %r124 bra $L12;
.loc 1 83 9
div.rn.f32 %r85,%r78,%r77;
bra $L7;
$L11:
.loc 1 117 10
add.u32 %r33,%r86,%r86;
.loc 1 117 13
cvt.rn.f32.s32 %r126,%r33;
.loc 1 117 6
div.rn.f32 %r35,%r126,%r99;
.loc 1 117 26
mov.f32 %r127,0f40000000;
div.rn.f32 %r62,%r127,%r99;
.loc 1 118 14
add.f32 %r74,%r35,%r62;
.loc 1 118 24
fma.rn.f32 %r63,%r35,%r74,0fbf800000;
.loc 1 119 8
setp.lt.f32 %r128,%r63,0f4e6e6b28;
@ ! %r128 bra $L43;
.loc 1 118 45
mov.u32 %r73,1;
bra $L15;
$L28:
.loc 1 123 7
mov.f32 %r63,%r75;
$L15:
.loc 1 120 6
add.u32 %r73,%r73,1;
.loc 1 120 14
add.f32 %r74,%r74,%r62;
.loc 1 121 8
neg.f32 %r129,%r35;
fma.rn.f32 %r75,%r74,%r63,%r129;
mov.f32 %r35,%r63;
.loc 1 119 8
setp.lt.f32 %r130,%r75,0f4e6e6b28;
@ %r130 bra $L28;
bra $L44;
$L43:
.loc 1 126 23
add.u32 %r131,%r86,1;
.loc 1 126 17
add.u32 %r48,%r131,%r131;
bra $L17;
$L44:
.loc 1 126 23
add.u32 %r133,%r73,%r86;
.loc 1 126 17
add.u32 %r48,%r133,%r133;
$L17:
.loc 1 126 8
mov.f32 %r53,0f00000000;
.loc 1 126 44
mov.f32 %r137,0f3f800000;
$L18:
.loc 1 126 52
cvt.rn.f32.s32 %r135,%r48;
div.rn.f32 %r136,%r135,%r99;
.loc 1 126 54
sub.f32 %r39,%r136,%r53;
.loc 1 126 44
div.rn.f32 %r53,%r137,%r39;
.loc 1 126 36
add.u32 %r48,%r48,-2;
.loc 1 126 3
setp.le.s32 %r138,%r33,%r48;
@ %r138 bra $L18;
.loc 1 139 13
mul.f32 %r140,%r27,%r62;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r140;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r141,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r141;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r143,[%value_in];
}
.loc 1 141 16
add.u32 %r72,%r86,-1;
.loc 1 141 33
add.u32 %r80,%r33,-2;
.loc 1 139 7
mul.f32 %r144,%r27,%r143;
.loc 1 140 5
setp.lt.f32 %r145,%r144,0f42b17180;
@ ! %r145 bra $L45;
.loc 1 141 23
cvt.rn.f32.s32 %r71,%r80;
.loc 1 126 44
mov.f32 %r82,%r53;
.loc 1 128 5
mov.f32 %r84,0f3f800000;
.loc 1 146 7
mov.f32 %r147,0f40000000;
bra $L21;
$L29:
.loc 1 144 7
mov.f32 %r84,%r49;
$L21:
.loc 1 143 6
mul.f32 %r146,%r84,%r71;
.loc 1 144 10
div.rn.f32 %r43,%r146,%r99;
.loc 1 144 7
sub.f32 %r49,%r43,%r82;
.loc 1 146 7
sub.f32 %r71,%r71,%r147;
.loc 1 141 42
add.u32 %r72,%r72,-1;
mov.f32 %r82,%r84;
.loc 1 141 11
setp.ne.u32 %r148,%r72,0;
@ %r148 bra $L29;
bra $L22;
$L45:
.loc 1 149 23
cvt.rn.f32.s32 %r69,%r80;
.loc 1 126 44
mov.f32 %r47,%r53;
.loc 1 128 5
mov.f32 %r49,0f3f800000;
.loc 1 154 7
mov.f32 %r150,0f40000000;
.loc 1 159 11
mov.f32 %r158,%r49;
$L25:
.loc 1 151 6
mul.f32 %r149,%r49,%r69;
.loc 1 152 10
div.rn.f32 %r44,%r149,%r99;
.loc 1 152 7
sub.f32 %r68,%r44,%r47;
.loc 1 154 7
sub.f32 %r69,%r69,%r150;
.loc 1 156 6
setp.gt.f32 %r151,%r68,0f501502f9;
@ ! %r151 bra $L46;
.loc 1 157 10
div.rn.f32 %r47,%r49,%r68;
.loc 1 158 10
div.rn.f32 %r53,%r53,%r68;
.loc 1 159 11
mov.f32 %r49,%r158;
bra $L23;
$L46:
mov.f32 %r47,%r49;
.loc 1 152 7
mov.f32 %r49,%r68;
$L23:
.loc 1 149 42
add.u32 %r72,%r72,-1;
.loc 1 149 11
setp.ne.u32 %r152,%r72,0;
@ %r152 bra $L25;
$L22:
.loc 1 163 14
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r99;
call (%value_in),__ieee754_j0f,(%out_arg1);
ld.param.f32 %r154,[%value_in];
}
.loc 1 163 13
mul.f32 %r155,%r154,%r53;
.loc 1 163 9
div.rn.f32 %r85,%r155,%r49;
bra $L7;
$L26:
.loc 1 60 8
mov.f32 %r85,0f00000000;
bra $L7;
$L27:
mov.f32 %r85,0f00000000;
$L7:
.loc 1 166 4
setp.eq.u32 %r156,%r60,0;
@ %r156 bra $L1;
.loc 1 166 20
neg.f32 %r85,%r85;
$L1:
.loc 1 167 1
mov.f32 %value,%r85;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __ieee754_ynf
.visible .func (.param .f32 %value_out) __ieee754_ynf (.param .u32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r29;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .f32 %r36;
.reg .u32 %r41;
.reg .f32 %r44;
.reg .u32 %r45;
.reg .f32 %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .f32 %r49;
.reg .pred %r50;
.reg .f32 %r51;
.reg .pred %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .pred %r56;
.reg .f32 %r58;
.reg .pred %r59;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .pred %r63;
.reg .f32 %r65;
.reg .f32 %r67;
.reg .u32 %r68;
.reg .pred %r69;
.reg .u32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .u32 %r75;
.reg .u32 %r76;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u16 %r81;
.reg .u16 %r82;
.reg .u16 %r83;
.reg .u32 %r84;
.reg .u16 %r85;
.reg .pred %r86;
.reg .pred %r87;
mov.u32 %r45,%ar0;
mov.f32 %r46,%ar1;
.loc 1 180 2
mov.b32 %r33,%r46;
.loc 1 181 5
and.b32 %r34,%r33,2147483647;
.loc 1 183 4
setp.le.s32 %r47,%r34,2139095040;
@ %r47 bra $L48;
.loc 1 183 35
add.f32 %r44,%r46,%r46;
bra $L47;
$L48:
.loc 1 184 4
setp.ne.u32 %r48,%r34,0;
@ %r48 bra $L50;
.loc 1 184 39
mov.f32 %r49,0fbf800000;
div.rn.f32 %r44,%r49,0f00000000;
bra $L47;
$L50:
.loc 1 185 4
setp.ge.s32 %r50,%r33,0;
@ %r50 bra $L51;
.loc 1 185 22
mov.f32 %r51,0f00000000;
div.rn.f32 %r44,%r51,%r51;
bra $L47;
$L51:
.loc 1 187 4
setp.ge.s32 %r52,%r45,0;
@ %r52 bra $L52;
.loc 1 188 5
neg.s32 %r45,%r45;
.loc 1 189 20
add.u32 %r53,%r45,%r45;
and.b32 %r54,%r53,2;
.loc 1 189 8
mov.u32 %r55,1;
sub.u32 %r35,%r55,%r54;
bra $L53;
$L52:
.loc 1 191 4
setp.ne.u32 %r56,%r45,0;
@ %r56 bra $L57;
.loc 1 191 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),__ieee754_y0f,(%out_arg1);
ld.param.f32 %r58,[%value_in];
}
mov.f32 %r44,%r58;
bra $L47;
$L57:
.loc 1 186 7
mov.u32 %r35,1;
$L53:
.loc 1 192 4
setp.ne.u32 %r59,%r45,1;
@ %r59 bra $L54;
.loc 1 192 23
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),__ieee754_y1f,(%out_arg1);
ld.param.f32 %r61,[%value_in];
}
.loc 1 192 22
cvt.rn.f32.s32 %r62,%r35;
mul.f32 %r44,%r62,%r61;
bra $L47;
$L54:
.loc 1 193 4
setp.eq.u32 %r63,%r34,2139095040;
@ %r63 bra $L58;
.loc 1 195 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),__ieee754_y0f,(%out_arg1);
ld.param.f32 %r65,[%value_in];
}
mov.f32 %r29,%r65;
.loc 1 196 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),__ieee754_y1f,(%out_arg1);
ld.param.f32 %r67,[%value_in];
}
mov.f32 %r36,%r67;
.loc 1 199 2
mov.b32 %r68,%r36;
setp.eq.u32 %r69,%r68,-8388608;
@ %r69 bra $L59;
.loc 1 199 7
mov.u32 %r41,1;
bra $L56;
$L60:
.loc 1 201 8
mov.f32 %r36,%r44;
$L56:
.loc 1 201 20
add.u32 %r70,%r41,%r41;
.loc 1 201 11
cvt.rn.f32.s32 %r71,%r70;
.loc 1 201 23
div.rn.f32 %r72,%r71,%r46;
.loc 1 201 8
neg.f32 %r73,%r29;
fma.rn.f32 %r44,%r72,%r36,%r73;
.loc 1 199 31
add.u32 %r41,%r41,1;
mov.f32 %r29,%r36;
.loc 1 199 11
set.u32.lt.s32 %r75,%r41,%r45;
neg.s32 %r76,%r75;
.loc 1 199 17
mov.b32 %r78,%r44;
set.u32.ne.u32 %r79,%r78,-8388608;
neg.s32 %r80,%r79;
.loc 1 199 13
cvt.u16.u32 %r82,%r76;
cvt.u16.u32 %r83,%r80;
and.b16 %r81,%r82,%r83;
.loc 1 199 2
cvt.u32.u16 %r84,%r81;
cvt.u16.u8 %r85,%r84;
setp.ne.u16 %r86,%r85,0;
@ %r86 bra $L60;
bra $L55;
$L59:
.loc 1 196 6
mov.f32 %r44,%r67;
$L55:
.loc 1 205 4
setp.eq.u32 %r87,%r35,1;
@ %r87 bra $L47;
.loc 1 205 35
neg.f32 %r44,%r44;
bra $L47;
$L58:
.loc 1 193 39
mov.f32 %r44,0f00000000;
$L47:
.loc 1 206 1
mov.f32 %value,%r44;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_log.o/ 1612277259  0     0     100666  5676      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.visible .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_log.c"
// BEGIN GLOBAL FUNCTION DEF: __ieee754_logf
.visible .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r45;
.reg .f32 %r48;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .u32 %r64;
.reg .f32 %r65;
.reg .u32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r81;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .u32 %r86;
.reg .pred %r87;
.reg .f32 %r88;
.reg .pred %r89;
.reg .f32 %r90;
.reg .pred %r91;
.reg .pred %r92;
.reg .f32 %r93;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u32 %r96;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .f32 %r100;
.reg .f32 %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .pred %r104;
.reg .pred %r105;
.reg .pred %r106;
.reg .f32 %r107;
.reg .pred %r109;
.reg .f32 %r111;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .f32 %r116;
.reg .pred %r117;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .pred %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .f32 %r124;
.reg .f32 %r125;
.reg .pred %r126;
.reg .f32 %r128;
.reg .f32 %r129;
mov.f32 %r85,%ar0;
.loc 1 51 2
mov.b32 %r51,%r85;
.loc 1 54 6
and.b32 %r86,%r51,2147483647;
.loc 1 54 5
setp.ne.u32 %r87,%r86,0;
@ %r87 bra $L2;
.loc 1 55 19
mov.f32 %r88,0fcc000000;
div.rn.f32 %r84,%r88,0f00000000;
bra $L1;
$L2:
.loc 1 56 12
setp.ge.s32 %r89,%r51,0;
@ %r89 bra $L4;
.loc 1 56 28
sub.f32 %r90,%r85,%r85;
.loc 1 56 31
div.rn.f32 %r84,%r90,0f00000000;
bra $L1;
$L4:
.loc 1 57 5
setp.le.s32 %r91,%r51,2139095039;
@ %r91 bra $L5;
.loc 1 57 40
add.f32 %r84,%r85,%r85;
bra $L1;
$L5:
.loc 1 58 5
setp.gt.s32 %r92,%r51,8388607;
@ %r92 bra $L13;
.loc 1 59 17
mul.f32 %r93,%r85,0f4c000000;
.loc 1 60 6
mov.b32 %r51,%r93;
.loc 1 59 8
mov.u32 %r50,-25;
bra $L6;
$L13:
.loc 1 53 3
mov.u32 %r50,0;
$L6:
.loc 1 62 10
shr.s32 %r94,%r51,23;
.loc 1 62 15
add.u32 %r95,%r94,-127;
.loc 1 62 4
add.u32 %r55,%r95,%r50;
.loc 1 63 5
and.b32 %r56,%r51,8388607;
.loc 1 64 9
add.u32 %r96,%r56,4913952;
.loc 1 64 4
and.b32 %r57,%r96,8388608;
.loc 1 66 9
shr.u32 %r97,%r96,23;
.loc 1 66 4
add.u32 %r59,%r97,%r55;
.loc 1 65 2
xor.b32 %r98,%r57,1065353216;
or.b32 %r99,%r98,%r56;
.loc 1 67 4
mov.b32 %r100,%r99;
mov.f32 %r101,0f3f800000;
sub.f32 %r60,%r100,%r101;
.loc 1 68 20
add.u32 %r102,%r56,15;
.loc 1 68 25
and.b32 %r103,%r102,8388592;
.loc 1 68 4
setp.ne.u32 %r104,%r103,0;
@ %r104 bra $L7;
.loc 1 69 14
setp.neu.f32 %r105,%r60,0f00000000;
@ %r105 bra $L8;
.loc 1 69 28
setp.eq.u32 %r106,%r59,0;
@ %r106 bra $L14;
.loc 1 69 57
cvt.rn.f32.s32 %r73,%r59;
.loc 1 70 52
mul.f32 %r107,%r73,0f3717f7d1;
.loc 1 70 49
fma.rn.f32 %r84,%r73,0f3f317180,%r107;
bra $L1;
$L8:
.loc 1 71 11
mul.f32 %r33,%r60,%r60;
.loc 1 71 25
fma.rn.f32 %r34,%r60,0fbeaaaaab,0f3f000000;
.loc 1 71 8
mul.f32 %r71,%r33,%r34;
.loc 1 72 8
setp.ne.u32 %r109,%r59,0;
@ %r109 bra $L9;
.loc 1 72 23
sub.f32 %r84,%r60,%r71;
bra $L1;
$L9:
.loc 1 72 35
cvt.rn.f32.s32 %r72,%r59;
.loc 1 73 32
fma.rn.f32 %r35,%r72,0fb717f7d1,%r71;
.loc 1 73 43
sub.f32 %r111,%r35,%r60;
.loc 1 73 28
neg.f32 %r112,%r111;
fma.rn.f32 %r84,%r72,0f3f317180,%r112;
bra $L1;
$L7:
.loc 1 75 20
add.f32 %r113,%r60,0f40000000;
.loc 1 75 5
div.rn.f32 %r61,%r60,%r113;
.loc 1 76 5
cvt.rn.f32.s32 %r62,%r59;
.loc 1 77 4
mul.f32 %r63,%r61,%r61;
.loc 1 78 4
add.u32 %r64,%r56,-3187664;
.loc 1 79 4
mul.f32 %r65,%r63,%r63;
.loc 1 81 19
fma.rn.f32 %r38,%r65,0f3e1cd04f,0f3e638e29;
.loc 1 81 12
fma.rn.f32 %r39,%r38,%r65,0f3ecccccd;
.loc 1 82 26
fma.rn.f32 %r40,%r65,0f3e178897,0f3e3a3325;
.loc 1 82 19
fma.rn.f32 %r41,%r40,%r65,0f3e924925;
.loc 1 82 12
fma.rn.f32 %r42,%r41,%r65,0f3f2aaaab;
.loc 1 80 4
mov.u32 %r115,3523208;
sub.u32 %r114,%r115,%r56;
.loc 1 83 4
or.b32 %r68,%r114,%r64;
.loc 1 82 4
mul.f32 %r116,%r42,%r63;
.loc 1 84 4
fma.rn.f32 %r69,%r39,%r65,%r116;
.loc 1 85 4
setp.le.s32 %r117,%r68,0;
@ %r117 bra $L10;
.loc 1 86 21
mul.f32 %r118,%r60,0f3f000000;
.loc 1 86 10
mul.f32 %r70,%r118,%r60;
.loc 1 87 37
add.f32 %r119,%r69,%r70;
.loc 1 87 31
mul.f32 %r83,%r119,%r61;
.loc 1 87 8
setp.ne.u32 %r120,%r59,0;
@ %r120 bra $L11;
.loc 1 87 29
sub.f32 %r121,%r70,%r83;
.loc 1 87 23
sub.f32 %r84,%r60,%r121;
bra $L1;
$L11:
.loc 1 88 43
fma.rn.f32 %r45,%r62,0f3717f7d1,%r83;
.loc 1 88 31
sub.f32 %r122,%r70,%r45;
.loc 1 88 55
sub.f32 %r123,%r122,%r60;
.loc 1 88 24
neg.f32 %r124,%r123;
fma.rn.f32 %r84,%r62,0f3f317180,%r124;
bra $L1;
$L10:
.loc 1 90 28
sub.f32 %r125,%r60,%r69;
.loc 1 90 25
mul.f32 %r81,%r125,%r61;
.loc 1 90 8
setp.ne.u32 %r126,%r59,0;
@ %r126 bra $L12;
.loc 1 90 23
sub.f32 %r84,%r60,%r81;
bra $L1;
$L12:
.loc 1 91 34
fma.rn.f32 %r48,%r62,0fb717f7d1,%r81;
.loc 1 91 45
sub.f32 %r128,%r48,%r60;
.loc 1 91 24
neg.f32 %r129,%r128;
fma.rn.f32 %r84,%r62,0f3f317180,%r129;
bra $L1;
$L14:
.loc 1 69 42
mov.f32 %r84,0f00000000;
$L1:
.loc 1 93 1
mov.f32 %value,%r84;
st.param.f32 [%value_out],%value;
ret;
}
/215            1612277259  0     0     100666  2643      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log10f
.visible .func (.param .f32 %value_out) __ieee754_log10f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_log10.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_log10f
.visible .func (.param .f32 %value_out) __ieee754_log10f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r28;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .f32 %r42;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .u32 %r47;
.reg .pred %r48;
.reg .f32 %r49;
.reg .pred %r50;
.reg .f32 %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .f32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .f32 %r58;
.reg .u32 %r59;
.reg .u32 %r60;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
mov.f32 %r46,%ar0;
.loc 1 44 2
mov.b32 %r35,%r46;
.loc 1 47 13
and.b32 %r47,%r35,2147483647;
.loc 1 47 12
setp.ne.u32 %r48,%r47,0;
@ %r48 bra $L2;
.loc 1 48 26
mov.f32 %r49,0fcc000000;
div.rn.f32 %r45,%r49,0f00000000;
bra $L1;
$L2:
.loc 1 49 12
setp.ge.s32 %r50,%r35,0;
@ %r50 bra $L4;
.loc 1 49 28
sub.f32 %r51,%r46,%r46;
.loc 1 49 31
div.rn.f32 %r45,%r51,0f00000000;
bra $L1;
$L4:
.loc 1 50 5
setp.le.s32 %r52,%r35,2139095039;
@ %r52 bra $L5;
.loc 1 50 40
add.f32 %r45,%r46,%r46;
bra $L1;
$L5:
.loc 1 51 12
setp.gt.s32 %r53,%r35,8388607;
@ %r53 bra $L7;
.loc 1 52 24
mul.f32 %r54,%r46,0f4c000000;
.loc 1 53 6
mov.b32 %r35,%r54;
.loc 1 52 15
mov.u32 %r34,-25;
bra $L6;
$L7:
.loc 1 46 10
mov.u32 %r34,0;
$L6:
.loc 1 55 10
shr.s32 %r55,%r35,23;
.loc 1 55 15
add.u32 %r56,%r55,-127;
.loc 1 55 4
add.u32 %r39,%r56,%r34;
.loc 1 56 33
shr.u32 %r40,%r39,31;
.loc 1 57 17
and.b32 %r28,%r35,8388607;
.loc 1 58 23
add.u32 %r57,%r39,%r40;
.loc 1 58 12
cvt.rn.f32.s32 %r42,%r57;
.loc 1 57 36
mov.u32 %r60,127;
sub.u32 %r59,%r60,%r40;
.loc 1 57 39
shl.b32 %r61,%r59,23;
.loc 1 57 12
or.b32 %r62,%r61,%r28;
.loc 1 60 28
mov.b32 %r58,%r62;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r58;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r63,[%value_in];
}
.loc 1 60 27
mul.f32 %r64,%r63,0f3ede5bd9;
.loc 1 60 5
fma.rn.f32 %r44,%r42,0f355427db,%r64;
.loc 1 61 11
fma.rn.f32 %r45,%r42,0f3e9a2080,%r44;
$L1:
.loc 1 62 1
mov.f32 %value,%r45;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-ef_pow.o/ 1612277259  0     0     100666  20827     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_powf
.visible .func (.param .f32 %value_out) __ieee754_powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_pow.c"
.file 2 "../../../../../newlib/libm/math/../common/math_config.h"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflowf
.extern .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflowf
.extern .func (.param .f32 %value_out) __math_uflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbnf
.extern .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_powf
.visible .func (.param .f32 %value_out) __ieee754_powf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r26;
.reg .u32 %r28;
.reg .f32 %r34;
.reg .u32 %r37;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .u32 %r45;
.reg .f32 %r46;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r66;
.reg .u32 %r67;
.reg .f32 %r69;
.reg .u32 %r71;
.reg .f32 %r72;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .u32 %r77;
.reg .f32 %r80;
.reg .u32 %r106;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .f32 %r114;
.reg .f32 %r115;
.reg .f32 %r116;
.reg .f32 %r119;
.reg .f32 %r120;
.reg .f32 %r121;
.reg .f32 %r123;
.reg .f32 %r124;
.reg .f32 %r125;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .u32 %r128;
.reg .u32 %r129;
.reg .u32 %r130;
.reg .u32 %r131;
.reg .u32 %r132;
.reg .u32 %r133;
.reg .u32 %r136;
.reg .u32 %r139;
.reg .u32 %r144;
.reg .u32 %r145;
.reg .f32 %r146;
.reg .f32 %r147;
.reg .f32 %r148;
.reg .f32 %r149;
.reg .f32 %r151;
.reg .f32 %r152;
.reg .f32 %r153;
.reg .f32 %r154;
.reg .f32 %r155;
.reg .f32 %r156;
.reg .f32 %r158;
.reg .f32 %r160;
.reg .f32 %r161;
.reg .f32 %r162;
.reg .f32 %r164;
.reg .f32 %r165;
.reg .f32 %r167;
.reg .f32 %r169;
.reg .f32 %r170;
.reg .f32 %r171;
.reg .f32 %r172;
.reg .f32 %r173;
.reg .u32 %r175;
.reg .u32 %r176;
.reg .u32 %r177;
.reg .f32 %r178;
.reg .f32 %r179;
.reg .f32 %r180;
.reg .f32 %r181;
.reg .f32 %r182;
.reg .f32 %r183;
.reg .f32 %r184;
.reg .f32 %r186;
.reg .u32 %r187;
.reg .u32 %r188;
.reg .u32 %r193;
.reg .u32 %r196;
.reg .f32 %r213;
.reg .u32 %r214;
.reg .f32 %r215;
.reg .f32 %r216;
.reg .u32 %r217;
.reg .f32 %r219;
.reg .f32 %r220;
.reg .f32 %r221;
.reg .pred %r222;
.reg .u32 %r223;
.reg .u32 %r224;
.reg .pred %r225;
.reg .u32 %r227;
.reg .u32 %r228;
.reg .u32 %r230;
.reg .u32 %r231;
.reg .u16 %r232;
.reg .u16 %r233;
.reg .u16 %r234;
.reg .u32 %r235;
.reg .u16 %r236;
.reg .pred %r237;
.reg .pred %r238;
.reg .u32 %r239;
.reg .u32 %r240;
.reg .pred %r241;
.reg .pred %r243;
.reg .pred %r244;
.reg .u32 %r245;
.reg .u32 %r247;
.reg .u32 %r248;
.reg .pred %r249;
.reg .u32 %r250;
.reg .u32 %r251;
.reg .pred %r252;
.reg .pred %r253;
.reg .pred %r254;
.reg .pred %r255;
.reg .pred %r256;
.reg .pred %r257;
.reg .pred %r258;
.reg .f32 %r259;
.reg .pred %r260;
.reg .u32 %r262;
.reg .u32 %r263;
.reg .u32 %r265;
.reg .u32 %r266;
.reg .u16 %r268;
.reg .u16 %r269;
.reg .u16 %r270;
.reg .u32 %r271;
.reg .u16 %r272;
.reg .pred %r273;
.reg .f32 %r275;
.reg .f32 %r277;
.reg .u32 %r278;
.reg .u32 %r280;
.reg .u32 %r281;
.reg .u32 %r283;
.reg .u32 %r284;
.reg .u16 %r285;
.reg .u16 %r286;
.reg .u16 %r287;
.reg .u32 %r288;
.reg .u16 %r289;
.reg .pred %r290;
.reg .pred %r291;
.reg .f32 %r292;
.reg .u32 %r294;
.reg .u32 %r295;
.reg .pred %r296;
.reg .pred %r297;
.reg .u32 %r299;
.reg .pred %r300;
.reg .pred %r301;
.reg .pred %r302;
.reg .pred %r303;
.reg .u32 %r304;
.reg .f32 %r305;
.reg .u32 %r306;
.reg .f32 %r307;
.reg .pred %r308;
.reg .pred %r309;
.reg .f32 %r310;
.reg .f32 %r312;
.reg .f32 %r313;
.reg .f32 %r315;
.reg .u32 %r316;
.reg .u32 %r318;
.reg .pred %r319;
.reg .f32 %r320;
.reg .u32 %r321;
.reg .u32 %r322;
.reg .pred %r323;
.reg .pred %r324;
.reg .f32 %r325;
.reg .f32 %r326;
.reg .u32 %r327;
.reg .u32 %r328;
.reg .u32 %r329;
.reg .u32 %r330;
.reg .u32 %r331;
.reg .u32 %r332;
.reg .f32 %r333;
.reg .f32 %r334;
.reg .f32 %r336;
.reg .f32 %r337;
.reg .f32 %r338;
.reg .u32 %r339;
.reg .f32 %r341;
.reg .f32 %r342;
.reg .f32 %r343;
.reg .f32 %r344;
.reg .u32 %r345;
.reg .f32 %r347;
.reg .f32 %r348;
.reg .f32 %r349;
.reg .f32 %r350;
.reg .u32 %r351;
.reg .f32 %r353;
.reg .f32 %r354;
.reg .u32 %r355;
.reg .u32 %r356;
.reg .pred %r357;
.reg .u32 %r358;
.reg .f32 %r359;
.reg .f32 %r360;
.reg .pred %r361;
.reg .pred %r362;
.reg .u32 %r365;
.reg .u32 %r366;
.reg .f32 %r367;
.reg .pred %r368;
.reg .f32 %r369;
.reg .f32 %r370;
.reg .pred %r371;
.reg .u32 %r374;
.reg .u32 %r375;
.reg .f32 %r376;
.reg .pred %r377;
.reg .u32 %r380;
.reg .u32 %r381;
.reg .f32 %r382;
.reg .pred %r383;
.reg .f32 %r384;
.reg .pred %r385;
.reg .u32 %r388;
.reg .u32 %r389;
.reg .f32 %r390;
.reg .pred %r391;
.reg .u32 %r392;
.reg .u32 %r393;
.reg .u32 %r394;
.reg .u32 %r395;
.reg .u32 %r396;
.reg .u32 %r397;
.reg .u32 %r398;
.reg .u32 %r399;
.reg .u32 %r400;
.reg .u32 %r401;
.reg .u32 %r402;
.reg .u32 %r403;
.reg .pred %r404;
.reg .f32 %r405;
.reg .u32 %r406;
.reg .f32 %r407;
.reg .f32 %r408;
.reg .f32 %r409;
.reg .f32 %r411;
.reg .f32 %r412;
.reg .f32 %r413;
.reg .f32 %r414;
.reg .f32 %r415;
.reg .f32 %r416;
.reg .pred %r418;
.reg .f32 %r421;
.reg .pred %r423;
mov.f32 %r220,%ar0;
mov.f32 %r221,%ar1;
.loc 1 71 2
mov.b32 %r193,%r220;
.loc 1 72 2
mov.b32 %r26,%r221;
.loc 1 73 26
and.b32 %r136,%r26,2147483647;
.loc 1 76 4
setp.ne.u32 %r222,%r136,0;
@ %r222 bra $L2;
.loc 2 175 18
xor.b32 %r223,%r193,4194304;
.loc 2 175 12
add.u32 %r224,%r223,%r223;
.loc 1 77 9
setp.le.u32 %r225,%r224,-8388608;
@ %r225 bra $L38;
$L5:
.loc 1 77 43
add.f32 %r219,%r220,%r221;
bra $L1;
$L2:
.loc 1 73 5
and.b32 %r132,%r193,2147483647;
.loc 1 82 5
set.u32.gt.s32 %r227,%r132,2139095040;
neg.s32 %r228,%r227;
.loc 1 83 5
set.u32.gt.s32 %r230,%r136,2139095040;
neg.s32 %r231,%r230;
.loc 1 82 26
cvt.u16.u32 %r233,%r228;
cvt.u16.u32 %r234,%r231;
or.b16 %r232,%r233,%r234;
.loc 1 82 4
cvt.u32.u16 %r235,%r232;
cvt.u16.u8 %r236,%r235;
setp.eq.u16 %r237,%r236,0;
@ %r237 bra $L4;
.loc 1 84 8
setp.ne.u32 %r238,%r193,1065353216;
@ %r238 bra $L5;
.loc 2 175 18
xor.b32 %r239,%r26,4194304;
.loc 2 175 12
add.u32 %r240,%r239,%r239;
.loc 1 84 24
setp.le.u32 %r241,%r240,-8388608;
@ %r241 bra $L39;
bra $L5;
$L4:
.loc 1 94 4
setp.ge.s32 %r423,%r193,0;
@ %r423 bra $L40;
.loc 1 95 8
setp.gt.s32 %r243,%r136,1266679807;
@ %r243 bra $L41;
.loc 1 96 13
setp.le.s32 %r244,%r136,1065353215;
@ %r244 bra $L42;
.loc 1 97 10
shr.s32 %r245,%r136,23;
.loc 1 98 14
mov.u32 %r247,150;
sub.u32 %r28,%r247,%r245;
.loc 1 98 5
shr.s32 %r139,%r136,%r28;
.loc 1 99 8
shl.b32 %r248,%r139,%r28;
.loc 1 99 5
setp.ne.u32 %r249,%r248,%r136;
@ %r249 bra $L43;
.loc 1 99 36
and.b32 %r250,%r139,1;
.loc 1 99 30
mov.u32 %r251,2;
sub.u32 %r128,%r251,%r250;
bra $L8;
$L40:
.loc 1 93 10
mov.u32 %r128,0;
bra $L6;
$L41:
.loc 1 95 32
mov.u32 %r128,2;
$L6:
.loc 1 104 5
setp.ne.u32 %r252,%r136,2139095040;
@ %r252 bra $L8;
.loc 1 105 9
setp.eq.u32 %r253,%r132,1065353216;
@ %r253 bra $L44;
.loc 1 107 14
setp.le.s32 %r254,%r132,1065353216;
@ %r254 bra $L9;
.loc 1 108 27
setp.lt.s32 %r255,%r26,0;
selp.f32 %r219,0f00000000,%r221,%r255;
bra $L1;
$L9:
.loc 1 110 26
setp.ge.s32 %r256,%r26,0;
@ %r256 bra $L46;
neg.f32 %r219,%r221;
bra $L1;
$L8:
.loc 1 112 4
setp.ne.u32 %r257,%r136,1065353216;
@ %r257 bra $L10;
.loc 1 113 8
setp.ge.s32 %r258,%r26,0;
@ %r258 bra $L47;
.loc 1 113 25
mov.f32 %r259,0f3f800000;
div.rn.f32 %r219,%r259,%r220;
bra $L1;
$L10:
.loc 1 115 4
setp.ne.u32 %r260,%r26,1073741824;
@ %r260 bra $L11;
.loc 1 115 29
mul.f32 %r219,%r220,%r220;
bra $L1;
$L11:
.loc 1 116 4
set.u32.eq.u32 %r262,%r26,1056964608;
neg.s32 %r263,%r262;
.loc 1 117 8
not.b32 %r265,%r193;
shr.u32 %r266,%r265,31;
cvt.u16.u32 %r269,%r263;
cvt.u16.u32 %r270,%r266;
and.b16 %r268,%r269,%r270;
cvt.u32.u16 %r271,%r268;
cvt.u16.u8 %r272,%r271;
setp.eq.u16 %r273,%r272,0;
@ %r273 bra $L12;
.loc 1 118 13
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r220;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r275,[%value_in];
}
mov.f32 %r219,%r275;
bra $L1;
$L12:
.loc 1 121 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r220;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r277,[%value_in];
}
mov.f32 %r219,%r277;
.loc 1 123 53
and.b32 %r278,%r193,1073741823;
set.u32.eq.u32 %r280,%r278,1065353216;
neg.s32 %r281,%r280;
.loc 1 123 32
set.u32.eq.u32 %r283,%r132,0;
neg.s32 %r284,%r283;
.loc 1 123 53
cvt.u16.u32 %r286,%r281;
cvt.u16.u32 %r287,%r284;
or.b16 %r285,%r286,%r287;
cvt.u32.u16 %r288,%r285;
cvt.u16.u8 %r289,%r288;
setp.eq.u16 %r290,%r289,0;
@ %r290 bra $L13;
.loc 1 125 8
setp.ge.s32 %r291,%r26,0;
@ %r291 bra $L14;
.loc 1 125 17
mov.f32 %r292,0f3f800000;
div.rn.f32 %r219,%r292,%r219;
$L14:
.loc 1 126 8
@ %r423 bra $L1;
.loc 1 127 10
add.u32 %r294,%r132,-1065353216;
.loc 1 127 22
or.b32 %r295,%r294,%r128;
.loc 1 127 5
setp.ne.u32 %r296,%r295,0;
@ %r296 bra $L15;
.loc 1 128 13
sub.f32 %r34,%r219,%r219;
.loc 1 128 9
div.rn.f32 %r219,%r34,%r34;
bra $L1;
$L15:
.loc 1 129 12
setp.ne.u32 %r297,%r128,1;
@ %r297 bra $L1;
.loc 1 130 9
neg.f32 %r219,%r219;
bra $L1;
$L13:
.loc 1 136 27
set.u32.ge.s32 %r37,%r193,0;
.loc 1 136 30
or.b32 %r299,%r128,%r37;
.loc 1 136 4
setp.ne.u32 %r300,%r299,0;
@ %r300 bra $L16;
.loc 1 136 52
sub.f32 %r40,%r220,%r220;
.loc 1 136 55
div.rn.f32 %r219,%r40,%r40;
bra $L1;
$L16:
.loc 1 139 4
setp.le.s32 %r301,%r136,1291845632;
@ %r301 bra $L17;
.loc 1 141 8
setp.gt.s32 %r302,%r132,1065353203;
@ %r302 bra $L18;
.loc 1 141 55
setp.ge.s32 %r303,%r26,0;
@ %r303 bra $L19;
$L21:
.loc 1 141 39
mov.u32 %r304,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r304;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r305,[%value_in];
}
mov.f32 %r219,%r305;
bra $L1;
$L19:
.loc 1 141 56
mov.u32 %r306,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r306;
call (%value_in),__math_uflowf,(%out_arg1);
ld.param.f32 %r307,[%value_in];
}
mov.f32 %r219,%r307;
bra $L1;
$L18:
.loc 1 142 8
setp.le.s32 %r308,%r132,1065353223;
@ %r308 bra $L20;
.loc 1 142 55
setp.gt.s32 %r309,%r26,0;
@ %r309 bra $L21;
bra $L19;
$L20:
.loc 1 145 8
mov.f32 %r310,0f3f800000;
sub.f32 %r167,%r277,%r310;
.loc 1 146 12
mul.f32 %r41,%r167,%r167;
.loc 1 146 52
fma.rn.f32 %r42,%r167,0fbe800000,0f3eaaaaab;
.loc 1 146 27
neg.f32 %r312,%r42;
fma.rn.f32 %r43,%r312,%r167,0f3f000000;
.loc 1 146 8
mul.f32 %r313,%r41,%r43;
.loc 1 148 8
mul.f32 %r315,%r313,0fbfb8aa3b;
fma.rn.f32 %r169,%r167,0f36eca570,%r315;
.loc 1 149 9
fma.rn.f32 %r170,%r167,0f3fb8aa00,%r169;
.loc 1 151 6
mov.b32 %r316,%r170;
and.b32 %r45,%r316,-4096;
mov.b32 %r125,%r45;
.loc 1 152 16
fma.rn.f32 %r46,%r167,0fbfb8aa00,%r125;
.loc 1 152 9
sub.f32 %r126,%r169,%r46;
bra $L22;
$L17:
.loc 1 157 8
and.b32 %r318,%r193,2139095040;
setp.ne.u32 %r319,%r318,0;
@ %r319 bra $L48;
.loc 1 158 7
mul.f32 %r320,%r277,0f4b800000;
.loc 1 158 26
mov.b32 %r132,%r320;
.loc 1 158 19
mov.u32 %r129,-24;
bra $L23;
$L48:
.loc 1 155 8
mov.u32 %r129,0;
$L23:
.loc 1 159 17
shr.s32 %r321,%r132,23;
.loc 1 159 22
add.u32 %r322,%r321,-127;
.loc 1 159 9
add.u32 %r130,%r322,%r129;
.loc 1 160 9
and.b32 %r144,%r132,8388607;
.loc 1 162 9
or.b32 %r133,%r144,1065353216;
.loc 1 163 8
setp.le.s32 %r323,%r144,1885297;
@ %r323 bra $L49;
.loc 1 164 13
setp.le.s32 %r324,%r144,6140886;
@ %r324 bra $L50;
.loc 1 165 17
add.u32 %r130,%r130,1;
.loc 1 165 24
add.u32 %r133,%r133,-8388608;
mov.f32 %r216,0f00000000;
mov.f32 %r215,%r216;
mov.u32 %r214,0;
mov.f32 %r213,0f3f800000;
bra $L24;
$L49:
mov.f32 %r216,0f00000000;
mov.f32 %r215,%r216;
mov.u32 %r214,0;
mov.f32 %r213,0f3f800000;
bra $L24;
$L50:
mov.f32 %r216,0f3f15c000;
mov.f32 %r215,0f35d1cfdc;
mov.u32 %r214,2097152;
mov.f32 %r213,0f3fc00000;
$L24:
.loc 1 166 6
mov.b32 %r146,%r133;
.loc 1 169 8
sub.f32 %r147,%r146,%r213;
.loc 1 170 17
add.f32 %r325,%r146,%r213;
.loc 1 170 8
mov.f32 %r326,0f3f800000;
div.rn.f32 %r148,%r326,%r325;
.loc 1 171 8
mul.f32 %r149,%r147,%r148;
.loc 1 174 6
mov.b32 %r328,%r149;
and.b32 %r327,%r328,-4096;
mov.b32 %r151,%r327;
.loc 1 176 6
shr.s32 %r329,%r133,1;
or.b32 %r330,%r329,536870912;
add.u32 %r331,%r330,262144;
add.u32 %r332,%r331,%r214;
mov.b32 %r152,%r332;
.loc 1 177 21
sub.f32 %r333,%r152,%r213;
.loc 1 177 10
sub.f32 %r153,%r146,%r333;
.loc 1 178 17
neg.f32 %r334,%r151;
fma.rn.f32 %r56,%r334,%r152,%r147;
.loc 1 178 26
fma.rn.f32 %r57,%r334,%r153,%r56;
.loc 1 178 10
mul.f32 %r154,%r57,%r148;
.loc 1 180 9
mul.f32 %r155,%r149,%r149;
.loc 1 181 12
mul.f32 %r58,%r155,%r155;
.loc 1 181 47
fma.rn.f32 %r59,%r155,0f3e53f142,0f3e6c3255;
.loc 1 181 40
fma.rn.f32 %r60,%r59,%r155,0f3e8ba305;
.loc 1 181 33
fma.rn.f32 %r61,%r60,%r155,0f3eaaaaab;
.loc 1 181 26
fma.rn.f32 %r62,%r61,%r155,0f3edb6db7;
.loc 1 181 19
fma.rn.f32 %r63,%r62,%r155,0f3f19999a;
.loc 1 182 19
add.f32 %r336,%r149,%r151;
.loc 1 182 14
mul.f32 %r337,%r336,%r154;
.loc 1 182 8
fma.rn.f32 %r156,%r58,%r63,%r337;
.loc 1 184 22
fma.rn.f32 %r66,%r151,%r151,0f40400000;
.loc 1 184 10
add.f32 %r338,%r66,%r156;
.loc 1 186 6
mov.b32 %r339,%r338;
and.b32 %r67,%r339,-4096;
mov.b32 %r158,%r67;
.loc 1 187 19
mov.f32 %r342,0f40400000;
sub.f32 %r341,%r158,%r342;
.loc 1 187 31
fma.rn.f32 %r69,%r334,%r151,%r341;
.loc 1 187 10
sub.f32 %r343,%r156,%r69;
.loc 1 190 21
mul.f32 %r344,%r343,%r149;
.loc 1 190 8
fma.rn.f32 %r160,%r154,%r158,%r344;
.loc 1 192 10
fma.rn.f32 %r161,%r151,%r158,%r160;
.loc 1 194 6
mov.b32 %r345,%r161;
and.b32 %r71,%r345,-4096;
mov.b32 %r162,%r71;
.loc 1 195 18
fma.rn.f32 %r72,%r334,%r158,%r162;
.loc 1 195 10
sub.f32 %r347,%r160,%r72;
.loc 1 197 24
mul.f32 %r348,%r347,0f3f76384f;
.loc 1 197 20
fma.rn.f32 %r74,%r162,0f369dc3a0,%r348;
.loc 1 197 10
add.f32 %r164,%r74,%r215;
.loc 1 199 8
cvt.rn.f32.s32 %r165,%r130;
.loc 1 200 17
fma.rn.f32 %r75,%r162,0f3f763800,%r164;
.loc 1 200 22
add.f32 %r349,%r75,%r216;
.loc 1 200 9
add.f32 %r350,%r349,%r165;
.loc 1 202 6
mov.b32 %r351,%r350;
and.b32 %r77,%r351,-4096;
mov.b32 %r125,%r77;
.loc 1 203 20
sub.f32 %r353,%r125,%r165;
.loc 1 203 23
sub.f32 %r354,%r353,%r216;
.loc 1 203 32
fma.rn.f32 %r80,%r162,0fbf763800,%r354;
.loc 1 203 9
sub.f32 %r126,%r164,%r80;
$L22:
.loc 1 207 38
add.u32 %r355,%r128,-1;
.loc 1 207 30
or.b32 %r356,%r355,%r37;
.loc 1 207 4
setp.ne.u32 %r357,%r356,0;
.loc 1 208 8
selp.f32 %r127,0f3f800000,0fbf800000,%r357;
.loc 1 212 2
and.b32 %r358,%r26,-4096;
mov.b32 %r171,%r358;
.loc 1 213 10
sub.f32 %r359,%r221,%r171;
.loc 1 213 19
mul.f32 %r360,%r126,%r221;
.loc 1 213 6
fma.rn.f32 %r172,%r359,%r125,%r360;
.loc 1 214 6
mul.f32 %r124,%r125,%r171;
.loc 1 215 4
add.f32 %r173,%r172,%r124;
.loc 1 216 2
mov.b32 %r145,%r173;
.loc 1 217 4
and.b32 %r175,%r145,2147483647;
.loc 1 218 5
setp.le.s32 %r361,%r145,0;
@ %r361 bra $L26;
.loc 1 219 9
setp.le.s32 %r362,%r175,1124073472;
@ %r362 bra $L27;
.loc 1 220 17
set.u32.lt.f32 %r365,%r127,0f00000000;
neg.s32 %r366,%r365;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r366;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r367,[%value_in];
}
mov.f32 %r219,%r367;
bra $L1;
$L27:
.loc 1 221 14
setp.ne.u32 %r368,%r175,1124073472;
@ %r368 bra $L28;
.loc 1 222 16
add.f32 %r369,%r172,0f3338aa3c;
.loc 1 222 22
sub.f32 %r370,%r173,%r124;
.loc 1 222 12
setp.gt.f32 %r371,%r369,%r370;
@ ! %r371 bra $L29;
.loc 1 222 35
set.u32.lt.f32 %r374,%r127,0f00000000;
neg.s32 %r375,%r374;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r375;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r376,[%value_in];
}
mov.f32 %r219,%r376;
bra $L1;
$L26:
.loc 1 224 9
setp.le.s32 %r377,%r175,1125515264;
@ %r377 bra $L31;
.loc 1 225 17
set.u32.lt.f32 %r380,%r127,0f00000000;
neg.s32 %r381,%r380;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r381;
call (%value_in),__math_uflowf,(%out_arg1);
ld.param.f32 %r382,[%value_in];
}
mov.f32 %r219,%r382;
bra $L1;
$L31:
.loc 1 226 14
setp.ne.u32 %r383,%r175,1125515264;
@ %r383 bra $L28;
.loc 1 227 12
sub.f32 %r384,%r173,%r124;
.loc 1 227 5
setp.ge.f32 %r385,%r384,%r172;
@ ! %r385 bra $L29;
.loc 1 227 25
set.u32.lt.f32 %r388,%r127,0f00000000;
neg.s32 %r389,%r388;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r389;
call (%value_in),__math_uflowf,(%out_arg1);
ld.param.f32 %r390,[%value_in];
}
mov.f32 %r219,%r390;
bra $L1;
$L28:
.loc 1 234 4
setp.le.s32 %r391,%r175,1056964608;
@ %r391 bra $L52;
.loc 1 232 8
shr.s32 %r196,%r175,23;
$L37:
.loc 1 235 27
add.u32 %r392,%r196,-126;
.loc 1 235 23
mov.u32 %r394,8388608;
shr.s32 %r393,%r394,%r392;
.loc 1 235 8
add.u32 %r176,%r393,%r145;
.loc 1 236 25
shr.s32 %r395,%r176,23;
and.b32 %r396,%r395,255;
.loc 1 236 8
add.u32 %r177,%r396,-127;
.loc 1 237 6
mov.u32 %r398,8388607;
shr.s32 %r397,%r398,%r177;
not.b32 %r399,%r397;
and.b32 %r400,%r399,%r176;
mov.b32 %r178,%r400;
.loc 1 238 13
and.b32 %r401,%r176,8388607;
.loc 1 238 25
or.b32 %r106,%r401,8388608;
.loc 1 238 42
mov.u32 %r403,23;
sub.u32 %r402,%r403,%r177;
.loc 1 238 8
shr.s32 %r131,%r106,%r402;
.loc 1 239 8
setp.ge.s32 %r404,%r145,0;
@ %r404 bra $L34;
.loc 1 239 16
neg.s32 %r131,%r131;
$L34:
.loc 1 240 10
sub.f32 %r124,%r124,%r178;
.loc 1 254 9
shl.b32 %r217,%r131,23;
.loc 1 242 4
add.f32 %r405,%r172,%r124;
.loc 1 243 2
mov.b32 %r145,%r405;
bra $L33;
$L52:
mov.u32 %r217,0;
.loc 1 233 4
mov.u32 %r131,%r217;
$L33:
.loc 1 244 2
and.b32 %r406,%r145,-4096;
mov.b32 %r179,%r406;
.loc 1 246 13
sub.f32 %r407,%r179,%r124;
.loc 1 246 10
sub.f32 %r408,%r172,%r407;
.loc 1 246 25
mul.f32 %r409,%r179,0f35bfbe8c;
.loc 1 246 4
fma.rn.f32 %r180,%r408,0f3f317218,%r409;
.loc 1 247 4
fma.rn.f32 %r181,%r179,0f3f317200,%r180;
.loc 1 248 10
fma.rn.f32 %r112,%r179,0fbf317200,%r181;
.loc 1 248 4
sub.f32 %r182,%r180,%r112;
.loc 1 249 5
mul.f32 %r183,%r181,%r181;
.loc 1 250 35
fma.rn.f32 %r113,%r183,0f3331bb4c,0fb5ddea0e;
.loc 1 250 29
fma.rn.f32 %r114,%r113,%r183,0f388ab355;
.loc 1 250 23
fma.rn.f32 %r115,%r114,%r183,0fbb360b61;
.loc 1 250 17
fma.rn.f32 %r116,%r115,%r183,0f3e2aaaab;
.loc 1 250 6
neg.f32 %r411,%r116;
fma.rn.f32 %r184,%r411,%r183,%r181;
.loc 1 251 9
mul.f32 %r412,%r181,%r184;
.loc 1 251 17
mov.f32 %r414,0f40000000;
sub.f32 %r413,%r184,%r414;
.loc 1 251 13
div.rn.f32 %r119,%r412,%r413;
.loc 1 251 25
fma.rn.f32 %r120,%r181,%r182,%r182;
.loc 1 251 5
sub.f32 %r415,%r119,%r120;
.loc 1 252 13
sub.f32 %r121,%r415,%r181;
.loc 1 252 5
mov.f32 %r416,0f3f800000;
sub.f32 %r186,%r416,%r121;
.loc 1 253 2
mov.b32 %r187,%r186;
.loc 1 254 4
add.u32 %r188,%r187,%r217;
.loc 1 255 4
setp.gt.s32 %r418,%r188,8388607;
@ %r418 bra $L35;
.loc 1 255 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r186;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r131;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r421,[%value_in];
}
mov.f32 %r123,%r421;
bra $L36;
$L35:
.loc 1 256 7
mov.b32 %r123,%r188;
$L36:
.loc 1 257 10
mul.f32 %r219,%r123,%r127;
bra $L1;
$L38:
.loc 1 78 13
mov.f32 %r219,0f3f800000;
bra $L1;
$L39:
mov.f32 %r219,0f3f800000;
bra $L1;
$L44:
mov.f32 %r219,0f3f800000;
bra $L1;
$L46:
.loc 1 108 27
mov.f32 %r219,0f00000000;
bra $L1;
$L47:
.loc 1 113 41
mov.f32 %r219,%r220;
bra $L1;
$L29:
.loc 1 232 8
shr.s32 %r196,%r175,23;
bra $L37;
$L42:
.loc 1 93 10
mov.u32 %r128,0;
bra $L8;
$L43:
mov.u32 %r128,0;
bra $L8;
$L1:
.loc 1 258 1
mov.f32 %value,%r219;
st.param.f32 [%value_out],%value;
ret;
}

/233            1612277259  0     0     100666  10525     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2f
.visible .func (.param .u32 %value_out) __ieee754_rem_pio2f (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_rem_pio2.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_rem_pio2f
.extern .func (.param .u32 %value_out) __kernel_rem_pio2f (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5);
// BEGIN VAR DEF: npio2_hw
.const .align 4 .u32 npio2_hw[32] =
{1070141184,1078529792,1083624192,1086918400,1090212608,1092012800,1093659904,1095307008,1096954112,1098601216,1099577856,1100401408,1101224960,1102048512,1102872064,1103695616,1104519168,1105342720,1106166272,1106989824,1107554816,1107966464,1108378368,1108790016,1109201920,1109613568,1110025472,1110437120,1110849024,1111260672,1111672576,1112084224 };
// BEGIN VAR DEF: two_over_pi
.const .align 4 .u32 two_over_pi[198] =
{162,249,131,110,78,68,21,41,252,39,87,209,245,52,221,192,219,98,149,153,60,67,144,65,254,81,99,171,222,187,197,97,183,36,110,58,66,77,210,224,6,73,46,234,9,209,146,28,254,29,235,28,177,41,167,62,232,130,53,245,46,187,68,132,233,156,112,38,180,95,126,65,57,145,214,57,131,83,57,244,156,132,95,139,189,249,40,59,31,248,151,255,222,5,152,15,239,47,17,139,90,10,109,31,109,54,126,207,39,203,9,183,79,70,63,102,158,95,234,45,117,39,186,199,235,229,241,123,61,7,57,247,138,82,146,234,107,251,95,177,31,141,93,8,86,3,48,70,252,123,107,171,240,207,188,32,154,244,54,29,169,227,145,97,94,230,27,8,101,153,133,95,20,160,104,64,141,255,216,128,77,115,39,49,6,6,21,86,202,115,168,201,96,226,123,192,140,107 };
// BEGIN GLOBAL FUNCTION DEF: __ieee754_rem_pio2f
.visible .func (.param .u32 %value_out) __ieee754_rem_pio2f (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .f32 %r24;
.reg .f32 %r28;
.reg .f32 %r32;
.reg .f32 %r35;
.reg .f32 %r38;
.reg .u32 %r45;
.reg .f32 %r50;
.reg .f32 %r55;
.reg .f32 %r58;
.reg .f32 %r61;
.reg .u32 %r66;
.reg .f32 %r67;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .u32 %r78;
.reg .f32 %r79;
.reg .f32 %r81;
.reg .f32 %r84;
.reg .f32 %r86;
.reg .f32 %r87;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .f32 %r91;
.reg .f32 %r92;
.reg .f32 %r93;
.reg .f32 %r97;
.reg .f32 %r98;
.reg .f32 %r99;
.reg .u32 %r101;
.reg .f32 %r102;
.reg .u64 %r103;
.reg .pred %r104;
.reg .f32 %r105;
.reg .pred %r106;
.reg .pred %r107;
.reg .f32 %r108;
.reg .pred %r109;
.reg .f32 %r110;
.reg .f32 %r111;
.reg .f32 %r112;
.reg .f32 %r114;
.reg .f32 %r115;
.reg .f32 %r116;
.reg .f32 %r117;
.reg .pred %r119;
.reg .f32 %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .pred %r124;
.reg .f32 %r126;
.reg .pred %r128;
.reg .u32 %r129;
.reg .u64 %r130;
.reg .u32 %r131;
.reg .u64 %r132;
.reg .u64 %r133;
.reg .u64 %r134;
.reg .u32 %r135;
.reg .pred %r136;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u32 %r139;
.reg .u32 %r140;
.reg .pred %r141;
.reg .f32 %r144;
.reg .f32 %r145;
.reg .u32 %r146;
.reg .u32 %r147;
.reg .u32 %r148;
.reg .u32 %r149;
.reg .pred %r150;
.reg .f32 %r153;
.reg .f32 %r154;
.reg .f32 %r155;
.reg .pred %r156;
.reg .f32 %r157;
.reg .f32 %r158;
.reg .pred %r159;
.reg .u32 %r160;
.reg .u32 %r161;
.reg .u32 %r162;
.reg .u32 %r163;
.reg .u32 %r164;
.reg .pred %r165;
.reg .pred %r166;
.reg .u32 %r171;
.reg .u64 %r172;
.reg .u32 %r173;
.reg .pred %r174;
.reg .f32 %r175;
.reg .f32 %r176;
.reg .f32 %r177;
.reg .f32 %r178;
.reg .f32 %r180;
mov.f32 %r102,%ar0;
mov.u64 %r103,%ar1;
.loc 1 110 2
mov.b32 %r76,%r102;
.loc 1 111 5
and.b32 %r77,%r76,2147483647;
.loc 1 112 4
setp.gt.s32 %r104,%r77,1061752792;
@ %r104 bra $L2;
.loc 1 113 12
st.f32 [%r103],%r102;
.loc 1 113 22
mov.f32 %r105,0f00000000;
st.f32 [%r103+4],%r105;
.loc 1 113 34
mov.u32 %r101,0;
bra $L1;
$L2:
.loc 1 114 4
setp.gt.s32 %r106,%r77,1075235811;
@ %r106 bra $L4;
.loc 1 117 9
and.b32 %r66,%r76,2147483632;
.loc 1 115 8
setp.le.s32 %r107,%r76,0;
@ %r107 bra $L5;
.loc 1 116 5
mov.f32 %r108,0f3fc90f80;
sub.f32 %r88,%r102,%r108;
.loc 1 117 5
setp.eq.u32 %r109,%r66,1070141392;
@ %r109 bra $L6;
.loc 1 118 16
mov.f32 %r110,0f37354443;
sub.f32 %r24,%r88,%r110;
.loc 1 118 12
st.f32 [%r103],%r24;
.loc 1 119 16
sub.f32 %r111,%r88,%r24;
.loc 1 119 22
sub.f32 %r112,%r111,%r110;
.loc 1 119 12
st.f32 [%r103+4],%r112;
.loc 1 125 10
mov.u32 %r101,1;
bra $L1;
$L6:
.loc 1 121 9
mov.f32 %r114,0f37354400;
sub.f32 %r89,%r88,%r114;
.loc 1 122 16
mov.f32 %r115,0f2e85a308;
sub.f32 %r28,%r89,%r115;
.loc 1 122 12
st.f32 [%r103],%r28;
.loc 1 123 16
sub.f32 %r116,%r89,%r28;
.loc 1 123 22
sub.f32 %r117,%r116,%r115;
.loc 1 123 12
st.f32 [%r103+4],%r117;
.loc 1 125 10
mov.u32 %r101,1;
bra $L1;
$L5:
.loc 1 127 5
add.f32 %r86,%r102,0f3fc90f80;
.loc 1 128 5
setp.eq.u32 %r119,%r66,1070141392;
@ %r119 bra $L7;
.loc 1 129 16
add.f32 %r32,%r86,0f37354443;
.loc 1 129 12
st.f32 [%r103],%r32;
.loc 1 130 16
sub.f32 %r120,%r86,%r32;
.loc 1 130 22
add.f32 %r121,%r120,0f37354443;
.loc 1 130 12
st.f32 [%r103+4],%r121;
.loc 1 136 10
mov.u32 %r101,-1;
bra $L1;
$L7:
.loc 1 132 9
add.f32 %r87,%r86,0f37354400;
.loc 1 133 16
add.f32 %r35,%r87,0f2e85a308;
.loc 1 133 12
st.f32 [%r103],%r35;
.loc 1 134 16
sub.f32 %r122,%r87,%r35;
.loc 1 134 22
add.f32 %r123,%r122,0f2e85a308;
.loc 1 134 12
st.f32 [%r103+4],%r123;
.loc 1 136 10
mov.u32 %r101,-1;
bra $L1;
$L4:
.loc 1 139 4
setp.gt.s32 %r124,%r77,1128861568;
@ %r124 bra $L8;
.loc 1 140 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r102;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r126,[%value_in];
}
.loc 1 141 33
fma.rn.f32 %r38,%r126,0f3f22f984,0f3f000000;
.loc 1 141 9
cvt.rzi.s32.f32 %r101,%r38;
.loc 1 142 9
cvt.rn.f32.s32 %r81,%r101;
.loc 1 143 9
neg.f32 %r180,%r81;
fma.rn.f32 %r73,%r81,0fbfc90f80,%r126;
.loc 1 144 9
mul.f32 %r72,%r81,0f37354443;
.loc 1 145 8
setp.gt.s32 %r128,%r101,31;
@ %r128 bra $L9;
.loc 1 146 11
sub.f32 %r67,%r73,%r72;
.loc 1 145 18
and.b32 %r129,%r76,2147483392;
.loc 1 145 40
cvta.const.u64 %r130,npio2_hw;
.loc 1 145 42
add.u32 %r131,%r101,-1;
.loc 1 145 40
cvt.s64.s32 %r132,%r131;
shl.b64 %r133,%r132,2;
add.u64 %r134,%r130,%r133;
.loc 1 145 13
ld.u32 %r135,[%r134];
setp.eq.u32 %r136,%r129,%r135;
@ %r136 bra $L10;
.loc 1 146 8
st.f32 [%r103],%r67;
bra $L11;
$L9:
.loc 1 146 11
sub.f32 %r67,%r73,%r72;
$L10:
.loc 1 149 13
shr.s32 %r45,%r77,23;
.loc 1 152 22
mov.b32 %r138,%r67;
shr.u32 %r137,%r138,23;
.loc 1 152 27
and.b32 %r139,%r137,255;
.loc 1 152 15
sub.u32 %r140,%r45,%r139;
.loc 1 153 12
setp.gt.s32 %r141,%r140,8;
@ %r141 bra $L12;
.loc 1 150 15
st.f32 [%r103],%r67;
bra $L11;
$L12:
.loc 1 156 10
fma.rn.f32 %r84,%r180,0f37354400,%r73;
.loc 1 157 26
sub.f32 %r144,%r73,%r84;
.loc 1 157 29
fma.rn.f32 %r50,%r180,0f37354400,%r144;
.loc 1 157 10
neg.f32 %r145,%r50;
fma.rn.f32 %r72,%r81,0f2e85a308,%r145;
.loc 1 158 15
sub.f32 %r67,%r84,%r72;
.loc 1 160 19
mov.b32 %r147,%r67;
shr.u32 %r146,%r147,23;
.loc 1 160 24
and.b32 %r148,%r146,255;
.loc 1 160 12
sub.u32 %r149,%r45,%r148;
.loc 1 161 9
setp.gt.s32 %r150,%r149,25;
@ %r150 bra $L13;
.loc 1 158 12
st.f32 [%r103],%r67;
.loc 1 156 10
mov.f32 %r73,%r84;
bra $L11;
$L13:
.loc 1 164 11
fma.rn.f32 %r73,%r180,0f2e85a300,%r84;
.loc 1 165 27
sub.f32 %r153,%r84,%r73;
.loc 1 165 30
fma.rn.f32 %r55,%r180,0f2e85a300,%r153;
.loc 1 165 11
neg.f32 %r154,%r55;
fma.rn.f32 %r72,%r81,0f248d3132,%r154;
.loc 1 166 16
sub.f32 %r67,%r73,%r72;
.loc 1 166 13
st.f32 [%r103],%r67;
$L11:
.loc 1 170 15
sub.f32 %r155,%r73,%r67;
.loc 1 170 21
sub.f32 %r58,%r155,%r72;
.loc 1 170 11
st.f32 [%r103+4],%r58;
.loc 1 171 8
setp.ge.s32 %r156,%r76,0;
@ %r156 bra $L1;
.loc 1 171 24
neg.f32 %r157,%r67;
.loc 1 171 22
st.f32 [%r103],%r157;
.loc 1 171 38
neg.f32 %r158,%r58;
.loc 1 171 36
st.f32 [%r103+4],%r158;
.loc 1 171 52
neg.s32 %r101,%r101;
bra $L1;
$L8:
.loc 1 177 4
setp.le.s32 %r159,%r77,2139095039;
@ %r159 bra $L14;
.loc 1 178 17
sub.f32 %r61,%r102,%r102;
.loc 1 178 15
st.f32 [%r103+4],%r61;
.loc 1 178 10
st.f32 [%r103],%r61;
.loc 1 178 28
mov.u32 %r101,0;
bra $L1;
$L14:
.loc 1 181 17
shr.s32 %r160,%r77,23;
.loc 1 181 6
add.u32 %r78,%r160,-134;
.loc 1 182 2
shl.b32 %r161,%r78,23;
sub.u32 %r162,%r77,%r161;
mov.b32 %r79,%r162;
.loc 1 184 19
cvt.rzi.s32.f32 %r163,%r79;
.loc 1 184 11
cvt.rn.f32.s32 %r91,%r163;
.loc 1 184 9
st.f32 [%frame],%r91;
.loc 1 185 13
sub.f32 %r92,%r79,%r91;
.loc 1 185 9
mul.f32 %r93,%r92,0f43800000;
.loc 1 184 19
cvt.rzi.s32.f32 %r164,%r93;
.loc 1 184 11
cvt.rn.f32.s32 %r97,%r164;
.loc 1 184 9
st.f32 [%frame+4],%r97;
.loc 1 185 13
sub.f32 %r98,%r93,%r97;
.loc 1 185 9
mul.f32 %r99,%r98,0f43800000;
.loc 1 187 8
st.f32 [%frame+8],%r99;
.loc 1 189 7
setp.neu.f32 %r165,%r99,0f00000000;
@ %r165 bra $L16;
setp.neu.f32 %r166,%r97,0f00000000;
.loc 1 189 13
selp.u32 %r22,2,1,%r166;
bra $L15;
$L16:
.loc 1 188 5
mov.u32 %r22,3;
$L15:
.loc 1 190 8
cvta.const.u64 %r172,two_over_pi;
mov.u32 %r171,2;
{
.param .u32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%frame;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r103;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r78;
.param .u32 %out_arg4;
st.param.u32 [%out_arg4],%r22;
.param .u32 %out_arg5;
st.param.u32 [%out_arg5],%r171;
.param .u64 %out_arg6;
st.param.u64 [%out_arg6],%r172;
call (%value_in),__kernel_rem_pio2f,(%out_arg1,%out_arg2,%out_arg3,%out_arg4,%out_arg5,%out_arg6);
ld.param.u32 %r173,[%value_in];
}
mov.u32 %r101,%r173;
.loc 1 191 4
setp.ge.s32 %r174,%r76,0;
@ %r174 bra $L1;
.loc 1 191 19
ld.f32 %r176,[%r103];
neg.f32 %r175,%r176;
.loc 1 191 17
st.f32 [%r103],%r175;
.loc 1 191 33
ld.f32 %r178,[%r103+4];
neg.f32 %r177,%r178;
.loc 1 191 31
st.f32 [%r103+4],%r177;
.loc 1 191 47
neg.s32 %r101,%r101;
$L1:
.loc 1 193 1
mov.u32 %value,%r101;
st.param.u32 [%value_out],%value;
ret;
}

/254            1612277259  0     0     100666  3927      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_remainderf
.visible .func (.param .f32 %value_out) __ieee754_remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_remainder.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmodf
.extern .func (.param .f32 %value_out) __ieee754_fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_remainderf
.visible .func (.param .f32 %value_out) __ieee754_remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r25;
.reg .u32 %r29;
.reg .u32 %r30;
.reg .f32 %r31;
.reg .u32 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f32 %r38;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u16 %r53;
.reg .u16 %r54;
.reg .u16 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u16 %r60;
.reg .u16 %r62;
.reg .u32 %r63;
.reg .u16 %r64;
.reg .pred %r65;
.reg .pred %r66;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .pred %r71;
.reg .f32 %r73;
.reg .f32 %r75;
.reg .u32 %r76;
.reg .pred %r77;
.reg .f32 %r78;
.reg .pred %r79;
.reg .f32 %r80;
.reg .pred %r81;
.reg .pred %r82;
.reg .pred %r83;
.reg .u32 %r84;
.reg .u32 %r85;
mov.f32 %r45,%ar0;
mov.f32 %r46,%ar1;
.loc 1 36 2
mov.b32 %r29,%r45;
.loc 1 37 2
mov.b32 %r33,%r46;
.loc 1 39 5
and.b32 %r35,%r33,2147483647;
.loc 1 40 5
and.b32 %r36,%r29,2147483647;
.loc 1 43 5
set.u32.eq.u32 %r48,%r35,0;
neg.s32 %r49,%r48;
.loc 1 44 29
set.u32.gt.s32 %r51,%r35,2139095040;
neg.s32 %r52,%r51;
cvt.u16.u32 %r54,%r49;
cvt.u16.u32 %r55,%r52;
or.b16 %r53,%r54,%r55;
.loc 1 44 5
set.u32.gt.s32 %r57,%r36,2139095039;
neg.s32 %r58,%r57;
.loc 1 44 29
cvt.u16.u32 %r62,%r58;
or.b16 %r60,%r53,%r62;
cvt.u32.u16 %r63,%r60;
cvt.u16.u8 %r64,%r63;
setp.eq.u16 %r65,%r64,0;
@ %r65 bra $L2;
.loc 1 46 15
mul.f32 %r25,%r45,%r46;
.loc 1 46 18
div.rn.f32 %r44,%r25,%r25;
bra $L1;
$L2:
.loc 1 49 5
setp.gt.s32 %r66,%r35,2130706431;
@ %r66 bra $L4;
.loc 1 49 34
add.f32 %r69,%r46,%r46;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r69;
call (%value_in),__ieee754_fmodf,(%out_arg1,%out_arg2);
ld.param.f32 %r70,[%value_in];
}
mov.f32 %r45,%r70;
$L4:
.loc 1 50 5
setp.ne.u32 %r71,%r35,%r36;
@ %r71 bra $L5;
.loc 1 50 29
mul.f32 %r44,%r45,0f00000000;
bra $L1;
$L5:
.loc 1 51 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r73,[%value_in];
}
mov.f32 %r31,%r73;
.loc 1 52 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r46;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r75,[%value_in];
}
.loc 1 53 5
and.b32 %r76,%r33,2130706432;
setp.ne.u32 %r77,%r76,0;
@ %r77 bra $L6;
.loc 1 54 10
add.f32 %r78,%r31,%r31;
.loc 1 54 8
setp.gt.f32 %r79,%r78,%r75;
@ ! %r79 bra $L7;
.loc 1 55 4
sub.f32 %r31,%r31,%r75;
.loc 1 56 7
add.f32 %r80,%r31,%r31;
.loc 1 56 5
setp.ge.f32 %r81,%r80,%r75;
@ ! %r81 bra $L7;
.loc 1 56 16
sub.f32 %r31,%r31,%r75;
bra $L7;
$L6:
.loc 1 59 13
mul.f32 %r38,%r75,0f3f000000;
.loc 1 60 8
setp.gt.f32 %r82,%r31,%r38;
@ ! %r82 bra $L7;
.loc 1 61 4
sub.f32 %r31,%r31,%r75;
.loc 1 62 5
setp.le.f32 %r83,%r38,%r31;
@ ! %r83 bra $L7;
.loc 1 62 19
sub.f32 %r31,%r31,%r75;
$L7:
.loc 1 38 5
and.b32 %r84,%r29,-2147483648;
.loc 1 66 2
mov.b32 %r85,%r31;
xor.b32 %r30,%r84,%r85;
mov.b32 %r44,%r30;
$L1:
.loc 1 68 1
mov.f32 %value,%r44;
st.param.f32 [%value_out],%value;
ret;
}

/276            1612277259  0     0     100666  3182      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalbf
.visible .func (.param .f32 %value_out) __ieee754_scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/ef_scalb.c"
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: rintf
.extern .func (.param .f32 %value_out) rintf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbnf
.extern .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_scalbf
.visible .func (.param .f32 %value_out) __ieee754_scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r25;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .pred %r30;
.reg .u32 %r32;
.reg .pred %r33;
.reg .pred %r34;
.reg .f32 %r35;
.reg .f32 %r37;
.reg .pred %r38;
.reg .pred %r39;
.reg .u32 %r41;
.reg .f32 %r42;
.reg .pred %r43;
.reg .u32 %r45;
.reg .f32 %r46;
.reg .u32 %r49;
.reg .f32 %r50;
mov.f32 %r28,%ar0;
mov.f32 %r29,%ar1;
.loc 1 38 5
setp.num.f32 %r30,%r28,%r29;
@ %r30 bra $L2;
$L5:
.loc 1 38 35
mul.f32 %r27,%r28,%r29;
bra $L1;
$L2:
.loc 1 39 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r32,[%value_in];
}
.loc 1 39 5
setp.ne.u32 %r33,%r32,0;
@ %r33 bra $L4;
.loc 1 40 8
setp.gt.f32 %r34,%r29,0f00000000;
@ %r34 bra $L5;
.loc 1 41 25
neg.f32 %r35,%r28;
div.rn.f32 %r27,%r35,%r29;
bra $L1;
$L4:
.loc 1 43 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
call (%value_in),rintf,(%out_arg1);
ld.param.f32 %r37,[%value_in];
}
.loc 1 43 5
setp.eq.f32 %r38,%r37,%r29;
@ %r38 bra $L6;
.loc 1 43 31
sub.f32 %r25,%r29,%r29;
.loc 1 43 35
div.rn.f32 %r27,%r25,%r25;
bra $L1;
$L6:
.loc 1 45 5
setp.gt.f32 %r39,%r29,0f477de800;
@ ! %r39 bra $L13;
.loc 1 45 35
mov.u32 %r41,65000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r41;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r42,[%value_in];
}
mov.f32 %r27,%r42;
bra $L1;
$L13:
.loc 1 46 5
setp.lt.f32 %r43,%r29,0fc77de800;
@ ! %r43 bra $L14;
.loc 1 46 35
mov.u32 %r45,-65000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r45;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r46,[%value_in];
}
mov.f32 %r27,%r46;
bra $L1;
$L14:
.loc 1 51 9
cvt.rzi.s32.f32 %r49,%r29;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r49;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r50,[%value_in];
}
mov.f32 %r27,%r50;
$L1:
.loc 1 53 1
mov.f32 %value,%r27;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ef_sinh.o/1612277259  0     0     100666  4338      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sinhf
.visible .func (.param .f32 %value_out) __ieee754_sinhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_sinh.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1f
.extern .func (.param .f32 %value_out) expm1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.extern .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_sinhf
.visible .func (.param .f32 %value_out) __ieee754_sinhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r27;
.reg .f32 %r35;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .f32 %r41;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .f32 %r50;
.reg .pred %r51;
.reg .f32 %r53;
.reg .f32 %r55;
.reg .pred %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .pred %r64;
.reg .f32 %r66;
.reg .f32 %r68;
.reg .pred %r69;
.reg .f32 %r71;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .f32 %r78;
.reg .f32 %r80;
mov.f32 %r45,%ar0;
.loc 1 34 2
mov.b32 %r36,%r45;
.loc 1 35 5
and.b32 %r37,%r36,2147483647;
.loc 1 38 4
setp.le.s32 %r46,%r37,2139095039;
@ %r46 bra $L2;
.loc 1 38 39
add.f32 %r44,%r45,%r45;
bra $L1;
$L2:
.loc 1 41 5
setp.ge.s32 %r47,%r36,0;
.loc 1 41 14
selp.f32 %r35,0f3f000000,0fbf000000,%r47;
.loc 1 43 5
setp.gt.s32 %r48,%r37,1102053375;
@ %r48 bra $L5;
.loc 1 44 9
setp.gt.s32 %r49,%r37,830472191;
@ %r49 bra $L6;
.loc 1 45 11
add.f32 %r50,%r45,0f7cf0bdc2;
.loc 1 45 5
setp.gt.f32 %r51,%r50,0f3f800000;
@ ! %r51 bra $L14;
bra $L13;
$L6:
.loc 1 46 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r53,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r53;
call (%value_in),expm1f,(%out_arg1);
ld.param.f32 %r55,[%value_in];
}
mov.f32 %r41,%r55;
.loc 1 47 8
setp.gt.s32 %r56,%r37,1065353215;
@ %r56 bra $L8;
$L11:
.loc 1 47 48
mul.f32 %r57,%r41,%r41;
.loc 1 47 53
add.f32 %r58,%r41,0f3f800000;
.loc 1 47 50
div.rn.f32 %r59,%r57,%r58;
.loc 1 47 46
neg.f32 %r60,%r59;
fma.rn.f32 %r27,%r41,0f40000000,%r60;
.loc 1 47 32
mul.f32 %r44,%r27,%r35;
bra $L1;
$L8:
.loc 1 48 22
add.f32 %r61,%r55,0f3f800000;
.loc 1 48 19
div.rn.f32 %r62,%r55,%r61;
.loc 1 48 17
add.f32 %r63,%r62,%r55;
.loc 1 48 14
mul.f32 %r44,%r63,%r35;
bra $L1;
$L5:
.loc 1 52 5
setp.gt.s32 %r64,%r37,1118925335;
@ %r64 bra $L9;
.loc 1 52 39
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r66,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r66;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r68,[%value_in];
}
.loc 1 52 38
mul.f32 %r44,%r68,%r35;
bra $L1;
$L9:
.loc 1 55 5
setp.gt.s32 %r69,%r37,1119016188;
@ %r69 bra $L10;
.loc 1 56 36
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r71,[%value_in];
}
.loc 1 56 10
mul.f32 %r73,%r71,0f3f000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r73;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r74,[%value_in];
}
.loc 1 57 8
mul.f32 %r75,%r35,%r74;
.loc 1 58 14
mul.f32 %r44,%r75,%r74;
bra $L1;
$L10:
.loc 1 62 10
mul.f32 %r44,%r45,0f7cf0bdc2;
bra $L1;
$L13:
.loc 1 45 26
mov.f32 %r44,%r45;
bra $L1;
$L14:
.loc 1 46 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r45;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r78,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r78;
call (%value_in),expm1f,(%out_arg1);
ld.param.f32 %r80,[%value_in];
}
mov.f32 %r41,%r80;
bra $L11;
$L1:
.loc 1 63 1
mov.f32 %value,%r44;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ef_sqrt.o/1612277259  0     0     100666  3325      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.visible .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_sqrt.c"
// BEGIN GLOBAL FUNCTION DEF: __ieee754_sqrtf
.visible .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .u32 %r24;
.reg .f32 %r25;
.reg .u32 %r26;
.reg .u32 %r29;
.reg .u32 %r30;
.reg .u32 %r34;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .pred %r56;
.reg .pred %r57;
.reg .pred %r58;
.reg .u32 %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .pred %r64;
.reg .u32 %r66;
.reg .pred %r67;
.reg .pred %r68;
.reg .pred %r70;
.reg .pred %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r74;
mov.f32 %r55,%ar0;
.loc 1 35 2
mov.b32 %r30,%r55;
.loc 1 36 5
and.b32 %r43,%r30,2147483647;
.loc 1 39 4
setp.le.u32 %r56,%r43,2139095039;
@ %r56 bra $L2;
.loc 1 40 16
fma.rn.f32 %r54,%r55,%r55,%r55;
bra $L1;
$L2:
.loc 1 43 4
setp.eq.u32 %r57,%r43,0;
@ %r57 bra $L12;
.loc 1 35 2
mov.u32 %r22,%r30;
.loc 1 44 4
setp.ge.s32 %r58,%r30,0;
@ %r58 bra $L4;
.loc 1 44 20
sub.f32 %r25,%r55,%r55;
.loc 1 44 23
div.rn.f32 %r54,%r25,%r25;
bra $L1;
$L4:
.loc 1 47 4
shr.s32 %r42,%r22,23;
.loc 1 48 4
and.b32 %r59,%r22,2139095040;
setp.ne.u32 %r60,%r59,0;
@ %r60 bra $L5;
and.b32 %r40,%r22,8388608;
.loc 1 49 6
setp.ne.u32 %r61,%r40,0;
@ %r61 bra $L13;
$L7:
.loc 1 49 41
add.u32 %r22,%r22,%r22;
mov.u32 %r24,%r40;
.loc 1 49 35
add.u32 %r40,%r40,1;
.loc 1 49 6
and.b32 %r63,%r22,8388608;
setp.eq.u32 %r64,%r63,0;
@ %r64 bra $L7;
bra $L6;
$L13:
mov.u32 %r24,-1;
$L6:
.loc 1 50 8
sub.u32 %r42,%r42,%r24;
$L5:
.loc 1 52 4
add.u32 %r44,%r42,-127;
.loc 1 53 10
and.b32 %r26,%r22,8388607;
.loc 1 53 5
or.b32 %r45,%r26,8388608;
.loc 1 55 9
add.u32 %r51,%r45,%r45;
.loc 1 54 6
and.b32 %r66,%r44,1;
.loc 1 54 4
setp.eq.u32 %r67,%r66,0;
@ %r67 bra $L8;
.loc 1 59 5
shl.b32 %r51,%r45,2;
$L8:
.loc 1 56 4
shr.s32 %r46,%r44,1;
mov.u32 %r53,25;
.loc 1 60 4
mov.u32 %r41,0;
.loc 1 60 8
mov.u32 %r39,%r41;
.loc 1 61 4
mov.u32 %r52,16777216;
$L10:
.loc 1 64 11
add.u32 %r29,%r39,%r52;
.loc 1 65 8
setp.gt.s32 %r68,%r29,%r51;
@ %r68 bra $L9;
.loc 1 66 11
add.u32 %r39,%r29,%r52;
.loc 1 67 7
sub.u32 %r51,%r51,%r29;
.loc 1 68 7
add.u32 %r41,%r41,%r52;
$L9:
.loc 1 70 9
add.u32 %r51,%r51,%r51;
.loc 1 71 7
shr.u32 %r52,%r52,1;
.loc 1 63 7
add.u32 %r53,%r53,-1;
setp.ne.u32 %r70,%r53,0;
@ %r70 bra $L10;
.loc 1 75 4
setp.eq.u32 %r71,%r51,0;
@ %r71 bra $L11;
.loc 1 82 9
add.u32 %r34,%r41,1;
and.b32 %r41,%r34,-2;
$L11:
.loc 1 85 9
shr.s32 %r72,%r41,1;
.loc 1 85 13
add.u32 %r48,%r72,1056964608;
.loc 1 86 11
shl.b32 %r73,%r46,23;
.loc 1 86 5
add.u32 %r74,%r73,%r48;
.loc 1 87 2
mov.b32 %r54,%r74;
.loc 1 88 9
bra $L1;
$L12:
.loc 1 43 35
mov.f32 %r54,%r55;
$L1:
.loc 1 89 1
mov.f32 %value,%r54;
st.param.f32 [%value_out],%value;
ret;
}

/294            1612277259  0     0     100666  1595      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_tgammaf
.visible .func (.param .f32 %value_out) __ieee754_tgammaf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/ef_tgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgammaf_r
.extern .func (.param .f32 %value_out) __ieee754_lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.extern .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_tgammaf
.visible .func (.param .f32 %value_out) __ieee754_tgammaf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .u32 %r31;
.reg .pred %r32;
mov.f32 %r25,%ar0;
.loc 1 32 12
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_lgammaf_r,(%out_arg1,%out_arg2);
ld.param.f32 %r28,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
mov.f32 %r24,%r30;
.loc 1 33 5
ld.u32 %r31,[%frame];
setp.ge.s32 %r32,%r31,0;
@ %r32 bra $L1;
.loc 1 34 5
neg.f32 %r24,%r24;
$L1:
.loc 1 36 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

/313            1612277259  0     0     100666  1116      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypotl
.visible .func (.param .f64 %value_out) __ieee754_hypotl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/el_hypot.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypot
.extern .func (.param .f64 %value_out) __ieee754_hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_hypotl
.visible .func (.param .f64 %value_out) __ieee754_hypotl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 13 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),__ieee754_hypot,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 18 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/331            1612277259  0     0     100666  20664     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgamma_r
.visible .func (.param .f64 %value_out) __ieee754_lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/er_lgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_sin
.extern .func (.param .f64 %value_out) __kernel_sin (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: floor
.extern .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_cos
.extern .func (.param .f64 %value_out) __kernel_cos (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_lgamma_r
.visible .func (.param .f64 %value_out) __ieee754_lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r48;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .f64 %r78;
.reg .f64 %r83;
.reg .f64 %r84;
.reg .f64 %r85;
.reg .f64 %r86;
.reg .f64 %r87;
.reg .f64 %r92;
.reg .f64 %r93;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .u32 %r100;
.reg .f64 %r102;
.reg .f64 %r103;
.reg .f64 %r104;
.reg .u32 %r105;
.reg .f64 %r106;
.reg .f64 %r107;
.reg .f64 %r108;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r115;
.reg .f64 %r116;
.reg .f64 %r117;
.reg .f64 %r118;
.reg .f64 %r119;
.reg .f64 %r120;
.reg .f64 %r121;
.reg .f64 %r122;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .f64 %r126;
.reg .f64 %r128;
.reg .f64 %r130;
.reg .f64 %r132;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .f64 %r139;
.reg .f64 %r142;
.reg .f64 %r145;
.reg .f64 %r151;
.reg .f64 %r154;
.reg .f64 %r158;
.reg .f64 %r168;
.reg .f64 %r169;
.reg .u64 %r170;
.reg .u64 %r171;
.reg .u64 %r172;
.reg .u32 %r173;
.reg .pred %r174;
.reg .u32 %r176;
.reg .pred %r177;
.reg .pred %r178;
.reg .u32 %r179;
.reg .f64 %r180;
.reg .f64 %r181;
.reg .pred %r182;
.reg .pred %r183;
.reg .u32 %r184;
.reg .f64 %r186;
.reg .f64 %r187;
.reg .f64 %r189;
.reg .pred %r191;
.reg .pred %r192;
.reg .f64 %r194;
.reg .u32 %r195;
.reg .f64 %r196;
.reg .f64 %r197;
.reg .f64 %r199;
.reg .pred %r200;
.reg .f64 %r202;
.reg .f64 %r203;
.reg .pred %r204;
.reg .f64 %r205;
.reg .f64 %r206;
.reg .u64 %r207;
.reg .pred %r208;
.reg .pred %r209;
.reg .u32 %r210;
.reg .pred %r211;
.reg .f64 %r212;
.reg .f64 %r213;
.reg .f64 %r215;
.reg .f64 %r216;
.reg .u32 %r217;
.reg .pred %r218;
.reg .f64 %r220;
.reg .f64 %r222;
.reg .f64 %r223;
.reg .f64 %r224;
.reg .f64 %r226;
.reg .u32 %r227;
.reg .f64 %r228;
.reg .f64 %r230;
.reg .f64 %r231;
.reg .f64 %r232;
.reg .f64 %r233;
.reg .f64 %r234;
.reg .f64 %r235;
.reg .f64 %r236;
.reg .f64 %r238;
.reg .u32 %r239;
.reg .f64 %r240;
.reg .pred %r241;
.reg .f64 %r243;
.reg .f64 %r244;
.reg .f64 %r246;
.reg .f64 %r247;
.reg .f64 %r248;
.reg .pred %r249;
.reg .u32 %r250;
.reg .u32 %r251;
.reg .u32 %r252;
.reg .pred %r253;
.reg .u32 %r254;
.reg .u32 %r255;
.reg .pred %r256;
.reg .u32 %r257;
.reg .pred %r258;
.reg .pred %r259;
.reg .f64 %r261;
.reg .pred %r262;
.reg .f64 %r263;
.reg .pred %r264;
.reg .f64 %r265;
.reg .pred %r266;
.reg .f64 %r267;
.reg .pred %r268;
.reg .f64 %r269;
.reg .f64 %r270;
.reg .f64 %r271;
.reg .f64 %r273;
.reg .f64 %r274;
.reg .f64 %r275;
.reg .f64 %r276;
.reg .f64 %r277;
.reg .pred %r278;
.reg .f64 %r279;
.reg .f64 %r280;
.reg .pred %r281;
.reg .pred %r282;
.reg .pred %r283;
.reg .pred %r284;
.reg .pred %r285;
.reg .pred %r286;
.reg .f64 %r287;
.reg .f64 %r288;
.reg .f64 %r289;
.reg .f64 %r291;
.reg .f64 %r292;
.reg .f64 %r293;
.reg .pred %r294;
.reg .f64 %r296;
.reg .f64 %r297;
.reg .f64 %r298;
.reg .f64 %r299;
.reg .f64 %r300;
.reg .f64 %r303;
.reg .f64 %r304;
.reg .f64 %r305;
.reg .u32 %r308;
.reg .u32 %r309;
.reg .pred %r310;
.reg .u32 %r311;
.reg .u32 %r312;
.reg .pred %r313;
.reg .pred %r314;
mov.f64 %r169,%ar0;
mov.u64 %r170,%ar1;
.loc 1 223 2
mov.b64 %r171,%r169;
shr.u64 %r172,%r171,32;
cvt.u32.u64 %r98,%r172;
.loc 1 226 12
mov.u32 %r173,1;
st.u32 [%r170],%r173;
.loc 1 227 5
and.b32 %r100,%r98,2147483647;
.loc 1 228 4
setp.le.s32 %r174,%r100,2146435071;
@ %r174 bra $L2;
.loc 1 229 14
mul.f64 %r168,%r169,%r169;
bra $L1;
$L2:
.loc 1 223 2
cvt.u32.u64 %r99,%r171;
.loc 1 231 8
or.b32 %r176,%r99,%r100;
.loc 1 231 4
setp.ne.u32 %r177,%r176,0;
@ %r177 bra $L4;
.loc 1 232 8
setp.ge.s32 %r178,%r98,0;
@ %r178 bra $L5;
.loc 1 233 20
mov.u32 %r179,-1;
st.u32 [%r170],%r179;
$L5:
.loc 1 234 19
sub.f64 %r180,%r169,%r169;
.loc 1 234 16
mov.f64 %r181,0d3ff0000000000000;
div.rn.f64 %r168,%r181,%r180;
bra $L1;
$L4:
.loc 1 236 4
setp.gt.s32 %r182,%r100,999292927;
@ %r182 bra $L6;
.loc 1 237 8
setp.ge.s32 %r183,%r98,0;
@ %r183 bra $L7;
.loc 1 238 20
mov.u32 %r184,-1;
st.u32 [%r170],%r184;
.loc 1 239 18
neg.f64 %r186,%r169;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r186;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r187,[%value_in];
}
.loc 1 239 17
neg.f64 %r168,%r187;
bra $L1;
$L7:
.loc 1 240 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r169;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r189,[%value_in];
}
.loc 1 240 20
neg.f64 %r168,%r189;
bra $L1;
$L6:
.loc 1 242 4
setp.ge.s32 %r314,%r98,0;
@ %r314 bra $L8;
.loc 1 243 8
setp.gt.s32 %r191,%r100,1127219199;
@ %r191 bra $L5;
.loc 1 175 4
setp.gt.s32 %r192,%r100,1070596095;
@ %r192 bra $L9;
.loc 1 175 27
mul.f64 %r196,%r169,0d400921fb54442d18;
mov.u32 %r195,0;
mov.f64 %r194,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r196;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r194;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r195;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r197,[%value_in];
}
mov.f64 %r154,%r197;
bra $L10;
$L9:
.loc 1 176 4
neg.f64 %r128,%r169;
.loc 1 182 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r128;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r199,[%value_in];
}
.loc 1 183 4
setp.eq.f64 %r200,%r128,%r199;
@ %r200 bra $L11;
.loc 1 184 9
mul.f64 %r130,%r128,0d3fe0000000000000;
.loc 1 185 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r130;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r202,[%value_in];
}
.loc 1 185 19
sub.f64 %r132,%r130,%r202;
.loc 1 185 10
add.f64 %r158,%r132,%r132;
.loc 1 186 26
mul.f64 %r203,%r158,0d4010000000000000;
.loc 1 186 10
cvt.rzi.s32.f64 %r138,%r203;
.loc 1 198 2
setp.gt.s32 %r204,%r138,4;
@ %r204 bra $L12;
bra $L13;
$L11:
.loc 1 192 3
mov.f64 %r206,0d4330000000000000;
sub.f64 %r205,%r206,%r169;
mov.b64 %r207,%r205;
cvt.u32.u64 %r136,%r207;
.loc 1 193 5
and.b32 %r137,%r136,1;
.loc 1 194 20
cvt.rn.f64.s32 %r158,%r137;
.loc 1 195 18
shl.b32 %r138,%r137,2;
$L13:
.loc 1 198 2
setp.gt.s32 %r208,%r138,2;
@ %r208 bra $L14;
setp.eq.u32 %r209,%r138,0;
@ %r209 bra $L15;
add.u32 %r210,%r138,-1;
setp.gt.u32 %r211,%r210,1;
@ %r211 bra $L16;
.loc 1 201 41
mov.f64 %r213,0d3fe0000000000000;
sub.f64 %r212,%r213,%r158;
.loc 1 201 21
mul.f64 %r142,%r212,0d400921fb54442d18;
mov.f64 %r215,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r142;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r215;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r216,[%value_in];
}
.loc 1 208 9
neg.f64 %r154,%r216;
.loc 1 201 6
bra $L10;
$L12:
.loc 1 198 2
add.u32 %r217,%r138,-5;
setp.gt.u32 %r218,%r217,1;
@ ! %r218 bra $L52;
bra $L16;
$L15:
.loc 1 199 21
mul.f64 %r139,%r158,0d400921fb54442d18;
mov.f64 %r220,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r139;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r220;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r138;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r222,[%value_in];
}
.loc 1 208 9
neg.f64 %r154,%r222;
.loc 1 199 6
bra $L10;
$L14:
.loc 1 203 41
mov.f64 %r224,0d3ff0000000000000;
sub.f64 %r223,%r224,%r158;
.loc 1 203 21
mul.f64 %r145,%r223,0d400921fb54442d18;
mov.u32 %r227,0;
mov.f64 %r226,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r145;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r226;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r227;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r228,[%value_in];
}
.loc 1 208 9
neg.f64 %r154,%r228;
.loc 1 203 6
bra $L10;
$L52:
.loc 1 205 39
mov.f64 %r232,0d3ff8000000000000;
sub.f64 %r231,%r158,%r232;
.loc 1 205 21
mul.f64 %r233,%r231,0d400921fb54442d18;
mov.f64 %r230,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r233;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r230;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r234,[%value_in];
}
mov.f64 %r154,%r234;
.loc 1 205 6
bra $L10;
$L16:
.loc 1 206 39
mov.f64 %r236,0d4000000000000000;
sub.f64 %r235,%r158,%r236;
.loc 1 206 21
mul.f64 %r151,%r235,0d400921fb54442d18;
mov.u32 %r239,0;
mov.f64 %r238,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r151;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r238;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r239;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r240,[%value_in];
}
.loc 1 208 9
neg.f64 %r154,%r240;
$L10:
.loc 1 247 8
setp.eq.f64 %r241,%r154,0d0000000000000000;
@ %r241 bra $L5;
.loc 1 250 30
mul.f64 %r243,%r169,%r154;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r243;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r244,[%value_in];
}
.loc 1 250 13
mov.f64 %r247,0d400921fb54442d18;
div.rn.f64 %r246,%r247,%r244;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r246;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r248,[%value_in];
}
mov.f64 %r168,%r248;
.loc 1 251 8
setp.lt.f64 %r249,%r154,0d0000000000000000;
@ ! %r249 bra $L19;
.loc 1 251 27
mov.u32 %r250,-1;
st.u32 [%r170],%r250;
$L19:
.loc 1 256 10
add.u32 %r251,%r100,-1072693248;
.loc 1 256 22
or.b32 %r252,%r251,%r99;
.loc 1 256 4
setp.eq.u32 %r253,%r252,0;
@ %r253 bra $L1;
.loc 1 252 8
neg.f64 %r169,%r169;
.loc 1 256 37
add.u32 %r254,%r100,-1073741824;
.loc 1 256 49
or.b32 %r255,%r254,%r99;
.loc 1 256 30
setp.eq.u32 %r256,%r255,0;
@ %r256 bra $L40;
$L39:
.loc 1 258 9
and.b32 %r257,%r98,1073741824;
setp.ne.u32 %r258,%r257,0;
@ %r258 bra $L23;
.loc 1 259 8
setp.gt.s32 %r259,%r100,1072483532;
@ %r259 bra $L24;
.loc 1 260 8
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r169;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r261,[%value_in];
}
.loc 1 260 5
neg.f64 %r115,%r261;
.loc 1 261 5
setp.le.s32 %r262,%r100,1072130371;
@ %r262 bra $L25;
.loc 1 261 25
mov.f64 %r263,0d3ff0000000000000;
sub.f64 %r114,%r263,%r169;
bra $L26;
$L25:
.loc 1 262 10
setp.le.s32 %r264,%r100,1070442080;
@ %r264 bra $L27;
.loc 1 262 29
mov.f64 %r265,0d3fdd8b618d5af8fc;
sub.f64 %r113,%r169,%r265;
bra $L28;
$L24:
.loc 1 266 12
setp.le.s32 %r266,%r100,1073460418;
@ %r266 bra $L29;
.loc 1 266 31
mov.f64 %r267,0d4000000000000000;
sub.f64 %r114,%r267,%r169;
.loc 1 265 7
mov.f64 %r115,0d0000000000000000;
bra $L26;
$L29:
.loc 1 267 17
setp.le.s32 %r268,%r100,1072936131;
@ %r268 bra $L30;
.loc 1 267 36
mov.f64 %r269,0d3ff762d86356be3f;
sub.f64 %r113,%r169,%r269;
.loc 1 265 7
mov.f64 %r115,0d0000000000000000;
bra $L28;
$L30:
.loc 1 268 10
mov.f64 %r270,0d3ff0000000000000;
sub.f64 %r169,%r169,%r270;
.loc 1 265 7
mov.f64 %r115,0d0000000000000000;
bra $L27;
$L26:
.loc 1 272 5
mul.f64 %r124,%r114,%r114;
.loc 1 273 34
fma.rn.f64 %r31,%r124,0d3efa7074428cfa52,0d3f2cf2eced10e54d;
.loc 1 273 28
fma.rn.f64 %r32,%r31,%r124,0d3f538a94116f3f5d;
.loc 1 273 22
fma.rn.f64 %r33,%r32,%r124,0d3f7e404fb68fefe8;
.loc 1 273 16
fma.rn.f64 %r34,%r33,%r124,0d3fb13e001a5562a7;
.loc 1 273 6
fma.rn.f64 %r125,%r34,%r124,0d3fb3c467e37db0c8;
.loc 1 274 37
fma.rn.f64 %r35,%r124,0d3f07858e90a45837,0d3f1c5088987dfb07;
.loc 1 274 31
fma.rn.f64 %r36,%r35,%r124,0d3f40b6c689b99c00;
.loc 1 274 25
fma.rn.f64 %r37,%r36,%r124,0d3f67add8ccb7926b;
.loc 1 274 19
fma.rn.f64 %r38,%r37,%r124,0d3f951322ac92547b;
.loc 1 274 13
fma.rn.f64 %r39,%r38,%r124,0d3fd4a34cc4a60fad;
.loc 1 275 9
mul.f64 %r271,%r125,%r114;
.loc 1 275 6
fma.rn.f64 %r126,%r39,%r124,%r271;
.loc 1 276 11
fma.rn.f64 %r41,%r114,0dbfe0000000000000,%r126;
.loc 1 276 6
add.f64 %r95,%r41,%r115;
.loc 1 276 3
bra $L31;
$L28:
.loc 1 278 5
mul.f64 %r118,%r113,%r113;
.loc 1 279 5
mul.f64 %r119,%r118,%r113;
.loc 1 280 29
fma.rn.f64 %r42,%r119,0d3f34af6d6c0ebbf7,0dbf56fe8ebf2d1af1;
.loc 1 280 22
fma.rn.f64 %r43,%r42,%r119,0d3f78fce0e370e344;
.loc 1 280 16
fma.rn.f64 %r44,%r43,%r119,0dbfa0c9a8df35b713;
.loc 1 280 6
fma.rn.f64 %r120,%r44,%r119,0d3fdef72bc8ee38a2;
.loc 1 281 29
fma.rn.f64 %r45,%r119,0dbf347f24ecc38c38,0d3f4cdf0cef61a8e9;
.loc 1 281 22
fma.rn.f64 %r46,%r45,%r119,0dbf6e2effb3e914d7;
.loc 1 281 16
fma.rn.f64 %r47,%r46,%r119,0d3f9266e7970af9ec;
.loc 1 281 6
fma.rn.f64 %r121,%r47,%r119,0dbfc2e4278dc6c509;
.loc 1 282 29
fma.rn.f64 %r48,%r119,0d3f35fd3ee8c2d3f4,0dbf41a6109c73e0ec;
.loc 1 282 22
fma.rn.f64 %r49,%r48,%r119,0d3f6282d32e15c915;
.loc 1 282 16
fma.rn.f64 %r50,%r49,%r119,0dbf851f9fba91ec6a;
.loc 1 282 6
fma.rn.f64 %r122,%r50,%r119,0d3fb08b4294d5419b;
.loc 1 283 22
fma.rn.f64 %r51,%r122,%r113,%r121;
.loc 1 283 16
neg.f64 %r273,%r51;
fma.rn.f64 %r52,%r273,%r119,0dbc50c7caa48a971f;
.loc 1 283 6
neg.f64 %r274,%r52;
fma.rn.f64 %r123,%r118,%r120,%r274;
.loc 1 284 12
mov.f64 %r276,0d3fbf19b9bcc38a42;
sub.f64 %r275,%r123,%r276;
.loc 1 284 5
add.f64 %r95,%r275,%r115;
.loc 1 284 3
bra $L31;
$L27:
.loc 1 286 37
fma.rn.f64 %r54,%r169,0d3f8b678bbf2bab09,0d3fcd4eaef6010924;
.loc 1 286 31
fma.rn.f64 %r55,%r54,%r169,0d3fef497644ea8450;
.loc 1 286 25
fma.rn.f64 %r56,%r55,%r169,0d3ff7475cd119bd6f;
.loc 1 286 19
fma.rn.f64 %r57,%r56,%r169,0d3fe4401e8b005dff;
.loc 1 286 13
fma.rn.f64 %r58,%r57,%r169,0dbfb3c467e37db0c8;
.loc 1 286 6
mul.f64 %r116,%r58,%r169;
.loc 1 287 35
fma.rn.f64 %r59,%r169,0d3f6a5abb57d0cf61,0d3fbaae55d6537c88;
.loc 1 287 29
fma.rn.f64 %r60,%r59,%r169,0d3fe89dfbe45050af;
.loc 1 287 23
fma.rn.f64 %r61,%r60,%r169,0d40010725a42b18f5;
.loc 1 287 17
fma.rn.f64 %r62,%r61,%r169,0d4003a5d7c2bd619c;
.loc 1 287 6
fma.rn.f64 %r117,%r62,%r169,0d3ff0000000000000;
.loc 1 288 20
div.rn.f64 %r277,%r116,%r117;
.loc 1 288 16
fma.rn.f64 %r64,%r169,0dbfe0000000000000,%r277;
.loc 1 288 5
add.f64 %r95,%r64,%r115;
bra $L31;
$L23:
.loc 1 291 9
setp.gt.s32 %r278,%r100,1075838975;
@ %r278 bra $L32;
.loc 1 292 8
cvt.rzi.s32.f64 %r105,%r169;
.loc 1 294 12
cvt.rn.f64.s32 %r279,%r105;
.loc 1 294 8
sub.f64 %r106,%r169,%r279;
.loc 1 295 45
fma.rn.f64 %r66,%r106,0d3f00bfecdd17e945,0d3f5e26b67368f239;
.loc 1 295 39
fma.rn.f64 %r67,%r66,%r106,0d3f9b481c7e939961;
.loc 1 295 33
fma.rn.f64 %r68,%r67,%r106,0d3fc2bb9cbee5f2f7;
.loc 1 295 27
fma.rn.f64 %r69,%r68,%r106,0d3fd4d98f4f139f59;
.loc 1 295 21
fma.rn.f64 %r70,%r69,%r106,0d3fcb848b36e20878;
.loc 1 295 15
fma.rn.f64 %r71,%r70,%r106,0dbfb3c467e37db0c8;
.loc 1 295 8
mul.f64 %r107,%r71,%r106;
.loc 1 296 43
fma.rn.f64 %r72,%r106,0d3edebaf7a5b38140,0d3f497ddaca41a95b;
.loc 1 296 37
fma.rn.f64 %r73,%r72,%r106,0d3f9317ea742ed475;
.loc 1 296 31
fma.rn.f64 %r74,%r73,%r106,0d3fc601edccfbdf27;
.loc 1 296 25
fma.rn.f64 %r75,%r74,%r106,0d3fe71a1893d3dcdc;
.loc 1 296 19
fma.rn.f64 %r76,%r75,%r106,0d3ff645a762c4ab74;
.loc 1 296 8
fma.rn.f64 %r108,%r76,%r106,0d3ff0000000000000;
.loc 1 297 18
div.rn.f64 %r280,%r107,%r108;
.loc 1 297 8
fma.rn.f64 %r95,%r106,0d3fe0000000000000,%r280;
.loc 1 299 6
setp.eq.u32 %r281,%r105,5;
@ %r281 bra $L41;
setp.gt.s32 %r282,%r105,5;
@ %r282 bra $L34;
setp.eq.u32 %r283,%r105,3;
@ %r283 bra $L42;
setp.eq.u32 %r284,%r105,4;
@ %r284 bra $L43;
bra $L31;
$L34:
setp.eq.u32 %r285,%r105,6;
@ %r285 bra $L44;
setp.ne.u32 %r286,%r105,7;
@ %r286 bra $L31;
.loc 1 300 21
add.f64 %r78,%r106,0d4018000000000000;
bra $L37;
$L44:
.loc 1 299 6
mov.f64 %r78,0d3ff0000000000000;
$L37:
.loc 1 301 21
add.f64 %r287,%r106,0d4014000000000000;
.loc 1 301 16
mul.f64 %r92,%r287,%r78;
bra $L33;
$L41:
.loc 1 299 6
mov.f64 %r92,0d3ff0000000000000;
$L33:
.loc 1 302 21
add.f64 %r288,%r106,0d4010000000000000;
.loc 1 302 16
mul.f64 %r93,%r288,%r92;
bra $L36;
$L43:
.loc 1 299 6
mov.f64 %r93,0d3ff0000000000000;
$L36:
.loc 1 303 21
add.f64 %r289,%r106,0d4008000000000000;
.loc 1 303 16
mul.f64 %r94,%r289,%r93;
bra $L35;
$L42:
.loc 1 299 6
mov.f64 %r94,0d3ff0000000000000;
$L35:
.loc 1 304 21
add.f64 %r291,%r106,0d4000000000000000;
.loc 1 304 16
mul.f64 %r292,%r291,%r94;
.loc 1 305 12
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r292;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r293,[%value_in];
}
.loc 1 305 9
add.f64 %r95,%r95,%r293;
.loc 1 305 7
bra $L31;
$L32:
.loc 1 308 12
setp.gt.s32 %r294,%r100,1133510655;
@ %r294 bra $L38;
.loc 1 309 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r169;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r296,[%value_in];
}
.loc 1 310 8
mov.f64 %r297,0d3ff0000000000000;
div.rn.f64 %r102,%r297,%r169;
.loc 1 311 8
mul.f64 %r103,%r102,%r102;
.loc 1 312 42
fma.rn.f64 %r83,%r103,0dbf5ab89d0b9e43e4,0d3f4b67ba4cdad5d1;
.loc 1 312 36
fma.rn.f64 %r84,%r83,%r103,0dbf4380cb8c0fe741;
.loc 1 312 30
fma.rn.f64 %r85,%r84,%r103,0d3f4a019f98cf38b6;
.loc 1 312 24
fma.rn.f64 %r86,%r85,%r103,0dbf66c16c16b02e5c;
.loc 1 312 18
fma.rn.f64 %r87,%r86,%r103,0d3fb555555555553b;
.loc 1 312 8
fma.rn.f64 %r104,%r87,%r102,0d3fdacfe390c97d69;
.loc 1 313 12
mov.f64 %r299,0d3fe0000000000000;
sub.f64 %r298,%r169,%r299;
.loc 1 313 21
sub.f64 %r300,%r296,%r297;
.loc 1 313 8
fma.rn.f64 %r95,%r298,%r300,%r104;
bra $L31;
$L38:
.loc 1 316 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r169;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r303,[%value_in];
}
.loc 1 316 30
mov.f64 %r305,0d3ff0000000000000;
sub.f64 %r304,%r303,%r305;
.loc 1 316 8
mul.f64 %r95,%r304,%r169;
$L31:
.loc 1 317 4
@ ! %r314 bra $L22;
bra $L45;
$L40:
.loc 1 256 61
mov.f64 %r95,0d0000000000000000;
$L22:
.loc 1 317 13
sub.f64 %r168,%r168,%r95;
bra $L1;
$L45:
mov.f64 %r168,%r95;
bra $L1;
$L46:
.loc 1 256 61
mov.f64 %r168,0d0000000000000000;
bra $L1;
$L47:
mov.f64 %r168,0d0000000000000000;
bra $L1;
$L8:
.loc 1 256 10
add.u32 %r308,%r100,-1072693248;
.loc 1 256 22
or.b32 %r309,%r308,%r99;
.loc 1 256 4
setp.eq.u32 %r310,%r309,0;
@ %r310 bra $L46;
.loc 1 256 37
add.u32 %r311,%r100,-1073741824;
.loc 1 256 49
or.b32 %r312,%r311,%r99;
.loc 1 256 30
setp.eq.u32 %r313,%r312,0;
@ %r313 bra $L47;
.loc 1 220 15
mov.f64 %r168,0d0000000000000000;
bra $L39;
$L1:
.loc 1 319 1
mov.f64 %value,%r168;
st.param.f64 [%value_out],%value;
ret;
}
/350            1612277259  0     0     100666  18998     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgammaf_r
.visible .func (.param .f32 %value_out) __ieee754_lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/erf_lgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_sinf
.extern .func (.param .f32 %value_out) __kernel_sinf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: floorf
.extern .func (.param .f32 %value_out) floorf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __kernel_cosf
.extern .func (.param .f32 %value_out) __kernel_cosf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __ieee754_lgammaf_r
.visible .func (.param .f32 %value_out) __ieee754_lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r63;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .f32 %r77;
.reg .f32 %r82;
.reg .f32 %r83;
.reg .f32 %r84;
.reg .f32 %r85;
.reg .f32 %r86;
.reg .f32 %r92;
.reg .f32 %r93;
.reg .f32 %r94;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .f32 %r101;
.reg .f32 %r102;
.reg .f32 %r103;
.reg .u32 %r104;
.reg .f32 %r106;
.reg .f32 %r107;
.reg .f32 %r108;
.reg .f32 %r111;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .f32 %r114;
.reg .f32 %r115;
.reg .f32 %r116;
.reg .f32 %r117;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .f32 %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .f32 %r124;
.reg .f32 %r126;
.reg .f32 %r128;
.reg .f32 %r130;
.reg .u32 %r134;
.reg .u32 %r135;
.reg .u32 %r136;
.reg .f32 %r138;
.reg .f32 %r141;
.reg .f32 %r144;
.reg .f32 %r150;
.reg .f32 %r153;
.reg .f32 %r156;
.reg .f32 %r161;
.reg .f32 %r163;
.reg .f32 %r164;
.reg .u64 %r165;
.reg .u32 %r166;
.reg .pred %r167;
.reg .pred %r168;
.reg .pred %r169;
.reg .u32 %r170;
.reg .f32 %r171;
.reg .f32 %r172;
.reg .pred %r173;
.reg .pred %r174;
.reg .u32 %r175;
.reg .f32 %r177;
.reg .f32 %r178;
.reg .f32 %r180;
.reg .pred %r182;
.reg .pred %r183;
.reg .f32 %r185;
.reg .u32 %r186;
.reg .f32 %r187;
.reg .f32 %r188;
.reg .f32 %r190;
.reg .pred %r191;
.reg .f32 %r193;
.reg .f32 %r194;
.reg .pred %r195;
.reg .f32 %r196;
.reg .f32 %r197;
.reg .pred %r198;
.reg .pred %r199;
.reg .u32 %r200;
.reg .pred %r201;
.reg .f32 %r202;
.reg .f32 %r203;
.reg .f32 %r205;
.reg .f32 %r206;
.reg .u32 %r207;
.reg .pred %r208;
.reg .f32 %r210;
.reg .f32 %r212;
.reg .f32 %r213;
.reg .f32 %r214;
.reg .f32 %r216;
.reg .u32 %r217;
.reg .f32 %r218;
.reg .f32 %r220;
.reg .f32 %r221;
.reg .f32 %r222;
.reg .f32 %r223;
.reg .f32 %r224;
.reg .f32 %r225;
.reg .f32 %r226;
.reg .f32 %r228;
.reg .u32 %r229;
.reg .f32 %r230;
.reg .pred %r231;
.reg .f32 %r233;
.reg .f32 %r234;
.reg .f32 %r236;
.reg .f32 %r237;
.reg .f32 %r238;
.reg .pred %r239;
.reg .u32 %r240;
.reg .u32 %r241;
.reg .u32 %r242;
.reg .pred %r243;
.reg .u32 %r244;
.reg .pred %r245;
.reg .pred %r246;
.reg .f32 %r248;
.reg .pred %r249;
.reg .f32 %r250;
.reg .pred %r251;
.reg .f32 %r252;
.reg .pred %r253;
.reg .f32 %r254;
.reg .pred %r255;
.reg .f32 %r256;
.reg .f32 %r257;
.reg .f32 %r258;
.reg .f32 %r260;
.reg .f32 %r261;
.reg .f32 %r262;
.reg .f32 %r263;
.reg .f32 %r264;
.reg .pred %r265;
.reg .f32 %r266;
.reg .f32 %r267;
.reg .pred %r268;
.reg .pred %r269;
.reg .pred %r270;
.reg .pred %r271;
.reg .pred %r272;
.reg .pred %r273;
.reg .f32 %r274;
.reg .f32 %r275;
.reg .f32 %r276;
.reg .f32 %r278;
.reg .f32 %r279;
.reg .f32 %r280;
.reg .pred %r281;
.reg .f32 %r283;
.reg .f32 %r284;
.reg .f32 %r285;
.reg .f32 %r286;
.reg .f32 %r287;
.reg .f32 %r290;
.reg .f32 %r291;
.reg .f32 %r292;
.reg .u32 %r295;
.reg .u32 %r296;
.reg .pred %r297;
.reg .pred %r298;
mov.f32 %r164,%ar0;
mov.u64 %r165,%ar1;
.loc 1 158 2
mov.b32 %r97,%r164;
.loc 1 161 12
mov.u32 %r166,1;
st.u32 [%r165],%r166;
.loc 1 162 5
and.b32 %r98,%r97,2147483647;
.loc 1 163 4
setp.le.s32 %r167,%r98,2139095039;
@ %r167 bra $L2;
.loc 1 164 14
mul.f32 %r163,%r164,%r164;
bra $L1;
$L2:
.loc 1 166 4
setp.ne.u32 %r168,%r98,0;
@ %r168 bra $L4;
.loc 1 167 8
setp.ge.s32 %r169,%r97,0;
@ %r169 bra $L5;
.loc 1 168 20
mov.u32 %r170,-1;
st.u32 [%r165],%r170;
$L5:
.loc 1 169 19
sub.f32 %r171,%r164,%r164;
.loc 1 169 16
mov.f32 %r172,0f3f800000;
div.rn.f32 %r163,%r172,%r171;
bra $L1;
$L4:
.loc 1 171 4
setp.gt.s32 %r173,%r98,478150655;
@ %r173 bra $L6;
.loc 1 172 8
setp.ge.s32 %r174,%r97,0;
@ %r174 bra $L7;
.loc 1 173 20
mov.u32 %r175,-1;
st.u32 [%r165],%r175;
.loc 1 174 18
neg.f32 %r177,%r164;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r177;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r178,[%value_in];
}
.loc 1 174 17
neg.f32 %r163,%r178;
bra $L1;
$L7:
.loc 1 175 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r164;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r180,[%value_in];
}
.loc 1 175 20
neg.f32 %r163,%r180;
bra $L1;
$L6:
.loc 1 177 4
setp.ge.s32 %r298,%r97,0;
@ %r298 bra $L8;
.loc 1 178 8
setp.gt.s32 %r182,%r98,1258291199;
@ %r182 bra $L5;
.loc 1 110 4
setp.gt.s32 %r183,%r98,1048575999;
@ %r183 bra $L9;
.loc 1 110 27
mul.f32 %r187,%r164,0f40490fdb;
mov.u32 %r186,0;
mov.f32 %r185,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r187;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r185;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r186;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r188,[%value_in];
}
mov.f32 %r153,%r188;
bra $L10;
$L9:
.loc 1 111 4
neg.f32 %r126,%r164;
.loc 1 117 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r126;
call (%value_in),floorf,(%out_arg1);
ld.param.f32 %r190,[%value_in];
}
.loc 1 118 4
setp.eq.f32 %r191,%r126,%r190;
@ %r191 bra $L11;
.loc 1 119 9
mul.f32 %r128,%r126,0f3f000000;
.loc 1 120 28
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r128;
call (%value_in),floorf,(%out_arg1);
ld.param.f32 %r193,[%value_in];
}
.loc 1 120 26
sub.f32 %r130,%r128,%r193;
.loc 1 120 10
add.f32 %r161,%r130,%r130;
.loc 1 121 26
mul.f32 %r194,%r161,0f40800000;
.loc 1 121 10
cvt.rzi.s32.f32 %r136,%r194;
.loc 1 133 2
setp.gt.s32 %r195,%r136,4;
@ %r195 bra $L12;
bra $L13;
$L11:
.loc 1 127 3
mov.f32 %r197,0f4b000000;
sub.f32 %r196,%r197,%r164;
mov.b32 %r134,%r196;
.loc 1 128 5
and.b32 %r135,%r134,1;
.loc 1 129 20
cvt.rn.f32.s32 %r161,%r135;
.loc 1 130 18
shl.b32 %r136,%r135,2;
$L13:
.loc 1 133 2
setp.gt.s32 %r198,%r136,2;
@ %r198 bra $L14;
setp.eq.u32 %r199,%r136,0;
@ %r199 bra $L15;
add.u32 %r200,%r136,-1;
setp.gt.u32 %r201,%r200,1;
@ %r201 bra $L16;
.loc 1 136 49
mov.f32 %r203,0f3f000000;
sub.f32 %r202,%r203,%r161;
.loc 1 136 21
mul.f32 %r141,%r202,0f40490fdb;
mov.f32 %r205,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r141;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r205;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r206,[%value_in];
}
.loc 1 143 9
neg.f32 %r153,%r206;
.loc 1 136 6
bra $L10;
$L12:
.loc 1 133 2
add.u32 %r207,%r136,-5;
setp.gt.u32 %r208,%r207,1;
@ ! %r208 bra $L48;
bra $L16;
$L15:
.loc 1 134 21
mul.f32 %r138,%r161,0f40490fdb;
mov.f32 %r210,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r138;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r210;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r136;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r212,[%value_in];
}
.loc 1 143 9
neg.f32 %r153,%r212;
.loc 1 134 6
bra $L10;
$L14:
.loc 1 138 42
mov.f32 %r214,0f3f800000;
sub.f32 %r213,%r214,%r161;
.loc 1 138 21
mul.f32 %r144,%r213,0f40490fdb;
mov.u32 %r217,0;
mov.f32 %r216,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r144;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r216;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r217;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r218,[%value_in];
}
.loc 1 143 9
neg.f32 %r153,%r218;
.loc 1 138 6
bra $L10;
$L48:
.loc 1 140 40
mov.f32 %r222,0f3fc00000;
sub.f32 %r221,%r161,%r222;
.loc 1 140 21
mul.f32 %r223,%r221,0f40490fdb;
mov.f32 %r220,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r223;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r220;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r224,[%value_in];
}
mov.f32 %r153,%r224;
.loc 1 140 6
bra $L10;
$L16:
.loc 1 141 40
mov.f32 %r226,0f40000000;
sub.f32 %r225,%r161,%r226;
.loc 1 141 21
mul.f32 %r150,%r225,0f40490fdb;
mov.u32 %r229,0;
mov.f32 %r228,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r150;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r228;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r229;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r230,[%value_in];
}
.loc 1 143 9
neg.f32 %r153,%r230;
$L10:
.loc 1 182 8
setp.eq.f32 %r231,%r153,0f00000000;
@ %r231 bra $L5;
.loc 1 186 31
mul.f32 %r233,%r164,%r153;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r233;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r234,[%value_in];
}
.loc 1 186 13
mov.f32 %r237,0f40490fdb;
div.rn.f32 %r236,%r237,%r234;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r236;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r238,[%value_in];
}
mov.f32 %r163,%r238;
.loc 1 187 8
setp.lt.f32 %r239,%r153,0f00000000;
@ ! %r239 bra $L19;
.loc 1 187 27
mov.u32 %r240,-1;
st.u32 [%r165],%r240;
$L19:
.loc 1 192 8
add.u32 %r241,%r98,-1065353216;
and.b32 %r242,%r241,-8388609;
.loc 1 192 5
setp.eq.u32 %r243,%r242,0;
@ %r243 bra $L1;
.loc 1 188 8
neg.f32 %r164,%r164;
.loc 1 186 13
mov.f32 %r156,%r238;
$L38:
.loc 1 194 9
and.b32 %r244,%r97,1073741824;
setp.ne.u32 %r245,%r244,0;
@ %r245 bra $L22;
.loc 1 195 8
setp.gt.s32 %r246,%r98,1063675494;
@ %r246 bra $L23;
.loc 1 196 8
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r164;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r248,[%value_in];
}
.loc 1 196 5
neg.f32 %r113,%r248;
.loc 1 197 5
setp.le.s32 %r249,%r98,1060850207;
@ %r249 bra $L24;
.loc 1 197 25
mov.f32 %r250,0f3f800000;
sub.f32 %r112,%r250,%r164;
bra $L25;
$L24:
.loc 1 198 10
setp.le.s32 %r251,%r98,1047343879;
@ %r251 bra $L26;
.loc 1 198 29
mov.f32 %r252,0f3eec5b0c;
sub.f32 %r111,%r164,%r252;
bra $L27;
$L23:
.loc 1 202 12
setp.le.s32 %r253,%r98,1071490583;
@ %r253 bra $L28;
.loc 1 202 31
mov.f32 %r254,0f40000000;
sub.f32 %r112,%r254,%r164;
.loc 1 201 7
mov.f32 %r113,0f00000000;
bra $L25;
$L28:
.loc 1 203 17
setp.le.s32 %r255,%r98,1067296287;
@ %r255 bra $L29;
.loc 1 203 36
mov.f32 %r256,0f3fbb16c3;
sub.f32 %r111,%r164,%r256;
.loc 1 201 7
mov.f32 %r113,0f00000000;
bra $L27;
$L29:
.loc 1 204 10
mov.f32 %r257,0f3f800000;
sub.f32 %r164,%r164,%r257;
.loc 1 201 7
mov.f32 %r113,0f00000000;
bra $L26;
$L25:
.loc 1 208 5
mul.f32 %r122,%r112,%r112;
.loc 1 209 34
fma.rn.f32 %r30,%r122,0f37d383a2,0f39679767;
.loc 1 209 28
fma.rn.f32 %r31,%r30,%r122,0f3a9c54a1;
.loc 1 209 22
fma.rn.f32 %r32,%r31,%r122,0f3bf2027e;
.loc 1 209 16
fma.rn.f32 %r33,%r32,%r122,0f3d89f001;
.loc 1 209 6
fma.rn.f32 %r123,%r33,%r122,0f3d9e233f;
.loc 1 210 37
fma.rn.f32 %r34,%r122,0f383c2c75,0f38e28445;
.loc 1 210 31
fma.rn.f32 %r35,%r34,%r122,0f3a05b634;
.loc 1 210 25
fma.rn.f32 %r36,%r35,%r122,0f3b3d6ec6;
.loc 1 210 19
fma.rn.f32 %r37,%r36,%r122,0f3ca89915;
.loc 1 210 13
fma.rn.f32 %r38,%r37,%r122,0f3ea51a66;
.loc 1 211 9
mul.f32 %r258,%r123,%r112;
.loc 1 211 6
fma.rn.f32 %r124,%r38,%r122,%r258;
.loc 1 212 11
fma.rn.f32 %r40,%r112,0fbf000000,%r124;
.loc 1 212 6
add.f32 %r163,%r40,%r113;
.loc 1 212 3
bra $L30;
$L27:
.loc 1 214 5
mul.f32 %r116,%r111,%r111;
.loc 1 215 5
mul.f32 %r117,%r116,%r111;
.loc 1 216 29
fma.rn.f32 %r41,%r117,0f39a57b6b,0fbab7f476;
.loc 1 216 22
fma.rn.f32 %r42,%r41,%r117,0f3bc7e707;
.loc 1 216 16
fma.rn.f32 %r43,%r42,%r117,0fbd064d47;
.loc 1 216 6
fma.rn.f32 %r118,%r43,%r117,0f3ef7b95e;
.loc 1 217 29
fma.rn.f32 %r44,%r117,0fb9a3f927,0f3a66f867;
.loc 1 217 22
fma.rn.f32 %r45,%r44,%r117,0fbb7177fe;
.loc 1 217 16
fma.rn.f32 %r46,%r45,%r117,0f3c93373d;
.loc 1 217 6
fma.rn.f32 %r119,%r46,%r117,0fbe17213c;
.loc 1 218 29
fma.rn.f32 %r47,%r117,0f39afe9f7,0fba0d3085;
.loc 1 218 22
fma.rn.f32 %r48,%r47,%r117,0f3b141699;
.loc 1 218 16
fma.rn.f32 %r49,%r48,%r117,0fbc28fcfe;
.loc 1 218 6
fma.rn.f32 %r120,%r49,%r117,0f3d845a15;
.loc 1 219 22
fma.rn.f32 %r50,%r120,%r111,%r119;
.loc 1 219 16
neg.f32 %r260,%r50;
fma.rn.f32 %r51,%r260,%r117,0f31e61c52;
.loc 1 219 6
neg.f32 %r261,%r51;
fma.rn.f32 %r121,%r116,%r118,%r261;
.loc 1 220 12
mov.f32 %r263,0f3df8cdcd;
sub.f32 %r262,%r121,%r263;
.loc 1 220 5
add.f32 %r163,%r262,%r113;
.loc 1 220 3
bra $L30;
$L26:
.loc 1 222 37
fma.rn.f32 %r53,%r164,0f3c5b3c5e,0f3e6a7578;
.loc 1 222 31
fma.rn.f32 %r54,%r53,%r164,0f3f7a4bb2;
.loc 1 222 25
fma.rn.f32 %r55,%r54,%r164,0f3fba3ae7;
.loc 1 222 19
fma.rn.f32 %r56,%r55,%r164,0f3f2200f4;
.loc 1 222 13
fma.rn.f32 %r57,%r56,%r164,0fbd9e233f;
.loc 1 222 6
mul.f32 %r114,%r57,%r164;
.loc 1 223 35
fma.rn.f32 %r58,%r164,0f3b52d5db,0f3dd572af;
.loc 1 223 29
fma.rn.f32 %r59,%r58,%r164,0f3f44efdf;
.loc 1 223 23
fma.rn.f32 %r60,%r59,%r164,0f4008392d;
.loc 1 223 17
fma.rn.f32 %r61,%r60,%r164,0f401d2ebe;
.loc 1 223 6
fma.rn.f32 %r115,%r61,%r164,0f3f800000;
.loc 1 224 27
div.rn.f32 %r264,%r114,%r115;
.loc 1 224 23
fma.rn.f32 %r63,%r164,0fbf000000,%r264;
.loc 1 224 5
add.f32 %r163,%r63,%r113;
bra $L30;
$L22:
.loc 1 227 9
setp.gt.s32 %r265,%r98,1090519039;
@ %r265 bra $L31;
.loc 1 228 8
cvt.rzi.s32.f32 %r104,%r164;
.loc 1 230 12
cvt.rn.f32.s32 %r266,%r104;
.loc 1 230 8
sub.f32 %r106,%r164,%r266;
.loc 1 231 45
fma.rn.f32 %r65,%r106,0f3805ff67,0f3af135b4;
.loc 1 231 39
fma.rn.f32 %r66,%r65,%r106,0f3cda40e4;
.loc 1 231 33
fma.rn.f32 %r67,%r66,%r106,0f3e15dce6;
.loc 1 231 27
fma.rn.f32 %r68,%r67,%r106,0f3ea6cc7a;
.loc 1 231 21
fma.rn.f32 %r69,%r68,%r106,0f3e5c245a;
.loc 1 231 15
fma.rn.f32 %r70,%r69,%r106,0fbd9e233f;
.loc 1 231 8
mul.f32 %r107,%r70,%r106;
.loc 1 232 43
fma.rn.f32 %r71,%r106,0f36f5d7bd,0f3a4beed6;
.loc 1 232 37
fma.rn.f32 %r72,%r71,%r106,0f3c98bf54;
.loc 1 232 31
fma.rn.f32 %r73,%r72,%r106,0f3e300f6e;
.loc 1 232 25
fma.rn.f32 %r74,%r73,%r106,0f3f38d0c5;
.loc 1 232 19
fma.rn.f32 %r75,%r74,%r106,0f3fb22d3b;
.loc 1 232 8
fma.rn.f32 %r108,%r75,%r106,0f3f800000;
.loc 1 233 18
div.rn.f32 %r267,%r107,%r108;
.loc 1 233 8
fma.rn.f32 %r163,%r106,0f3f000000,%r267;
.loc 1 235 6
setp.eq.u32 %r268,%r104,5;
@ %r268 bra $L39;
setp.gt.s32 %r269,%r104,5;
@ %r269 bra $L33;
setp.eq.u32 %r270,%r104,3;
@ %r270 bra $L40;
setp.eq.u32 %r271,%r104,4;
@ %r271 bra $L41;
bra $L30;
$L33:
setp.eq.u32 %r272,%r104,6;
@ %r272 bra $L42;
setp.ne.u32 %r273,%r104,7;
@ %r273 bra $L30;
.loc 1 236 21
add.f32 %r77,%r106,0f40c00000;
bra $L36;
$L42:
.loc 1 235 6
mov.f32 %r77,0f3f800000;
$L36:
.loc 1 237 21
add.f32 %r274,%r106,0f40a00000;
.loc 1 237 16
mul.f32 %r92,%r274,%r77;
bra $L32;
$L39:
.loc 1 235 6
mov.f32 %r92,0f3f800000;
$L32:
.loc 1 238 21
add.f32 %r275,%r106,0f40800000;
.loc 1 238 16
mul.f32 %r93,%r275,%r92;
bra $L35;
$L41:
.loc 1 235 6
mov.f32 %r93,0f3f800000;
$L35:
.loc 1 239 21
add.f32 %r276,%r106,0f40400000;
.loc 1 239 16
mul.f32 %r94,%r276,%r93;
bra $L34;
$L40:
.loc 1 235 6
mov.f32 %r94,0f3f800000;
$L34:
.loc 1 240 21
add.f32 %r278,%r106,0f40000000;
.loc 1 240 16
mul.f32 %r279,%r278,%r94;
.loc 1 241 12
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r279;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r280,[%value_in];
}
.loc 1 241 9
add.f32 %r163,%r163,%r280;
.loc 1 241 7
bra $L30;
$L31:
.loc 1 244 12
setp.gt.s32 %r281,%r98,1551892479;
@ %r281 bra $L37;
.loc 1 245 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r164;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r283,[%value_in];
}
.loc 1 246 8
mov.f32 %r284,0f3f800000;
div.rn.f32 %r101,%r284,%r164;
.loc 1 247 8
mul.f32 %r102,%r101,%r101;
.loc 1 248 42
fma.rn.f32 %r82,%r102,0fbad5c4e8,0f3a5b3dd2;
.loc 1 248 36
fma.rn.f32 %r83,%r82,%r102,0fba1c065c;
.loc 1 248 30
fma.rn.f32 %r84,%r83,%r102,0f3a500cfd;
.loc 1 248 24
fma.rn.f32 %r85,%r84,%r102,0fbb360b61;
.loc 1 248 18
fma.rn.f32 %r86,%r85,%r102,0f3daaaaab;
.loc 1 248 8
fma.rn.f32 %r103,%r86,%r101,0f3ed67f1d;
.loc 1 249 12
mov.f32 %r286,0f3f000000;
sub.f32 %r285,%r164,%r286;
.loc 1 249 21
sub.f32 %r287,%r283,%r284;
.loc 1 249 8
fma.rn.f32 %r163,%r285,%r287,%r103;
bra $L30;
$L37:
.loc 1 252 14
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r164;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r290,[%value_in];
}
.loc 1 252 31
mov.f32 %r292,0f3f800000;
sub.f32 %r291,%r290,%r292;
.loc 1 252 8
mul.f32 %r163,%r291,%r164;
$L30:
.loc 1 253 4
@ %r298 bra $L1;
.loc 1 253 13
sub.f32 %r163,%r156,%r163;
bra $L1;
$L43:
.loc 1 192 40
mov.f32 %r163,0f00000000;
bra $L1;
$L8:
.loc 1 192 8
add.u32 %r295,%r98,-1065353216;
and.b32 %r296,%r295,-8388609;
.loc 1 192 5
setp.eq.u32 %r297,%r296,0;
@ %r297 bra $L43;
.loc 1 155 14
mov.f32 %r156,0f00000000;
bra $L38;
$L1:
.loc 1 255 1
mov.f32 %value,%r163;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-erfcl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: erfcl
.visible .func (.param .f64 %value_out) erfcl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/erfcl.c"
// BEGIN GLOBAL FUNCTION DECL: erfc
.extern .func (.param .f64 %value_out) erfc (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: erfcl
.visible .func (.param .f64 %value_out) erfcl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),erfc,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-erfl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: erfl
.visible .func (.param .f64 %value_out) erfl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/erfl.c"
// BEGIN GLOBAL FUNCTION DECL: erf
.extern .func (.param .f64 %value_out) erf (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: erfl
.visible .func (.param .f64 %value_out) erfl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),erf,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-exp.o/    1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-exp2.o/   1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-exp2l.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp2l
.visible .func (.param .f64 %value_out) exp2l (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/exp2l.c"
// BEGIN GLOBAL FUNCTION DECL: exp2
.extern .func (.param .f64 %value_out) exp2 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: exp2l
.visible .func (.param .f64 %value_out) exp2l (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),exp2,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

/370            1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-expl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: expl
.visible .func (.param .f64 %value_out) expl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/expl.c"
// BEGIN GLOBAL FUNCTION DECL: exp
.extern .func (.param .f64 %value_out) exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: expl
.visible .func (.param .f64 %value_out) expl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),exp,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-expm1l.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: expm1l
.visible .func (.param .f64 %value_out) expm1l (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/expm1l.c"
// BEGIN GLOBAL FUNCTION DECL: expm1
.extern .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: expm1l
.visible .func (.param .f64 %value_out) expm1l (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-fabsl.o/  1612277260  0     0     100666  549       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fabsl
.visible .func (.param .f64 %value_out) fabsl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/fabsl.c"
// BEGIN GLOBAL FUNCTION DEF: fabsl
.visible .func (.param .f64 %value_out) fabsl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
abs.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-fdiml.o/  1612277260  0     0     100666  1038      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fdiml
.visible .func (.param .f64 %value_out) fdiml (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/fdiml.c"
// BEGIN GLOBAL FUNCTION DECL: fdim
.extern .func (.param .f64 %value_out) fdim (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: fdiml
.visible .func (.param .f64 %value_out) fdiml (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),fdim,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/388            1612277260  0     0     100666  285       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL VAR DEF: __fe_dfl_env
.visible .global .align 4 .u32 __fe_dfl_env[1];
// END PREAMBLE
// BEGIN GLOBAL VAR DEF: _fe_dfl_env
.visible .global .align 8 .u64 _fe_dfl_env[1] =
{generic(__fe_dfl_env) };

/408            1612277260  0     0     100666  639       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: feclearexcept
.visible .func (.param .u32 %value_out) feclearexcept (.param .u32 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/feclearexcept.c"
// BEGIN GLOBAL FUNCTION DEF: feclearexcept
.visible .func (.param .u32 %value_out) feclearexcept (.param .u32 %in_ar0)
{
.reg .u32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .pred %r24;
mov.u32 %r23,%ar0;
.loc 1 66 32
setp.ne.u32 %r24,%r23,0;
selp.u32 %value,-134,0,%r24;
.loc 1 67 1
st.param.u32 [%value_out],%value;
ret;
}

/431            1612277260  0     0     100666  525       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fegetenv
.visible .func (.param .u32 %value_out) fegetenv (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/fegetenv.c"
// BEGIN GLOBAL FUNCTION DEF: fegetenv
.visible .func (.param .u32 %value_out) fegetenv (.param .u64 %in_ar0)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 66 10
mov.u32 %value,-134;
.loc 1 67 1
st.param.u32 [%value_out],%value;
ret;
}

/449            1612277260  0     0     100666  649       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fegetexceptflag
.visible .func (.param .u32 %value_out) fegetexceptflag (.param .u64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/fenv/fegetexceptflag.c"
// BEGIN GLOBAL FUNCTION DEF: fegetexceptflag
.visible .func (.param .u32 %value_out) fegetexceptflag (.param .u64 %in_ar0, .param .u32 %in_ar1)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.loc 1 67 10
mov.u32 %value,-134;
.loc 1 68 1
st.param.u32 [%value_out],%value;
ret;
}

/474            1612277260  0     0     100666  444       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fegetround
.visible .func (.param .u32 %value_out) fegetround;
.file 1 "../../../../../newlib/libm/fenv/fegetround.c"
// BEGIN GLOBAL FUNCTION DEF: fegetround
.visible .func (.param .u32 %value_out) fegetround
{
.reg .u32 %value;
.loc 1 65 10
mov.u32 %value,-134;
.loc 1 66 1
st.param.u32 [%value_out],%value;
ret;
}
/494            1612277260  0     0     100666  545       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: feholdexcept
.visible .func (.param .u32 %value_out) feholdexcept (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/feholdexcept.c"
// BEGIN GLOBAL FUNCTION DEF: feholdexcept
.visible .func (.param .u32 %value_out) feholdexcept (.param .u64 %in_ar0)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 69 10
mov.u32 %value,-134;
.loc 1 70 1
st.param.u32 [%value_out],%value;
ret;
}

/516            1612277260  0     0     100666  639       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: feraiseexcept
.visible .func (.param .u32 %value_out) feraiseexcept (.param .u32 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/feraiseexcept.c"
// BEGIN GLOBAL FUNCTION DEF: feraiseexcept
.visible .func (.param .u32 %value_out) feraiseexcept (.param .u32 %in_ar0)
{
.reg .u32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .pred %r24;
mov.u32 %r23,%ar0;
.loc 1 66 32
setp.ne.u32 %r24,%r23,0;
selp.u32 %value,-134,0,%r24;
.loc 1 67 1
st.param.u32 [%value_out],%value;
ret;
}

/539            1612277260  0     0     100666  525       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fesetenv
.visible .func (.param .u32 %value_out) fesetenv (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/fesetenv.c"
// BEGIN GLOBAL FUNCTION DEF: fesetenv
.visible .func (.param .u32 %value_out) fesetenv (.param .u64 %in_ar0)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 71 10
mov.u32 %value,-134;
.loc 1 72 1
st.param.u32 [%value_out],%value;
ret;
}

/557            1612277260  0     0     100666  649       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fesetexceptflag
.visible .func (.param .u32 %value_out) fesetexceptflag (.param .u64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/fenv/fesetexceptflag.c"
// BEGIN GLOBAL FUNCTION DEF: fesetexceptflag
.visible .func (.param .u32 %value_out) fesetexceptflag (.param .u64 %in_ar0, .param .u32 %in_ar1)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.loc 1 72 10
mov.u32 %value,-134;
.loc 1 73 1
st.param.u32 [%value_out],%value;
ret;
}

/582            1612277260  0     0     100666  535       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fesetround
.visible .func (.param .u32 %value_out) fesetround (.param .u32 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/fesetround.c"
// BEGIN GLOBAL FUNCTION DEF: fesetround
.visible .func (.param .u32 %value_out) fesetround (.param .u32 %in_ar0)
{
.reg .u32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.loc 1 66 10
mov.u32 %value,-134;
.loc 1 67 1
st.param.u32 [%value_out],%value;
ret;
}

/602            1612277260  0     0     100666  542       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fetestexcept
.visible .func (.param .u32 %value_out) fetestexcept (.param .u32 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/fetestexcept.c"
// BEGIN GLOBAL FUNCTION DEF: fetestexcept
.visible .func (.param .u32 %value_out) fetestexcept (.param .u32 %in_ar0)
{
.reg .u32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.loc 1 67 10
mov.u32 %value,0;
.loc 1 68 1
st.param.u32 [%value_out],%value;
ret;
}
/624            1612277260  0     0     100666  540       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: feupdateenv
.visible .func (.param .u32 %value_out) feupdateenv (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/fenv/feupdateenv.c"
// BEGIN GLOBAL FUNCTION DEF: feupdateenv
.visible .func (.param .u32 %value_out) feupdateenv (.param .u64 %in_ar0)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 71 10
mov.u32 %value,-134;
.loc 1 72 1
st.param.u32 [%value_out],%value;
ret;
}
lib_a-floorl.o/ 1612277260  0     0     100666  562       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: floorl
.visible .func (.param .f64 %value_out) floorl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/floorl.c"
// BEGIN GLOBAL FUNCTION DEF: floorl
.visible .func (.param .f64 %value_out) floorl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
cvt.rmi.f64.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}
lib_a-fmal.o/   1612277260  0     0     100666  809       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmal
.visible .func (.param .f64 %value_out) fmal (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/common/fmal.c"
// BEGIN GLOBAL FUNCTION DEF: fmal
.visible .func (.param .f64 %value_out) fmal (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
mov.f64 %r25,%ar2;
.loc 1 39 10
fma.rn.f64 %value,%r23,%r24,%r25;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-fmaxl.o/  1612277260  0     0     100666  1038      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmaxl
.visible .func (.param .f64 %value_out) fmaxl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/fmaxl.c"
// BEGIN GLOBAL FUNCTION DECL: fmax
.extern .func (.param .f64 %value_out) fmax (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: fmaxl
.visible .func (.param .f64 %value_out) fmaxl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),fmax,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-fminl.o/  1612277260  0     0     100666  1038      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fminl
.visible .func (.param .f64 %value_out) fminl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/fminl.c"
// BEGIN GLOBAL FUNCTION DECL: fmin
.extern .func (.param .f64 %value_out) fmin (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: fminl
.visible .func (.param .f64 %value_out) fminl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),fmin,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-fmodl.o/  1612277260  0     0     100666  1038      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmodl
.visible .func (.param .f64 %value_out) fmodl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/fmodl.c"
// BEGIN GLOBAL FUNCTION DECL: fmod
.extern .func (.param .f64 %value_out) fmod (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: fmodl
.visible .func (.param .f64 %value_out) fmodl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),fmod,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-frexpl.o/ 1612277260  0     0     100666  1046      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: frexpl
.visible .func (.param .f64 %value_out) frexpl (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/frexpl.c"
// BEGIN GLOBAL FUNCTION DECL: frexp
.extern .func (.param .f64 %value_out) frexp (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: frexpl
.visible .func (.param .f64 %value_out) frexpl (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r24;
call (%value_in),frexp,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-hypotl.o/ 1612277260  0     0     100666  1046      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: hypotl
.visible .func (.param .f64 %value_out) hypotl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/hypotl.c"
// BEGIN GLOBAL FUNCTION DECL: hypot
.extern .func (.param .f64 %value_out) hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: hypotl
.visible .func (.param .f64 %value_out) hypotl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 41 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),hypot,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 61 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-ilogbl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ilogbl
.visible .func (.param .u32 %value_out) ilogbl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/ilogbl.c"
// BEGIN GLOBAL FUNCTION DECL: ilogb
.extern .func (.param .u32 %value_out) ilogb (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: ilogbl
.visible .func (.param .u32 %value_out) ilogbl (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .u32 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),ilogb,(%out_arg1);
ld.param.u32 %r25,[%value_in];
}
.loc 1 40 1
mov.u32 %value,%r25;
st.param.u32 [%value_out],%value;
ret;
}

lib_a-k_cos.o/  1612277259  0     0     100666  3525      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_cos
.visible .func (.param .f64 %value_out) __kernel_cos (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/k_cos.c"
// BEGIN GLOBAL FUNCTION DEF: __kernel_cos
.visible .func (.param .f64 %value_out) __kernel_cos (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r34;
.reg .f64 %r36;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .u64 %r57;
.reg .u64 %r58;
.reg .pred %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .pred %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .pred %r67;
.reg .u32 %r68;
.reg .u64 %r69;
.reg .u64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .f64 %r78;
mov.f64 %r55,%ar0;
mov.f64 %r56,%ar1;
.loc 1 75 2
mov.b64 %r57,%r55;
shr.u64 %r58,%r57,32;
cvt.u32.u64 %r37,%r58;
.loc 1 76 5
and.b32 %r38,%r37,2147483647;
.loc 1 77 4
setp.gt.s32 %r59,%r38,1044381695;
@ %r59 bra $L2;
.loc 1 78 10
cvt.rzi.s32.f64 %r60,%r55;
.loc 1 78 8
setp.eq.u32 %r61,%r60,0;
@ ! %r61 bra $L10;
bra $L8;
$L2:
.loc 1 80 5
mul.f64 %r41,%r55,%r55;
.loc 1 81 36
fma.rn.f64 %r23,%r41,0dbda8fae9be8838d4,0d3e21ee9ebdb4b1c4;
.loc 1 81 30
fma.rn.f64 %r24,%r23,%r41,0dbe927e4f809c52ad;
.loc 1 81 24
fma.rn.f64 %r25,%r24,%r41,0d3efa01a019cb1590;
.loc 1 81 18
fma.rn.f64 %r26,%r25,%r41,0dbf56c16c16c15177;
.loc 1 81 12
fma.rn.f64 %r27,%r26,%r41,0d3fa555555555554c;
.loc 1 81 5
mul.f64 %r47,%r27,%r41;
.loc 1 82 4
setp.gt.s32 %r62,%r38,1070805810;
@ %r62 bra $L5;
$L7:
.loc 1 83 36
mul.f64 %r63,%r55,%r56;
.loc 1 83 33
neg.f64 %r64,%r63;
fma.rn.f64 %r29,%r41,%r47,%r64;
.loc 1 83 26
neg.f64 %r65,%r29;
fma.rn.f64 %r30,%r41,0d3fe0000000000000,%r65;
.loc 1 83 17
mov.f64 %r66,0d3ff0000000000000;
sub.f64 %r54,%r66,%r30;
bra $L1;
$L5:
.loc 1 85 8
setp.gt.s32 %r67,%r38,1072234496;
@ %r67 bra $L9;
.loc 1 88 10
add.u32 %r68,%r38,-2097152;
cvt.u64.u32 %r69,%r68;
shl.b64 %r73,%r69,32;
mov.b64 %r36,%r73;
.loc 1 91 9
mov.f64 %r74,0d3ff0000000000000;
sub.f64 %r52,%r74,%r36;
bra $L6;
$L9:
mov.f64 %r52,0d3fe7000000000000;
.loc 1 86 6
mov.f64 %r36,0d3fd2000000000000;
$L6:
.loc 1 90 9
neg.f64 %r75,%r36;
fma.rn.f64 %r40,%r41,0d3fe0000000000000,%r75;
.loc 1 92 29
mul.f64 %r76,%r55,%r56;
.loc 1 92 27
neg.f64 %r77,%r76;
fma.rn.f64 %r34,%r41,%r47,%r77;
.loc 1 92 21
sub.f64 %r78,%r40,%r34;
.loc 1 92 15
sub.f64 %r54,%r52,%r78;
bra $L1;
$L8:
.loc 1 78 29
mov.f64 %r54,0d3ff0000000000000;
bra $L1;
$L10:
.loc 1 80 5
mul.f64 %r41,%r55,%r55;
.loc 1 81 36
fma.rn.f64 %r42,%r41,0dbda8fae9be8838d4,0d3e21ee9ebdb4b1c4;
.loc 1 81 30
fma.rn.f64 %r43,%r41,%r42,0dbe927e4f809c52ad;
.loc 1 81 24
fma.rn.f64 %r44,%r41,%r43,0d3efa01a019cb1590;
.loc 1 81 18
fma.rn.f64 %r45,%r41,%r44,0dbf56c16c16c15177;
.loc 1 81 12
fma.rn.f64 %r46,%r41,%r45,0d3fa555555555554c;
.loc 1 81 5
mul.f64 %r47,%r41,%r46;
bra $L7;
$L1:
.loc 1 94 1
mov.f64 %value,%r54;
st.param.f64 [%value_out],%value;
ret;
}

/645            1612277259  0     0     100666  26927     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_rem_pio2
.visible .func (.param .u32 %value_out) __kernel_rem_pio2 (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5);
.file 1 "../../../../../newlib/libm/math/k_rem_pio2.c"
// BEGIN GLOBAL FUNCTION DECL: scalbn
.extern .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: floor
.extern .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
// BEGIN VAR DEF: init_jk
.const .align 4 .u32 init_jk[4] =
{2,3,4,6 };
// BEGIN VAR DEF: PIo2
.const .align 8 .u64 PIo2[8] =
{4609753056584663040,4500296887714185216,4393339057296375808,4285399695318056960,4174867106174599168,4069606033725587456,3955147982449410048,3848874662444400640 };
// BEGIN GLOBAL FUNCTION DEF: __kernel_rem_pio2
.visible .func (.param .u32 %value_out) __kernel_rem_pio2 (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .u32 %ar3;
ld.param.u32 %ar3,[%in_ar3];
.reg .u32 %ar4;
ld.param.u32 %ar4,[%in_ar4];
.reg .u64 %ar5;
ld.param.u64 %ar5,[%in_ar5];
.local .align 16 .b8 %frame_ar[560];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r38;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r52;
.reg .u32 %r58;
.reg .u32 %r61;
.reg .f64 %r78;
.reg .u32 %r82;
.reg .f64 %r83;
.reg .u64 %r89;
.reg .f64 %r92;
.reg .f64 %r99;
.reg .f64 %r103;
.reg .u64 %r109;
.reg .u32 %r113;
.reg .u32 %r116;
.reg .u64 %r117;
.reg .u32 %r118;
.reg .u32 %r119;
.reg .u64 %r120;
.reg .f64 %r125;
.reg .u64 %r126;
.reg .u64 %r127;
.reg .f64 %r128;
.reg .f64 %r129;
.reg .u32 %r134;
.reg .u32 %r137;
.reg .u32 %r138;
.reg .u32 %r140;
.reg .f64 %r141;
.reg .u32 %r142;
.reg .u32 %r144;
.reg .u32 %r145;
.reg .f64 %r146;
.reg .u32 %r147;
.reg .u64 %r150;
.reg .u32 %r151;
.reg .u32 %r152;
.reg .f64 %r153;
.reg .f64 %r154;
.reg .f64 %r155;
.reg .u64 %r157;
.reg .u32 %r159;
.reg .f64 %r160;
.reg .f64 %r161;
.reg .f64 %r162;
.reg .u32 %r163;
.reg .u32 %r164;
.reg .f64 %r165;
.reg .f64 %r166;
.reg .f64 %r167;
.reg .f64 %r168;
.reg .u32 %r169;
.reg .u64 %r170;
.reg .u64 %r173;
.reg .u64 %r174;
.reg .u32 %r175;
.reg .u64 %r181;
.reg .u32 %r185;
.reg .u32 %r192;
.reg .u64 %r193;
.reg .f64 %r194;
.reg .f64 %r195;
.reg .f64 %r196;
.reg .u64 %r198;
.reg .u64 %r200;
.reg .f64 %r201;
.reg .u32 %r205;
.reg .u64 %r206;
.reg .u64 %r208;
.reg .u64 %r211;
.reg .u64 %r213;
.reg .u64 %r215;
.reg .u64 %r224;
.reg .u64 %r225;
.reg .u64 %r231;
.reg .u64 %r232;
.reg .u64 %r239;
.reg .u64 %r241;
.reg .u64 %r242;
.reg .u64 %r247;
.reg .u64 %r249;
.reg .u64 %r261;
.reg .u64 %r262;
.reg .u64 %r263;
.reg .u64 %r269;
.reg .u64 %r271;
.reg .u64 %r281;
.reg .u64 %r282;
.reg .u64 %r294;
.reg .u64 %r296;
.reg .u64 %r298;
.reg .u64 %r299;
.reg .u64 %r310;
.reg .u64 %r311;
.reg .u64 %r312;
.reg .u64 %r322;
.reg .u64 %r323;
.reg .u32 %r324;
.reg .u32 %r328;
.reg .u64 %r329;
.reg .u64 %r330;
.reg .u32 %r338;
.reg .u64 %r341;
.reg .u64 %r342;
.reg .u32 %r343;
.reg .u32 %r344;
.reg .u32 %r345;
.reg .u64 %r346;
.reg .u64 %r347;
.reg .u64 %r348;
.reg .u64 %r349;
.reg .u64 %r350;
.reg .pred %r351;
.reg .u32 %r352;
.reg .u32 %r353;
.reg .u32 %r355;
.reg .u32 %r356;
.reg .pred %r358;
.reg .u64 %r361;
.reg .u64 %r362;
.reg .u64 %r363;
.reg .u64 %r364;
.reg .u64 %r365;
.reg .u32 %r366;
.reg .pred %r367;
.reg .u32 %r368;
.reg .pred %r369;
.reg .u64 %r371;
.reg .u64 %r372;
.reg .f64 %r373;
.reg .f64 %r374;
.reg .pred %r375;
.reg .pred %r376;
.reg .u64 %r379;
.reg .u64 %r380;
.reg .u64 %r381;
.reg .u64 %r383;
.reg .u64 %r384;
.reg .u64 %r386;
.reg .u64 %r387;
.reg .u64 %r391;
.reg .u32 %r392;
.reg .u64 %r393;
.reg .u64 %r394;
.reg .f64 %r396;
.reg .u32 %r397;
.reg .u32 %r399;
.reg .f64 %r400;
.reg .pred %r401;
.reg .f64 %r404;
.reg .f64 %r406;
.reg .f64 %r407;
.reg .f64 %r409;
.reg .u64 %r411;
.reg .u64 %r412;
.reg .u64 %r413;
.reg .u64 %r414;
.reg .u32 %r415;
.reg .u32 %r416;
.reg .u32 %r421;
.reg .u32 %r422;
.reg .u32 %r424;
.reg .u64 %r425;
.reg .u64 %r426;
.reg .u64 %r427;
.reg .u32 %r429;
.reg .pred %r430;
.reg .pred %r431;
.reg .pred %r433;
.reg .pred %r434;
.reg .pred %r436;
.reg .pred %r437;
.reg .u64 %r438;
.reg .u64 %r439;
.reg .u64 %r440;
.reg .u32 %r442;
.reg .u32 %r443;
.reg .pred %r444;
.reg .u64 %r445;
.reg .u64 %r446;
.reg .u64 %r447;
.reg .u32 %r451;
.reg .u32 %r452;
.reg .u64 %r453;
.reg .u64 %r454;
.reg .u64 %r455;
.reg .u32 %r458;
.reg .u32 %r459;
.reg .pred %r460;
.reg .u64 %r464;
.reg .u64 %r465;
.reg .u64 %r466;
.reg .u64 %r467;
.reg .u32 %r472;
.reg .u32 %r473;
.reg .u64 %r474;
.reg .u64 %r475;
.reg .u64 %r476;
.reg .u64 %r477;
.reg .u32 %r482;
.reg .u32 %r483;
.reg .pred %r484;
.reg .f64 %r485;
.reg .pred %r486;
.reg .f64 %r489;
.reg .pred %r490;
.reg .pred %r491;
.reg .u64 %r494;
.reg .u64 %r497;
.reg .u32 %r498;
.reg .u32 %r499;
.reg .u64 %r500;
.reg .u64 %r501;
.reg .u32 %r502;
.reg .pred %r503;
.reg .pred %r504;
.reg .u32 %r510;
.reg .pred %r511;
.reg .u32 %r512;
.reg .pred %r513;
.reg .u64 %r514;
.reg .u64 %r515;
.reg .u64 %r516;
.reg .u32 %r517;
.reg .u64 %r519;
.reg .u64 %r521;
.reg .u64 %r522;
.reg .u64 %r523;
.reg .u32 %r524;
.reg .f64 %r527;
.reg .pred %r528;
.reg .u64 %r529;
.reg .u64 %r530;
.reg .u32 %r531;
.reg .pred %r532;
.reg .u64 %r533;
.reg .u64 %r534;
.reg .u64 %r535;
.reg .u32 %r537;
.reg .pred %r538;
.reg .u64 %r542;
.reg .u32 %r543;
.reg .pred %r544;
.reg .u32 %r547;
.reg .f64 %r548;
.reg .pred %r549;
.reg .f64 %r550;
.reg .f64 %r551;
.reg .u64 %r554;
.reg .u64 %r555;
.reg .u32 %r557;
.reg .u64 %r558;
.reg .u64 %r559;
.reg .u64 %r560;
.reg .u64 %r563;
.reg .u64 %r564;
.reg .u32 %r566;
.reg .f64 %r567;
.reg .f64 %r569;
.reg .pred %r570;
.reg .f64 %r576;
.reg .u32 %r577;
.reg .f64 %r578;
.reg .pred %r579;
.reg .f64 %r580;
.reg .pred %r581;
.reg .pred %r582;
.reg .pred %r583;
.reg .pred %r585;
.reg .pred %r586;
.reg .f64 %r591;
.reg .pred %r592;
.reg .pred %r593;
.reg .f64 %r594;
.reg .pred %r595;
.reg .f64 %r597;
.reg .f64 %r598;
.reg .pred %r599;
.reg .f64 %r601;
.reg .pred %r602;
.reg .u64 %r605;
.reg .u64 %r606;
.reg .u64 %r610;
.reg .u64 %r613;
.reg .u32 %r614;
.reg .u64 %r615;
.reg .u64 %r616;
.reg .f64 %r617;
.reg .f64 %r618;
.reg .pred %r619;
.reg .u64 %r621;
.reg .u64 %r622;
.reg .u64 %r626;
.reg .u32 %r627;
.reg .u64 %r628;
.reg .u64 %r630;
.reg .f64 %r631;
.reg .f64 %r632;
.reg .pred %r633;
.reg .u64 %r635;
.reg .u64 %r636;
.reg .f64 %r637;
.reg .pred %r638;
.reg .pred %r639;
.reg .f64 %r640;
.reg .f64 %r641;
.reg .f64 %r642;
.reg .u32 %r643;
.reg .f64 %r644;
.reg .pred %r645;
.reg .pred %r646;
.reg .pred %r647;
.reg .pred %r648;
.reg .pred %r649;
.reg .pred %r650;
.reg .pred %r651;
.reg .pred %r652;
.reg .pred %r653;
.reg .pred %r654;
.reg .f64 %r655;
.reg .u64 %r663;
.reg .u64 %r664;
.reg .u64 %r665;
.reg .u64 %r666;
.reg .u32 %r667;
.reg .pred %r668;
.reg .u64 %r669;
.reg .pred %r670;
.reg .u64 %r671;
.reg .pred %r672;
.reg .pred %r673;
.reg .pred %r675;
.reg .f64 %r676;
.reg .u64 %r677;
.reg .u64 %r678;
.reg .pred %r679;
.reg .pred %r680;
.reg .pred %r681;
.reg .u64 %r682;
.reg .u32 %r683;
.reg .u64 %r684;
.reg .u64 %r685;
.reg .u64 %r686;
.reg .u64 %r687;
.reg .u64 %r688;
.reg .pred %r689;
.reg .u64 %r690;
.reg .f64 %r691;
mov.u64 %r341,%ar0;
mov.u64 %r342,%ar1;
mov.u32 %r343,%ar2;
mov.u32 %r344,%ar3;
mov.u32 %r345,%ar4;
mov.u64 %r346,%ar5;
.loc 1 176 5
cvta.const.u64 %r347,init_jk;
cvt.s64.s32 %r348,%r345;
shl.b64 %r349,%r348,2;
add.u64 %r350,%r347,%r349;
ld.u32 %r134,[%r350];
.loc 1 180 5
add.u32 %r667,%r344,-1;
.loc 1 181 20
setp.lt.s32 %r351,%r343,-20;
@ %r351 bra $L76;
.loc 1 181 10
add.u32 %r352,%r343,-3;
.loc 1 181 5
div.s32 %r118,%r352,24;
.loc 1 182 17
add.u32 %r353,%r118,1;
.loc 1 182 13
shl.b32 %r355,%r353,2;
sub.u32 %r356,%r353,%r355;
shl.b32 %r185,%r356,3;
bra $L2;
$L76:
mov.u32 %r185,-24;
.loc 1 181 29
mov.u32 %r118,0;
$L2:
.loc 1 182 5
add.u32 %r152,%r343,%r185;
.loc 1 185 4
sub.u32 %r169,%r118,%r667;
.loc 1 185 15
add.u32 %r137,%r134,%r667;
.loc 1 186 2
setp.ge.s32 %r358,%r137,0;
@ %r358 bra $L3;
$L8:
.loc 1 189 2
setp.lt.s32 %r673,%r134,0;
@ %r673 bra $L4;
mov.u64 %r323,%frame;
mov.u32 %r324,%r667;
add.u32 %r328,%r134,%r344;
cvt.u64.u32 %r361,%r667;
shl.b64 %r362,%r361,3;
add.u64 %r363,%r341,8;
add.u64 %r322,%r362,%r363;
setp.ge.s32 %r672,%r667,0;
add.u64 %r690,%frame,320;
bra $L5;
$L3:
add.u64 %r329,%frame,320;
cvt.s64.s32 %r364,%r169;
shl.b64 %r365,%r364,2;
add.u64 %r330,%r346,%r365;
add.u32 %r366,%r137,1;
add.u32 %r338,%r366,%r169;
.loc 1 186 43
mov.f64 %r691,0d0000000000000000;
$L7:
setp.lt.s32 %r367,%r169,0;
@ %r367 bra $L77;
ld.u32 %r368,[%r330];
cvt.rn.f64.s32 %r129,%r368;
bra $L6;
$L77:
mov.f64 %r129,%r691;
$L6:
.loc 1 186 29
st.f64 [%r329],%r129;
.loc 1 186 20
add.u32 %r169,%r169,1;
.loc 1 186 2
add.u64 %r329,%r329,8;
add.u64 %r330,%r330,4;
setp.ne.u32 %r369,%r169,%r338;
@ %r369 bra $L7;
bra $L8;
$L10:
cvt.s64.s32 %r371,%r324;
shl.b64 %r372,%r371,3;
add.u64 %r312,%r690,%r372;
.loc 1 190 47
mov.u64 %r311,%r341;
.loc 1 190 16
mov.f64 %r168,0d0000000000000000;
$L9:
.loc 1 190 35
ld.f64 %r373,[%r311];
ld.f64 %r374,[%r312];
fma.rn.f64 %r168,%r373,%r374,%r168;
.loc 1 190 6
add.u64 %r311,%r311,8;
add.u64 %r312,%r312,-8;
setp.ne.u64 %r375,%r311,%r322;
@ %r375 bra $L9;
$L11:
.loc 1 191 11
st.f64 [%r323],%r168;
.loc 1 189 2
add.u64 %r323,%r323,8;
add.u32 %r324,%r324,1;
setp.eq.u32 %r376,%r324,%r328;
@ %r376 bra $L4;
$L5:
.loc 1 190 6
@ %r672 bra $L10;
.loc 1 190 16
mov.f64 %r168,0d0000000000000000;
bra $L11;
$L4:
add.u64 %r663,%frame,480;
cvt.s64.s32 %r379,%r134;
shl.b64 %r380,%r379,2;
add.u64 %r381,%r380,-8;
add.u64 %r263,%r663,%r381;
cvt.u64.u32 %r383,%r667;
shl.b64 %r384,%r383,3;
add.u64 %r239,%r341,%r384;
.loc 1 176 5
mov.u32 %r116,%r134;
setp.le.s32 %r675,%r152,0;
add.u64 %r678,%frame,484;
.loc 1 228 10
setp.eq.u32 %r679,%r152,1;
setp.eq.u32 %r680,%r152,2;
.loc 1 214 9
setp.ne.u32 %r681,%r152,0;
add.u64 %r682,%frame,472;
.loc 1 246 16
add.u32 %r683,%r134,-1;
.loc 1 246 13
cvt.s64.s32 %r684,%r683;
shl.b64 %r685,%r684,2;
add.u64 %r686,%frame,%r685;
add.u64 %r687,%r686,480;
add.u64 %r688,%frame,320;
setp.lt.s32 %r689,%r667,0;
$L12:
.loc 1 197 16
cvt.s64.s32 %r665,%r116;
shl.b64 %r386,%r665,3;
add.u64 %r387,%frame,%r386;
ld.f64 %r167,[%r387];
.loc 1 197 2
setp.le.s32 %r670,%r116,0;
@ %r670 bra $L13;
mov.u64 %r298,%r663;
add.u64 %r391,%r386,-8;
add.u64 %r299,%frame,%r391;
add.u32 %r392,%r116,-1;
cvt.u64.u32 %r393,%r392;
shl.b64 %r394,%r393,2;
add.u64 %r310,%r394,%r678;
$L14:
.loc 1 198 42
mul.f64 %r396,%r167,0d3e70000000000000;
.loc 1 198 24
cvt.rzi.s32.f64 %r397,%r396;
.loc 1 198 12
cvt.rn.f64.s32 %r166,%r397;
.loc 1 199 28
fma.rn.f64 %r38,%r166,0dc170000000000000,%r167;
.loc 1 199 15
cvt.rzi.s32.f64 %r399,%r38;
st.u32 [%r298],%r399;
.loc 1 200 12
ld.f64 %r400,[%r299];
add.f64 %r167,%r166,%r400;
.loc 1 197 2
add.u64 %r298,%r298,4;
add.u64 %r299,%r299,-8;
setp.ne.u64 %r401,%r298,%r310;
@ %r401 bra $L14;
$L13:
.loc 1 204 7
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r167;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r152;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r404,[%value_in];
}
.loc 1 205 11
mul.f64 %r406,%r404,0d3fc0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r406;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r407,[%value_in];
}
.loc 1 205 4
fma.rn.f64 %r141,%r407,0dc020000000000000,%r404;
.loc 1 206 5
cvt.rzi.s32.f64 %r119,%r141;
.loc 1 207 7
cvt.rn.f64.s32 %r409,%r119;
.loc 1 207 4
sub.f64 %r125,%r141,%r409;
.loc 1 209 4
@ %r675 bra $L15;
.loc 1 210 17
add.u32 %r45,%r116,-1;
.loc 1 210 14
cvt.s64.s32 %r411,%r45;
shl.b64 %r412,%r411,2;
add.u64 %r413,%frame,%r412;
add.u64 %r414,%r413,480;
ld.u32 %r46,[%r414];
.loc 1 210 25
mov.u32 %r415,24;
sub.u32 %r47,%r415,%r152;
.loc 1 210 9
shr.s32 %r142,%r46,%r47;
.loc 1 210 34
add.u32 %r119,%r119,%r142;
.loc 1 211 19
shl.b32 %r416,%r142,%r47;
.loc 1 211 15
sub.u32 %r52,%r46,%r416;
st.u32 [%r414],%r52;
.loc 1 212 24
mov.u32 %r422,23;
sub.u32 %r421,%r422,%r152;
.loc 1 212 9
shr.s32 %r113,%r52,%r421;
bra $L16;
$L15:
.loc 1 214 9
@ %r681 bra $L17;
.loc 1 214 27
add.u32 %r424,%r116,-1;
.loc 1 214 24
cvt.s64.s32 %r425,%r424;
shl.b64 %r426,%r425,2;
add.u64 %r427,%frame,%r426;
.loc 1 214 20
ld.u32 %r429,[%r427+480];
shr.s32 %r113,%r429,23;
bra $L16;
$L17:
.loc 1 215 9
setp.ge.f64 %r430,%r125,0d3fe0000000000000;
@ %r430 bra $L18;
.loc 1 208 5
mov.u32 %r113,0;
bra $L19;
$L16:
.loc 1 217 4
setp.le.s32 %r431,%r113,0;
@ %r431 bra $L19;
.loc 1 218 8
add.u32 %r119,%r119,1;
.loc 1 219 6
@ ! %r670 bra $L75;
bra $L78;
$L87:
.loc 1 215 20
mov.u32 %r113,2;
$L75:
.loc 1 220 5
ld.u32 %r144,[%frame+480];
.loc 1 222 9
setp.ne.u32 %r433,%r144,0;
@ %r433 bra $L79;
.loc 1 219 6
setp.eq.u32 %r434,%r116,1;
@ %r434 bra $L20;
add.u64 %r296,%frame,484;
.loc 1 219 21
mov.u32 %r140,1;
bra $L22;
$L23:
.loc 1 219 6
add.u64 %r296,%r296,4;
setp.eq.u32 %r436,%r116,%r192;
@ %r436 bra $L20;
mov.u32 %r140,%r192;
$L22:
.loc 1 220 5
ld.u32 %r144,[%r296];
.loc 1 219 21
add.u32 %r192,%r140,1;
.loc 1 222 9
setp.eq.u32 %r437,%r144,0;
@ %r437 bra $L23;
bra $L21;
$L79:
mov.u32 %r192,1;
mov.u32 %r140,0;
$L21:
.loc 1 223 21
cvt.s64.s32 %r438,%r140;
shl.b64 %r439,%r438,2;
add.u64 %r440,%frame,%r439;
.loc 1 223 32
mov.u32 %r443,16777216;
sub.u32 %r442,%r443,%r144;
.loc 1 223 21
st.u32 [%r440+480],%r442;
.loc 1 219 6
setp.le.s32 %r444,%r116,%r192;
@ %r444 bra $L80;
.loc 1 220 5
cvt.s64.s32 %r445,%r192;
shl.b64 %r446,%r445,2;
add.u64 %r447,%frame,%r446;
ld.u32 %r138,[%r447+480];
add.u64 %r282,%r663,%r446;
add.u32 %r451,%r116,-1;
sub.u32 %r452,%r451,%r192;
cvt.u64.u32 %r453,%r452;
add.u64 %r454,%r453,%r445;
shl.b64 %r455,%r454,2;
add.u64 %r294,%r455,%r678;
.loc 1 225 28
mov.u32 %r459,16777215;
$L24:
sub.u32 %r458,%r459,%r138;
.loc 1 225 17
st.u32 [%r282],%r458;
.loc 1 219 6
add.u64 %r282,%r282,4;
setp.eq.u64 %r460,%r282,%r294;
@ %r460 bra $L81;
.loc 1 220 5
ld.u32 %r138,[%r282];
bra $L24;
$L78:
.loc 1 218 20
mov.u32 %r144,0;
bra $L20;
$L80:
.loc 1 223 10
mov.u32 %r144,1;
bra $L20;
$L81:
mov.u32 %r144,1;
$L20:
.loc 1 227 8
@ %r675 bra $L25;
.loc 1 228 10
@ %r679 bra $L26;
@ %r680 bra $L27;
bra $L25;
$L26:
.loc 1 230 19
add.u32 %r58,%r116,-1;
cvt.s64.s32 %r464,%r58;
shl.b64 %r465,%r464,2;
add.u64 %r466,%frame,%r465;
add.u64 %r467,%r466,480;
ld.u32 %r473,[%r467];
and.b32 %r472,%r473,8388607;
st.u32 [%r467],%r472;
.loc 1 230 10
bra $L25;
$L27:
.loc 1 232 19
add.u32 %r61,%r116,-1;
cvt.s64.s32 %r474,%r61;
shl.b64 %r475,%r474,2;
add.u64 %r476,%frame,%r475;
add.u64 %r477,%r476,480;
ld.u32 %r483,[%r477];
and.b32 %r482,%r483,4194303;
st.u32 [%r477],%r482;
$L25:
.loc 1 235 8
setp.ne.u32 %r484,%r113,2;
@ %r484 bra $L19;
.loc 1 236 5
mov.f64 %r485,0d3ff0000000000000;
sub.f64 %r125,%r485,%r125;
.loc 1 237 5
setp.eq.u32 %r486,%r144,0;
@ %r486 bra $L19;
.loc 1 237 21
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r485;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r152;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r489,[%value_in];
}
.loc 1 237 18
sub.f64 %r125,%r125,%r489;
$L19:
.loc 1 242 4
setp.neu.f64 %r490,%r125,0d0000000000000000;
@ %r490 bra $L28;
.loc 1 244 12
add.u32 %r151,%r116,-1;
.loc 1 244 6
setp.gt.s32 %r491,%r134,%r151;
@ %r491 bra $L29;
shl.b64 %r271,%r665,2;
add.u64 %r494,%r271,-4;
add.u64 %r269,%r663,%r494;
add.u64 %r497,%r682,%r271;
not.b32 %r498,%r134;
add.u32 %r499,%r498,%r116;
cvt.u64.u32 %r500,%r499;
shl.b64 %r501,%r500,2;
sub.u64 %r281,%r497,%r501;
.loc 1 243 8
mov.u32 %r48,0;
$L30:
.loc 1 244 31
ld.u32 %r502,[%r269];
or.b32 %r48,%r48,%r502;
.loc 1 244 6
add.u64 %r269,%r269,-4;
setp.ne.u64 %r503,%r269,%r281;
@ %r503 bra $L30;
.loc 1 245 8
setp.ne.u32 %r504,%r48,0;
@ %r504 bra $L31;
$L29:
.loc 1 246 3
ld.u32 %r510,[%r687];
setp.ne.u32 %r511,%r510,0;
@ %r511 bra $L32;
mov.u64 %r262,%r263;
.loc 1 246 8
mov.u32 %r147,1;
$L33:
.loc 1 246 24
add.u32 %r147,%r147,1;
.loc 1 246 3
add.u64 %r262,%r262,-4;
ld.u32 %r512,[%r262+4];
setp.eq.u32 %r513,%r512,0;
@ %r513 bra $L33;
bra $L115;
$L32:
.loc 1 248 8
add.u32 %r145,%r116,1;
.loc 1 248 19
mov.u32 %r175,%r145;
bra $L35;
$L115:
.loc 1 248 8
add.u32 %r145,%r116,1;
.loc 1 248 19
add.u32 %r175,%r116,%r147;
$L35:
cvt.s64.s32 %r241,%r145;
cvt.s64.s32 %r514,%r118;
add.u64 %r515,%r514,%r241;
shl.b64 %r516,%r515,2;
add.u64 %r242,%r346,%r516;
add.u32 %r517,%r667,%r145;
cvt.s64.s32 %r249,%r517;
shl.b64 %r519,%r249,3;
add.u64 %r247,%r688,%r519;
cvt.s64.s32 %r521,%r344;
add.u64 %r522,%r665,%r521;
sub.u64 %r523,%r522,%r249;
shl.b64 %r261,%r523,3;
add.u64 %r677,%r261,-8;
$L38:
.loc 1 249 17
ld.u32 %r524,[%r242];
cvt.rn.f64.s32 %r201,%r524;
.loc 1 249 15
st.f64 [%r247],%r201;
.loc 1 250 7
@ %r689 bra $L82;
add.u64 %r232,%r677,%r247;
mov.u64 %r231,%r341;
.loc 1 250 17
mov.f64 %r146,0d0000000000000000;
$L37:
.loc 1 250 36
ld.f64 %r527,[%r231];
fma.rn.f64 %r146,%r527,%r201,%r146;
.loc 1 250 7
setp.eq.u64 %r528,%r231,%r239;
@ %r528 bra $L36;
.loc 1 250 45
ld.f64 %r201,[%r232];
add.u64 %r231,%r231,8;
add.u64 %r232,%r232,-8;
bra $L37;
$L82:
.loc 1 250 17
mov.f64 %r146,0d0000000000000000;
$L36:
.loc 1 251 12
shl.b64 %r529,%r241,3;
add.u64 %r530,%frame,%r529;
st.f64 [%r530],%r146;
.loc 1 248 3
add.u64 %r241,%r241,1;
add.u64 %r242,%r242,4;
add.u64 %r247,%r247,8;
cvt.u32.u64 %r531,%r241;
setp.ge.s32 %r532,%r175,%r531;
@ %r532 bra $L38;
mov.u32 %r116,%r175;
bra $L12;
$L31:
.loc 1 260 18
add.u32 %r152,%r152,-24;
.loc 1 261 14
cvt.s64.s32 %r533,%r151;
shl.b64 %r534,%r533,2;
add.u64 %r535,%frame,%r534;
.loc 1 261 11
ld.u32 %r537,[%r535+480];
setp.ne.u32 %r538,%r537,0;
@ %r538 bra $L39;
add.u64 %r542,%r534,-4;
add.u64 %r225,%r663,%r542;
$L40:
.loc 1 261 27
add.u32 %r151,%r151,-1;
.loc 1 261 33
add.u32 %r152,%r152,-24;
.loc 1 261 11
add.u64 %r225,%r225,-4;
ld.u32 %r543,[%r225+4];
setp.eq.u32 %r544,%r543,0;
@ %r544 bra $L40;
bra $L39;
$L28:
.loc 1 263 10
neg.s32 %r547,%r152;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r125;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r547;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r548,[%value_in];
}
.loc 1 264 8
setp.ge.f64 %r549,%r548,0d4170000000000000;
@ ! %r549 bra $L116;
.loc 1 265 35
mul.f64 %r550,%r548,0d3e70000000000000;
.loc 1 265 17
cvt.rzi.s32.f64 %r82,%r550;
.loc 1 265 6
cvt.rn.f64.s32 %r551,%r82;
.loc 1 266 25
fma.rn.f64 %r83,%r551,0dc170000000000000,%r548;
.loc 1 266 10
shl.b64 %r554,%r665,2;
add.u64 %r555,%frame,%r554;
.loc 1 266 12
cvt.rzi.s32.f64 %r557,%r83;
st.u32 [%r555+480],%r557;
.loc 1 267 6
add.u32 %r151,%r116,1;
.loc 1 267 15
add.u32 %r152,%r152,24;
.loc 1 268 10
cvt.s64.s32 %r558,%r151;
shl.b64 %r559,%r558,2;
add.u64 %r560,%frame,%r559;
st.u32 [%r560+480],%r82;
bra $L39;
$L116:
.loc 1 269 20
shl.b64 %r563,%r665,2;
add.u64 %r564,%frame,%r563;
.loc 1 269 22
cvt.rzi.s32.f64 %r566,%r548;
st.u32 [%r564+480],%r566;
.loc 1 269 20
mov.u32 %r151,%r116;
$L39:
.loc 1 273 7
mov.f64 %r567,0d3ff0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r567;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r152;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r569,[%value_in];
}
mov.f64 %r165,%r569;
.loc 1 274 2
setp.lt.s32 %r570,%r151,0;
@ %r570 bra $L43;
cvt.s64.s32 %r666,%r151;
shl.b64 %r213,%r666,2;
add.u64 %r211,%r663,%r213;
shl.b64 %r664,%r666,3;
add.u64 %r208,%frame,%r664;
add.u64 %r224,%frame,476;
mov.u64 %r215,%r208;
$L44:
.loc 1 275 16
ld.u32 %r577,[%r211];
cvt.rn.f64.s32 %r576,%r577;
.loc 1 275 15
mul.f64 %r578,%r576,%r165;
.loc 1 275 11
st.f64 [%r215],%r578;
.loc 1 275 33
mul.f64 %r165,%r165,0d3e70000000000000;
.loc 1 274 2
add.u64 %r211,%r211,-4;
add.u64 %r215,%r215,-8;
setp.ne.u64 %r579,%r211,%r224;
@ %r579 bra $L44;
add.u64 %r671,%frame,160;
mov.u64 %r206,%r671;
mov.u32 %r164,%r151;
mov.u32 %r205,0;
.loc 1 280 6
mov.f64 %r676,0d3ff921fb40000000;
bra $L45;
$L47:
.loc 1 280 51
ld.f64 %r194,[%r109];
$L49:
.loc 1 280 44
ld.f64 %r580,[%r89];
fma.rn.f64 %r162,%r580,%r194,%r162;
.loc 1 280 37
add.u32 %r163,%r163,1;
.loc 1 280 6
setp.lt.s32 %r581,%r134,%r163;
@ %r581 bra $L46;
.loc 1 280 26
add.u64 %r89,%r89,8;
add.u64 %r109,%r109,8;
setp.le.s32 %r582,%r163,%r205;
@ %r582 bra $L47;
bra $L46;
$L83:
.loc 1 280 12
mov.f64 %r162,0d0000000000000000;
$L46:
.loc 1 281 15
st.f64 [%r206],%r162;
.loc 1 279 17
add.u32 %r164,%r164,-1;
.loc 1 279 2
add.u32 %r205,%r205,1;
add.u64 %r206,%r206,8;
add.u64 %r208,%r208,-8;
setp.eq.u32 %r583,%r164,-1;
@ %r583 bra $L48;
$L45:
.loc 1 280 6
@ %r673 bra $L83;
cvta.const.u64 %r109,PIo2;
mov.u64 %r89,%r208;
mov.f64 %r194,%r676;
.loc 1 280 12
mov.f64 %r162,0d0000000000000000;
.loc 1 280 18
mov.u32 %r163,0;
bra $L49;
$L71:
.loc 1 301 3
setp.ne.u32 %r585,%r151,0;
@ %r585 bra $L50;
bra $L117;
$L118:
.loc 1 306 3
setp.gt.s32 %r586,%r151,1;
@ %r586 bra $L51;
$L117:
.loc 1 311 10
mov.f64 %r153,0d0000000000000000;
bra $L52;
$L69:
add.u64 %r181,%r671,%r664;
add.u64 %r174,%r671,-8;
.loc 1 285 2
mov.f64 %r161,0d0000000000000000;
$L53:
.loc 1 288 26
ld.f64 %r591,[%r181];
add.f64 %r161,%r161,%r591;
.loc 1 288 3
add.u64 %r181,%r181,-8;
setp.ne.u64 %r592,%r174,%r181;
@ %r592 bra $L53;
bra $L74;
$L85:
.loc 1 285 2
mov.f64 %r161,0d0000000000000000;
$L74:
.loc 1 289 21
setp.eq.u32 %r593,%r113,0;
@ %r593 bra $L54;
neg.f64 %r161,%r161;
$L54:
.loc 1 289 8
st.f64 [%r342],%r161;
.loc 1 290 3
bra $L55;
$L56:
.loc 1 294 26
ld.f64 %r594,[%r170];
add.f64 %r160,%r160,%r594;
.loc 1 294 3
add.u64 %r170,%r170,-8;
setp.ne.u64 %r595,%r127,%r170;
@ %r595 bra $L56;
bra $L73;
$L84:
.loc 1 293 6
mov.f64 %r160,0d0000000000000000;
$L73:
.loc 1 295 21
setp.eq.u32 %r668,%r113,0;
@ %r668 bra $L57;
neg.f64 %r597,%r160;
.loc 1 295 8
st.f64 [%r342],%r597;
.loc 1 296 6
ld.f64 %r598,[%frame+160];
sub.f64 %r128,%r598,%r160;
.loc 1 297 3
setp.le.s32 %r599,%r151,0;
@ %r599 bra $L58;
$L66:
add.u64 %r173,%frame,168;
.loc 1 297 9
mov.u32 %r159,1;
$L59:
.loc 1 297 26
ld.f64 %r601,[%r173];
add.f64 %r128,%r128,%r601;
.loc 1 297 19
add.u32 %r159,%r159,1;
.loc 1 297 3
add.u64 %r173,%r173,8;
setp.ge.s32 %r602,%r151,%r159;
@ %r602 bra $L59;
.loc 1 298 21
@ %r668 bra $L60;
$L58:
neg.f64 %r128,%r128;
$L60:
.loc 1 298 8
st.f64 [%r342+8],%r128;
.loc 1 299 3
bra $L55;
$L50:
.loc 1 302 27
shl.b64 %r605,%r666,3;
add.u64 %r606,%frame,%r605;
ld.f64 %r155,[%r606+160];
add.u64 %r610,%r605,-8;
add.u64 %r193,%r671,%r610;
add.u64 %r669,%frame,144;
add.u64 %r613,%r669,%r605;
add.u32 %r614,%r151,-1;
cvt.u64.u32 %r615,%r614;
shl.b64 %r616,%r615,3;
sub.u64 %r150,%r613,%r616;
$L61:
.loc 1 302 19
ld.f64 %r99,[%r193];
mov.f64 %r92,%r155;
.loc 1 302 15
add.f64 %r155,%r155,%r99;
.loc 1 303 24
sub.f64 %r617,%r99,%r155;
.loc 1 303 14
add.f64 %r618,%r617,%r92;
st.f64 [%r193+8],%r618;
.loc 1 304 15
st.f64 [%r193],%r155;
.loc 1 301 3
add.u64 %r193,%r193,-8;
setp.ne.u64 %r619,%r150,%r193;
@ %r619 bra $L61;
bra $L118;
$L51:
.loc 1 307 27
shl.b64 %r621,%r666,3;
add.u64 %r622,%frame,%r621;
ld.f64 %r154,[%r622+160];
add.u64 %r626,%r621,-8;
add.u64 %r117,%r671,%r626;
add.u32 %r627,%r151,-2;
cvt.u64.u32 %r628,%r627;
shl.b64 %r200,%r628,3;
add.u64 %r630,%r669,%r621;
sub.u64 %r198,%r630,%r200;
$L63:
.loc 1 307 19
ld.f64 %r103,[%r117];
mov.f64 %r78,%r154;
.loc 1 307 15
add.f64 %r154,%r154,%r103;
.loc 1 308 24
sub.f64 %r631,%r103,%r154;
.loc 1 308 14
add.f64 %r632,%r631,%r78;
st.f64 [%r117+8],%r632;
.loc 1 309 15
st.f64 [%r117],%r154;
.loc 1 306 3
add.u64 %r117,%r117,-8;
setp.ne.u64 %r633,%r117,%r198;
@ %r633 bra $L63;
add.u64 %r126,%r671,%r621;
add.u64 %r635,%r671,-8;
add.u64 %r636,%r635,%r621;
sub.u64 %r120,%r636,%r200;
mov.f64 %r153,0d0000000000000000;
$L64:
.loc 1 311 33
ld.f64 %r637,[%r126];
add.f64 %r153,%r153,%r637;
.loc 1 311 3
add.u64 %r126,%r126,-8;
setp.ne.u64 %r638,%r120,%r126;
@ %r638 bra $L64;
bra $L52;
$L86:
.loc 1 311 10
mov.f64 %r153,0d0000000000000000;
$L52:
.loc 1 313 17
ld.f64 %r195,[%frame+160];
.loc 1 313 32
ld.f64 %r196,[%frame+168];
.loc 1 312 5
setp.ne.u32 %r639,%r113,0;
@ %r639 bra $L65;
.loc 1 313 12
st.f64 [%r342],%r195;
.loc 1 313 27
st.f64 [%r342+8],%r196;
.loc 1 313 42
st.f64 [%r342+16],%r153;
bra $L55;
$L65:
.loc 1 315 14
neg.f64 %r640,%r195;
.loc 1 315 12
st.f64 [%r342],%r640;
.loc 1 315 29
neg.f64 %r641,%r196;
.loc 1 315 27
st.f64 [%r342+8],%r641;
.loc 1 315 44
neg.f64 %r642,%r153;
.loc 1 315 42
st.f64 [%r342+16],%r642;
$L55:
.loc 1 318 10
and.b32 %r643,%r119,7;
bra $L119;
$L57:
.loc 1 295 8
st.f64 [%r342],%r160;
.loc 1 296 6
ld.f64 %r644,[%frame+160];
sub.f64 %r128,%r644,%r160;
.loc 1 297 3
setp.gt.s32 %r645,%r151,0;
@ %r645 bra $L66;
bra $L60;
$L48:
.loc 1 285 2
setp.gt.s32 %r646,%r345,2;
@ %r646 bra $L67;
setp.gt.s32 %r647,%r345,0;
@ %r647 bra $L68;
setp.eq.u32 %r648,%r345,0;
@ %r648 bra $L69;
bra $L55;
$L67:
setp.eq.u32 %r649,%r345,3;
@ %r649 bra $L71;
bra $L55;
$L43:
setp.gt.s32 %r650,%r345,2;
@ %r650 bra $L72;
setp.gt.s32 %r651,%r345,0;
@ %r651 bra $L84;
setp.eq.u32 %r652,%r345,0;
@ %r652 bra $L85;
bra $L55;
$L72:
setp.eq.u32 %r653,%r345,3;
@ %r653 bra $L86;
bra $L55;
$L18:
.loc 1 218 8
add.u32 %r119,%r119,1;
.loc 1 219 6
setp.gt.s32 %r654,%r116,0;
@ %r654 bra $L87;
.loc 1 236 5
mov.f64 %r655,0d3ff0000000000000;
sub.f64 %r125,%r655,%r125;
mov.u32 %r113,2;
bra $L19;
$L68:
shl.b64 %r157,%r666,3;
add.u64 %r170,%r671,%r157;
add.u64 %r127,%frame,152;
.loc 1 293 6
mov.f64 %r160,0d0000000000000000;
bra $L56;
$L119:
.loc 1 319 1
mov.u32 %value,%r643;
st.param.u32 [%value_out],%value;
ret;
}

lib_a-k_sin.o/  1612277259  0     0     100666  2338      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_sin
.visible .func (.param .f64 %value_out) __kernel_sin (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
.file 1 "../../../../../newlib/libm/math/k_sin.c"
// BEGIN GLOBAL FUNCTION DEF: __kernel_sin
.visible .func (.param .f64 %value_out) __kernel_sin (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .u32 %r31;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .u32 %r42;
.reg .u64 %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .pred %r46;
.reg .u32 %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
mov.f64 %r40,%ar0;
mov.f64 %r41,%ar1;
mov.u32 %r42,%ar2;
.loc 1 68 2
mov.b64 %r43,%r40;
shr.u64 %r44,%r43,32;
cvt.u32.u64 %r31,%r44;
.loc 1 69 5
and.b32 %r45,%r31,2147483647;
.loc 1 70 4
setp.gt.s32 %r46,%r45,1044381695;
@ %r46 bra $L2;
.loc 1 71 9
cvt.rzi.s32.f64 %r47,%r40;
.loc 1 71 8
setp.eq.u32 %r48,%r47,0;
@ %r48 bra $L5;
$L2:
.loc 1 72 4
mul.f64 %r33,%r40,%r40;
.loc 1 73 4
mul.f64 %r34,%r40,%r33;
.loc 1 74 27
fma.rn.f64 %r23,%r33,0d3de5d93a5acfd57c,0dbe5ae5e68a2b9ceb;
.loc 1 74 21
fma.rn.f64 %r24,%r23,%r33,0d3ec71de357b1fe7d;
.loc 1 74 15
fma.rn.f64 %r25,%r24,%r33,0dbf2a01a019c161d5;
.loc 1 74 4
fma.rn.f64 %r35,%r25,%r33,0d3f8111111110f8a6;
.loc 1 75 4
setp.ne.u32 %r49,%r42,0;
@ %r49 bra $L4;
.loc 1 75 26
fma.rn.f64 %r26,%r33,%r35,0dbfc5555555555549;
.loc 1 75 20
fma.rn.f64 %r39,%r26,%r34,%r40;
bra $L1;
$L4:
.loc 1 76 34
mul.f64 %r50,%r34,%r35;
.loc 1 76 32
neg.f64 %r51,%r50;
fma.rn.f64 %r28,%r41,0d3fe0000000000000,%r51;
.loc 1 76 37
neg.f64 %r52,%r41;
fma.rn.f64 %r29,%r28,%r33,%r52;
.loc 1 76 40
fma.rn.f64 %r30,%r34,0d3fc5555555555549,%r29;
.loc 1 76 20
sub.f64 %r39,%r40,%r30;
bra $L1;
$L5:
.loc 1 71 27
mov.f64 %r39,%r40;
$L1:
.loc 1 77 1
mov.f64 %value,%r39;
st.param.f64 [%value_out],%value;
ret;
}
/665            1612277259  0     0     100666  23855     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_standard
.visible .func (.param .f64 %value_out) __kernel_standard (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
.file 1 "../../../../../newlib/libm/math/k_standard.c"
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: rint
.extern .func (.param .f64 %value_out) rint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: copysign
.extern .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: __kernel_standard
.visible .func (.param .f64 %value_out) __kernel_standard (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .pred %r69;
.reg .pred %r70;
.reg .pred %r71;
.reg .pred %r72;
.reg .pred %r73;
.reg .pred %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .pred %r79;
.reg .pred %r80;
.reg .pred %r81;
.reg .pred %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .pred %r86;
.reg .pred %r87;
.reg .pred %r88;
.reg .pred %r89;
.reg .pred %r90;
.reg .pred %r91;
.reg .pred %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .pred %r95;
.reg .pred %r96;
.reg .pred %r97;
.reg .pred %r98;
.reg .pred %r99;
.reg .pred %r100;
.reg .pred %r101;
.reg .pred %r102;
.reg .pred %r103;
.reg .pred %r104;
.reg .pred %r105;
.reg .pred %r106;
.reg .pred %r107;
.reg .pred %r108;
.reg .pred %r109;
.reg .pred %r110;
.reg .pred %r111;
.reg .pred %r112;
.reg .pred %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .pred %r118;
.reg .pred %r119;
.reg .pred %r120;
.reg .pred %r121;
.reg .pred %r122;
.reg .pred %r123;
.reg .pred %r124;
.reg .pred %r125;
.reg .pred %r126;
.reg .pred %r127;
.reg .pred %r128;
.reg .pred %r129;
.reg .pred %r130;
.reg .pred %r131;
.reg .pred %r132;
.reg .pred %r133;
.reg .pred %r134;
.reg .pred %r135;
.reg .pred %r136;
.reg .pred %r137;
.reg .pred %r138;
.reg .pred %r139;
.reg .pred %r140;
.reg .pred %r141;
.reg .pred %r142;
.reg .pred %r143;
.reg .pred %r144;
.reg .pred %r145;
.reg .pred %r146;
.reg .pred %r147;
.reg .pred %r148;
.reg .pred %r149;
.reg .pred %r150;
.reg .pred %r151;
.reg .pred %r152;
.reg .pred %r153;
.reg .pred %r154;
.reg .pred %r155;
.reg .pred %r156;
.reg .pred %r157;
.reg .pred %r158;
.reg .pred %r159;
.reg .pred %r160;
.reg .pred %r161;
.reg .pred %r162;
.reg .pred %r163;
.reg .pred %r164;
.reg .pred %r165;
.reg .pred %r166;
.reg .pred %r167;
.reg .pred %r168;
.reg .pred %r169;
.reg .pred %r170;
.reg .pred %r171;
.reg .pred %r172;
.reg .pred %r173;
.reg .pred %r174;
.reg .pred %r175;
.reg .pred %r176;
.reg .pred %r177;
.reg .pred %r178;
.reg .pred %r179;
.reg .pred %r180;
.reg .pred %r181;
.reg .pred %r182;
.reg .u64 %r183;
.reg .u32 %r184;
.reg .u64 %r185;
.reg .u32 %r186;
.reg .u64 %r187;
.reg .u32 %r188;
.reg .u64 %r189;
.reg .u32 %r190;
.reg .u64 %r191;
.reg .u32 %r192;
.reg .u64 %r193;
.reg .u32 %r194;
.reg .u64 %r195;
.reg .u32 %r196;
.reg .u64 %r197;
.reg .u32 %r198;
.reg .u64 %r199;
.reg .u32 %r200;
.reg .u64 %r201;
.reg .u32 %r202;
.reg .u64 %r203;
.reg .u32 %r204;
.reg .u64 %r205;
.reg .u32 %r206;
.reg .u64 %r207;
.reg .u32 %r208;
.reg .u64 %r209;
.reg .u32 %r210;
.reg .u64 %r211;
.reg .u32 %r212;
.reg .u64 %r213;
.reg .u32 %r214;
.reg .u64 %r215;
.reg .u32 %r216;
.reg .u64 %r217;
.reg .u32 %r218;
.reg .u64 %r219;
.reg .u32 %r220;
.reg .pred %r221;
.reg .f64 %r223;
.reg .pred %r224;
.reg .u64 %r225;
.reg .u32 %r226;
.reg .u64 %r227;
.reg .u32 %r228;
.reg .u64 %r229;
.reg .u32 %r230;
.reg .f64 %r231;
.reg .u64 %r232;
.reg .u32 %r233;
.reg .pred %r234;
.reg .u64 %r235;
.reg .u32 %r236;
.reg .f64 %r237;
.reg .u64 %r238;
.reg .u32 %r239;
.reg .f64 %r240;
.reg .u64 %r241;
.reg .u32 %r242;
.reg .f64 %r243;
.reg .u64 %r244;
.reg .u32 %r245;
.reg .f64 %r246;
.reg .u64 %r247;
.reg .u32 %r248;
.reg .f64 %r249;
.reg .u64 %r250;
.reg .u32 %r251;
.reg .u64 %r252;
.reg .u32 %r253;
.reg .pred %r254;
.reg .u64 %r255;
.reg .u32 %r256;
.reg .f64 %r257;
.reg .f64 %r259;
.reg .u64 %r260;
.reg .u32 %r261;
.reg .u64 %r262;
.reg .u32 %r263;
.reg .u64 %r264;
.reg .u32 %r265;
.reg .u64 %r266;
.reg .u32 %r267;
.reg .u64 %r268;
.reg .u32 %r269;
.reg .u64 %r270;
.reg .u32 %r271;
.reg .u64 %r272;
.reg .u32 %r273;
.reg .f64 %r274;
.reg .f64 %r276;
.reg .u64 %r277;
.reg .u32 %r278;
.reg .u64 %r279;
.reg .u32 %r280;
mov.f64 %r65,%ar0;
mov.f64 %r66,%ar1;
mov.u32 %r67,%ar2;
.loc 1 93 2
setp.eq.u32 %r68,%r67,101;
@ %r68 bra $L2;
setp.gt.s32 %r69,%r67,101;
@ %r69 bra $L3;
setp.eq.u32 %r70,%r67,22;
@ %r70 bra $L4;
setp.gt.s32 %r71,%r67,22;
@ %r71 bra $L5;
setp.eq.u32 %r72,%r67,11;
@ %r72 bra $L6;
setp.gt.s32 %r73,%r67,11;
@ %r73 bra $L7;
setp.eq.u32 %r74,%r67,6;
@ %r74 bra $L8;
setp.gt.s32 %r75,%r67,6;
@ %r75 bra $L9;
setp.eq.u32 %r76,%r67,3;
@ %r76 bra $L10;
setp.gt.s32 %r77,%r67,3;
@ %r77 bra $L11;
setp.eq.u32 %r78,%r67,1;
@ %r78 bra $L2;
setp.eq.u32 %r79,%r67,2;
@ %r79 bra $L12;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L11:
.loc 1 93 2
setp.eq.u32 %r80,%r67,4;
@ %r80 bra $L14;
setp.eq.u32 %r81,%r67,5;
@ %r81 bra $L15;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L9:
.loc 1 93 2
setp.eq.u32 %r82,%r67,9;
@ %r82 bra $L16;
setp.gt.s32 %r83,%r67,9;
@ %r83 bra $L17;
setp.eq.u32 %r84,%r67,7;
@ %r84 bra $L18;
setp.eq.u32 %r85,%r67,8;
@ %r85 bra $L19;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L17:
.loc 1 93 2
setp.eq.u32 %r86,%r67,10;
@ %r86 bra $L20;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L7:
.loc 1 93 2
setp.eq.u32 %r87,%r67,17;
@ %r87 bra $L21;
setp.gt.s32 %r88,%r67,17;
@ %r88 bra $L22;
setp.eq.u32 %r89,%r67,14;
@ %r89 bra $L23;
setp.gt.s32 %r90,%r67,14;
@ %r90 bra $L24;
setp.eq.u32 %r91,%r67,12;
@ %r91 bra $L25;
setp.eq.u32 %r92,%r67,13;
@ %r92 bra $L26;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L24:
.loc 1 93 2
setp.eq.u32 %r93,%r67,15;
@ %r93 bra $L27;
setp.eq.u32 %r94,%r67,16;
@ %r94 bra $L28;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L22:
.loc 1 93 2
setp.eq.u32 %r95,%r67,20;
@ %r95 bra $L79;
setp.gt.s32 %r96,%r67,20;
@ %r96 bra $L29;
setp.eq.u32 %r97,%r67,18;
@ %r97 bra $L30;
setp.eq.u32 %r98,%r67,19;
@ %r98 bra $L31;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L29:
.loc 1 93 2
setp.eq.u32 %r99,%r67,21;
@ %r99 bra $L32;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L5:
.loc 1 93 2
setp.eq.u32 %r100,%r67,33;
@ %r100 bra $L33;
setp.gt.s32 %r101,%r67,33;
@ %r101 bra $L34;
setp.eq.u32 %r102,%r67,28;
@ %r102 bra $L35;
setp.gt.s32 %r103,%r67,28;
@ %r103 bra $L36;
setp.eq.u32 %r104,%r67,25;
@ %r104 bra $L37;
setp.gt.s32 %r105,%r67,25;
@ %r105 bra $L38;
setp.eq.u32 %r106,%r67,23;
@ %r106 bra $L39;
setp.eq.u32 %r107,%r67,24;
@ %r107 bra $L40;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L38:
.loc 1 93 2
setp.eq.u32 %r108,%r67,26;
@ %r108 bra $L41;
setp.eq.u32 %r109,%r67,27;
@ %r109 bra $L42;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L36:
.loc 1 93 2
setp.eq.u32 %r110,%r67,31;
@ %r110 bra $L43;
setp.gt.s32 %r111,%r67,31;
@ %r111 bra $L44;
setp.eq.u32 %r112,%r67,29;
@ %r112 bra $L45;
setp.eq.u32 %r113,%r67,30;
@ %r113 bra $L46;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L44:
.loc 1 93 2
setp.eq.u32 %r114,%r67,32;
@ %r114 bra $L47;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L34:
.loc 1 93 2
setp.eq.u32 %r115,%r67,38;
@ %r115 bra $L48;
setp.gt.s32 %r116,%r67,38;
@ %r116 bra $L49;
setp.eq.u32 %r117,%r67,36;
@ %r117 bra $L50;
setp.gt.s32 %r118,%r67,36;
@ %r118 bra $L51;
setp.eq.u32 %r119,%r67,34;
@ %r119 bra $L52;
setp.eq.u32 %r120,%r67,35;
@ %r120 bra $L53;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L51:
.loc 1 93 2
setp.eq.u32 %r121,%r67,37;
@ %r121 bra $L54;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L49:
.loc 1 93 2
setp.eq.u32 %r122,%r67,41;
@ %r122 bra $L55;
setp.gt.s32 %r123,%r67,41;
@ %r123 bra $L56;
setp.eq.u32 %r124,%r67,39;
@ %r124 bra $L57;
setp.eq.u32 %r125,%r67,40;
@ %r125 bra $L58;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L56:
.loc 1 93 2
setp.ne.u32 %r126,%r67,42;
selp.f64 %r64,0d0000000000000000,0d3ff0000000000000,%r126;
bra $L1;
$L3:
setp.eq.u32 %r127,%r67,122;
@ %r127 bra $L4;
setp.gt.s32 %r128,%r67,122;
@ %r128 bra $L59;
setp.eq.u32 %r129,%r67,112;
@ %r129 bra $L25;
setp.gt.s32 %r130,%r67,112;
@ %r130 bra $L60;
setp.eq.u32 %r131,%r67,107;
@ %r131 bra $L18;
setp.gt.s32 %r132,%r67,107;
@ %r132 bra $L61;
setp.eq.u32 %r133,%r67,104;
@ %r133 bra $L14;
setp.gt.s32 %r134,%r67,104;
@ %r134 bra $L62;
setp.eq.u32 %r135,%r67,102;
@ %r135 bra $L12;
setp.eq.u32 %r136,%r67,103;
@ %r136 bra $L10;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L62:
.loc 1 93 2
setp.eq.u32 %r137,%r67,105;
@ %r137 bra $L15;
setp.eq.u32 %r138,%r67,106;
@ %r138 bra $L8;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L61:
.loc 1 93 2
setp.eq.u32 %r139,%r67,110;
@ %r139 bra $L20;
setp.gt.s32 %r140,%r67,110;
@ %r140 bra $L63;
setp.eq.u32 %r141,%r67,108;
@ %r141 bra $L19;
setp.eq.u32 %r142,%r67,109;
@ %r142 bra $L16;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L63:
.loc 1 93 2
setp.eq.u32 %r143,%r67,111;
@ %r143 bra $L6;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L60:
.loc 1 93 2
setp.eq.u32 %r144,%r67,117;
@ %r144 bra $L21;
setp.gt.s32 %r145,%r67,117;
@ %r145 bra $L64;
setp.eq.u32 %r146,%r67,115;
@ %r146 bra $L27;
setp.gt.s32 %r147,%r67,115;
@ %r147 bra $L65;
setp.eq.u32 %r148,%r67,113;
@ %r148 bra $L26;
setp.eq.u32 %r149,%r67,114;
@ %r149 bra $L23;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L65:
.loc 1 93 2
setp.eq.u32 %r150,%r67,116;
@ %r150 bra $L28;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L64:
.loc 1 93 2
setp.eq.u32 %r151,%r67,120;
@ %r151 bra $L81;
setp.gt.s32 %r152,%r67,120;
@ %r152 bra $L66;
setp.eq.u32 %r153,%r67,118;
@ %r153 bra $L30;
setp.eq.u32 %r154,%r67,119;
@ %r154 bra $L31;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L66:
.loc 1 93 2
setp.eq.u32 %r155,%r67,121;
@ %r155 bra $L32;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L59:
.loc 1 93 2
setp.eq.u32 %r156,%r67,133;
@ %r156 bra $L33;
setp.gt.s32 %r157,%r67,133;
@ %r157 bra $L67;
setp.eq.u32 %r158,%r67,128;
@ %r158 bra $L35;
setp.gt.s32 %r159,%r67,128;
@ %r159 bra $L68;
setp.eq.u32 %r160,%r67,125;
@ %r160 bra $L37;
setp.gt.s32 %r161,%r67,125;
@ %r161 bra $L69;
setp.eq.u32 %r162,%r67,123;
@ %r162 bra $L39;
setp.eq.u32 %r163,%r67,124;
@ %r163 bra $L40;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L69:
.loc 1 93 2
setp.eq.u32 %r164,%r67,126;
@ %r164 bra $L41;
setp.eq.u32 %r165,%r67,127;
@ %r165 bra $L42;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L68:
.loc 1 93 2
setp.eq.u32 %r166,%r67,131;
@ %r166 bra $L43;
setp.gt.s32 %r167,%r67,131;
@ %r167 bra $L70;
setp.eq.u32 %r168,%r67,129;
@ %r168 bra $L45;
setp.eq.u32 %r169,%r67,130;
@ %r169 bra $L46;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L70:
.loc 1 93 2
setp.eq.u32 %r170,%r67,132;
@ %r170 bra $L47;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L67:
.loc 1 93 2
setp.eq.u32 %r171,%r67,138;
@ %r171 bra $L48;
setp.gt.s32 %r172,%r67,138;
@ %r172 bra $L71;
setp.eq.u32 %r173,%r67,136;
@ %r173 bra $L50;
setp.gt.s32 %r174,%r67,136;
@ %r174 bra $L72;
setp.eq.u32 %r175,%r67,134;
@ %r175 bra $L52;
setp.eq.u32 %r176,%r67,135;
@ %r176 bra $L53;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L72:
.loc 1 93 2
setp.eq.u32 %r177,%r67,137;
@ %r177 bra $L54;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L71:
.loc 1 93 2
setp.eq.u32 %r178,%r67,141;
@ %r178 bra $L55;
setp.gt.s32 %r179,%r67,141;
@ %r179 bra $L73;
setp.eq.u32 %r180,%r67,139;
@ %r180 bra $L57;
setp.eq.u32 %r181,%r67,140;
@ %r181 bra $L58;
.loc 1 88 9
mov.f64 %r64,0d0000000000000000;
bra $L1;
$L73:
.loc 1 93 2
setp.ne.u32 %r182,%r67,142;
selp.f64 %r64,0d0000000000000000,0d3ff0000000000000,%r182;
bra $L1;
$L2:
.loc 1 98 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r183,[%value_in];
}
.loc 1 98 9
mov.u32 %r184,33;
st.u32 [%r183],%r184;
.loc 1 97 10
mov.f64 %r64,0d0000000000000000;
.loc 1 99 3
bra $L1;
$L12:
.loc 1 104 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r185,[%value_in];
}
.loc 1 104 9
mov.u32 %r186,33;
st.u32 [%r185],%r186;
.loc 1 103 10
mov.f64 %r64,0d0000000000000000;
.loc 1 105 3
bra $L1;
$L10:
.loc 1 110 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r187,[%value_in];
}
.loc 1 110 9
mov.u32 %r188,33;
st.u32 [%r187],%r188;
.loc 1 109 10
mov.f64 %r64,0d0000000000000000;
.loc 1 111 3
bra $L1;
$L14:
.loc 1 116 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r189,[%value_in];
}
.loc 1 116 9
mov.u32 %r190,34;
st.u32 [%r189],%r190;
.loc 1 115 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 117 3
bra $L1;
$L15:
.loc 1 122 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r191,[%value_in];
}
.loc 1 122 9
mov.u32 %r192,34;
st.u32 [%r191],%r192;
.loc 1 121 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 123 3
bra $L1;
$L8:
.loc 1 128 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r193,[%value_in];
}
.loc 1 128 9
mov.u32 %r194,34;
st.u32 [%r193],%r194;
.loc 1 127 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 129 3
bra $L1;
$L18:
.loc 1 134 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r195,[%value_in];
}
.loc 1 134 9
mov.u32 %r196,34;
st.u32 [%r195],%r196;
.loc 1 133 10
mov.f64 %r64,0d0000000000000000;
.loc 1 135 3
bra $L1;
$L19:
.loc 1 140 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r197,[%value_in];
}
.loc 1 140 9
mov.u32 %r198,33;
st.u32 [%r197],%r198;
.loc 1 139 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 141 3
bra $L1;
$L16:
.loc 1 146 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r199,[%value_in];
}
.loc 1 146 9
mov.u32 %r200,33;
st.u32 [%r199],%r200;
.loc 1 145 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 147 3
bra $L1;
$L20:
.loc 1 152 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r201,[%value_in];
}
.loc 1 152 9
mov.u32 %r202,33;
st.u32 [%r201],%r202;
.loc 1 151 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 153 3
bra $L1;
$L6:
.loc 1 158 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r203,[%value_in];
}
.loc 1 158 9
mov.u32 %r204,33;
st.u32 [%r203],%r204;
.loc 1 157 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 159 3
bra $L1;
$L25:
.loc 1 164 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r205,[%value_in];
}
.loc 1 164 9
mov.u32 %r206,33;
st.u32 [%r205],%r206;
.loc 1 163 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 165 3
bra $L1;
$L26:
.loc 1 170 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r207,[%value_in];
}
.loc 1 170 9
mov.u32 %r208,33;
st.u32 [%r207],%r208;
.loc 1 169 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 171 3
bra $L1;
$L23:
.loc 1 176 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r209,[%value_in];
}
.loc 1 176 9
mov.u32 %r210,34;
st.u32 [%r209],%r210;
.loc 1 175 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 177 3
bra $L1;
$L27:
.loc 1 182 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r211,[%value_in];
}
.loc 1 182 9
mov.u32 %r212,33;
st.u32 [%r211],%r212;
.loc 1 181 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 183 3
bra $L1;
$L28:
.loc 1 188 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r213,[%value_in];
}
.loc 1 188 9
mov.u32 %r214,33;
st.u32 [%r213],%r214;
.loc 1 187 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 189 3
bra $L1;
$L21:
.loc 1 194 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r215,[%value_in];
}
.loc 1 194 9
mov.u32 %r216,33;
st.u32 [%r215],%r216;
.loc 1 193 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 195 3
bra $L1;
$L30:
.loc 1 200 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r217,[%value_in];
}
.loc 1 200 9
mov.u32 %r218,33;
st.u32 [%r217],%r218;
.loc 1 199 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 201 3
bra $L1;
$L31:
.loc 1 206 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r219,[%value_in];
}
.loc 1 206 9
mov.u32 %r220,33;
st.u32 [%r219],%r220;
.loc 1 205 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 207 3
bra $L1;
$L32:
.loc 1 219 5
setp.lt.f64 %r221,%r65,0d0000000000000000;
@ %r221 bra $L74;
$L76:
.loc 1 217 10
mov.f64 %r64,0d7ff0000000000000;
bra $L75;
$L74:
.loc 1 218 5
mul.f64 %r63,%r66,0d3fe0000000000000;
.loc 1 219 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r63;
call (%value_in),rint,(%out_arg1);
ld.param.f64 %r223,[%value_in];
}
.loc 1 219 12
setp.eq.f64 %r224,%r223,%r63;
@ %r224 bra $L76;
.loc 1 220 12
mov.f64 %r64,0dfff0000000000000;
$L75:
.loc 1 221 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r225,[%value_in];
}
.loc 1 221 9
mov.u32 %r226,34;
st.u32 [%r225],%r226;
.loc 1 222 3
bra $L1;
$L4:
.loc 1 227 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r227,[%value_in];
}
.loc 1 227 9
mov.u32 %r228,34;
st.u32 [%r227],%r228;
.loc 1 226 10
mov.f64 %r64,0d0000000000000000;
.loc 1 228 3
bra $L1;
$L39:
.loc 1 233 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r229,[%value_in];
}
.loc 1 233 9
mov.u32 %r230,33;
st.u32 [%r229],%r230;
.loc 1 232 10
mov.f64 %r64,0dfff0000000000000;
.loc 1 234 3
bra $L1;
$L40:
.loc 1 238 10
mov.f64 %r231,0d0000000000000000;
div.rn.f64 %r64,%r231,%r231;
.loc 1 239 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r232,[%value_in];
}
.loc 1 239 9
mov.u32 %r233,33;
st.u32 [%r232],%r233;
.loc 1 240 3
bra $L1;
$L37:
.loc 1 244 34
setp.gt.f64 %r234,%r65,0d0000000000000000;
selp.f64 %r64,0d7ff0000000000000,0dfff0000000000000,%r234;
.loc 1 245 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r235,[%value_in];
}
.loc 1 245 9
mov.u32 %r236,34;
st.u32 [%r235],%r236;
.loc 1 246 3
bra $L1;
$L41:
.loc 1 250 10
mov.f64 %r237,0d0000000000000000;
div.rn.f64 %r64,%r237,%r237;
.loc 1 251 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r238,[%value_in];
}
.loc 1 251 9
mov.u32 %r239,33;
st.u32 [%r238],%r239;
.loc 1 252 3
bra $L1;
$L42:
.loc 1 256 10
mov.f64 %r240,0d0000000000000000;
div.rn.f64 %r64,%r240,%r240;
.loc 1 257 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r241,[%value_in];
}
.loc 1 257 9
mov.u32 %r242,33;
st.u32 [%r241],%r242;
.loc 1 258 17
bra $L1;
$L35:
.loc 1 262 10
mov.f64 %r243,0d0000000000000000;
div.rn.f64 %r64,%r243,%r243;
.loc 1 263 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r244,[%value_in];
}
.loc 1 263 9
mov.u32 %r245,33;
st.u32 [%r244],%r245;
.loc 1 264 17
bra $L1;
$L45:
.loc 1 268 10
mov.f64 %r246,0d0000000000000000;
div.rn.f64 %r64,%r246,%r246;
.loc 1 269 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r247,[%value_in];
}
.loc 1 269 9
mov.u32 %r248,33;
st.u32 [%r247],%r248;
.loc 1 270 17
bra $L1;
$L46:
.loc 1 274 10
mov.f64 %r249,0d0000000000000000;
div.rn.f64 %r64,%r249,%r249;
.loc 1 275 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r250,[%value_in];
}
.loc 1 275 9
mov.u32 %r251,33;
st.u32 [%r250],%r251;
.loc 1 276 17
bra $L1;
$L43:
.loc 1 280 10
div.rn.f64 %r64,%r65,0d0000000000000000;
.loc 1 281 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r252,[%value_in];
}
.loc 1 281 9
mov.u32 %r253,33;
st.u32 [%r252],%r253;
.loc 1 282 17
bra $L1;
$L47:
.loc 1 286 32
setp.gt.f64 %r254,%r65,0d0000000000000000;
selp.f64 %r64,0d7ff0000000000000,0dfff0000000000000,%r254;
.loc 1 287 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r255,[%value_in];
}
.loc 1 287 9
mov.u32 %r256,34;
st.u32 [%r255],%r256;
.loc 1 288 3
bra $L1;
$L33:
.loc 1 292 12
mov.f64 %r257,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r257;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),copysign,(%out_arg1,%out_arg2);
ld.param.f64 %r259,[%value_in];
}
mov.f64 %r64,%r259;
.loc 1 293 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r260,[%value_in];
}
.loc 1 293 9
mov.u32 %r261,34;
st.u32 [%r260],%r261;
.loc 1 294 3
bra $L1;
$L52:
.loc 1 299 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r262,[%value_in];
}
.loc 1 299 9
mov.u32 %r263,34;
st.u32 [%r262],%r263;
.loc 1 298 10
mov.f64 %r64,0d0000000000000000;
.loc 1 300 3
bra $L1;
$L53:
.loc 1 305 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r264,[%value_in];
}
.loc 1 305 9
mov.u32 %r265,34;
st.u32 [%r264],%r265;
.loc 1 304 10
mov.f64 %r64,0d0000000000000000;
.loc 1 306 3
bra $L1;
$L50:
.loc 1 311 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r266,[%value_in];
}
.loc 1 311 9
mov.u32 %r267,34;
st.u32 [%r266],%r267;
.loc 1 310 10
mov.f64 %r64,0d0000000000000000;
.loc 1 312 3
bra $L1;
$L54:
.loc 1 317 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r268,[%value_in];
}
.loc 1 317 9
mov.u32 %r269,34;
st.u32 [%r268],%r269;
.loc 1 316 10
mov.f64 %r64,0d0000000000000000;
.loc 1 318 3
bra $L1;
$L48:
.loc 1 323 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r270,[%value_in];
}
.loc 1 323 9
mov.u32 %r271,34;
st.u32 [%r270],%r271;
.loc 1 322 10
mov.f64 %r64,0d0000000000000000;
.loc 1 324 3
bra $L1;
$L57:
.loc 1 329 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r272,[%value_in];
}
.loc 1 329 9
mov.u32 %r273,34;
st.u32 [%r272],%r273;
.loc 1 328 10
mov.f64 %r64,0d0000000000000000;
.loc 1 330 3
bra $L1;
$L58:
.loc 1 334 12
mov.f64 %r274,0d7ff0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r274;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
call (%value_in),copysign,(%out_arg1,%out_arg2);
ld.param.f64 %r276,[%value_in];
}
mov.f64 %r64,%r276;
.loc 1 335 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r277,[%value_in];
}
.loc 1 335 9
mov.u32 %r278,34;
st.u32 [%r277],%r278;
.loc 1 336 3
bra $L1;
$L55:
.loc 1 341 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r279,[%value_in];
}
.loc 1 341 9
mov.u32 %r280,33;
st.u32 [%r279],%r280;
.loc 1 340 10
mov.f64 %r64,0d7ff0000000000000;
.loc 1 342 3
bra $L1;
$L79:
.loc 1 93 2
mov.f64 %r64,0d3ff0000000000000;
bra $L1;
$L81:
mov.f64 %r64,0d3ff0000000000000;
$L1:
.loc 1 351 1
mov.f64 %value,%r64;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-k_tan.o/  1612277259  0     0     100666  6298      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_tan
.visible .func (.param .f64 %value_out) __kernel_tan (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
.file 1 "../../../../../newlib/libm/math/k_tan.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __kernel_tan
.visible .func (.param .f64 %value_out) __kernel_tan (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r62;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .u64 %r81;
.reg .u64 %r82;
.reg .f64 %r83;
.reg .f64 %r84;
.reg .f64 %r85;
.reg .u32 %r86;
.reg .u64 %r87;
.reg .u64 %r88;
.reg .pred %r89;
.reg .u32 %r90;
.reg .pred %r91;
.reg .u32 %r92;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u32 %r96;
.reg .pred %r97;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .pred %r101;
.reg .u64 %r102;
.reg .f64 %r103;
.reg .f64 %r104;
.reg .u64 %r105;
.reg .pred %r107;
.reg .f64 %r108;
.reg .f64 %r109;
.reg .f64 %r110;
.reg .f64 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r115;
.reg .f64 %r116;
.reg .u32 %r118;
.reg .u32 %r119;
.reg .u32 %r120;
.reg .u32 %r121;
.reg .f64 %r122;
.reg .pred %r123;
.reg .u64 %r124;
.reg .f64 %r125;
.reg .f64 %r126;
.reg .u64 %r127;
.reg .pred %r129;
mov.f64 %r84,%ar0;
mov.f64 %r85,%ar1;
mov.u32 %r86,%ar2;
.loc 1 85 2
mov.b64 %r87,%r84;
shr.u64 %r88,%r87,32;
cvt.u32.u64 %r53,%r88;
.loc 1 86 5
and.b32 %r54,%r53,2147483647;
.loc 1 87 4
setp.gt.s32 %r89,%r54,1043333119;
@ %r89 bra $L2;
.loc 1 88 6
cvt.rzi.s32.f64 %r90,%r84;
.loc 1 88 5
setp.ne.u32 %r91,%r90,0;
@ ! %r91 bra $L13;
setp.le.s32 %r129,%r54,1072010279;
bra $L3;
$L13:
.loc 1 91 20
add.u32 %r92,%r86,1;
.loc 1 91 16
cvt.u32.u64 %r95,%r87;
or.b32 %r94,%r92,%r95;
or.b32 %r96,%r94,%r54;
.loc 1 91 6
setp.ne.u32 %r97,%r96,0;
@ %r97 bra $L4;
.loc 1 91 40
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r84;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r99,[%value_in];
}
.loc 1 91 39
mov.f64 %r100,0d3ff0000000000000;
div.rn.f64 %r83,%r100,%r99;
bra $L1;
$L4:
.loc 1 93 7
setp.eq.u32 %r101,%r86,1;
@ %r101 bra $L8;
.loc 1 97 12
add.f64 %r55,%r84,%r85;
.loc 1 98 6
mov.b64 %r79,%r55;
and.b64 %r102,%r79,-4294967296;
mov.b64 %r56,%r102;
.loc 1 99 17
sub.f64 %r103,%r56,%r84;
.loc 1 99 8
sub.f64 %r57,%r85,%r103;
.loc 1 100 12
mov.f64 %r104,0dbff0000000000000;
div.rn.f64 %r58,%r104,%r55;
.loc 1 101 6
mov.b64 %r80,%r58;
and.b64 %r105,%r80,-4294967296;
mov.b64 %r59,%r105;
.loc 1 102 8
fma.rn.f64 %r60,%r56,%r59,0d3ff0000000000000;
.loc 1 103 24
fma.rn.f64 %r29,%r57,%r59,%r60;
.loc 1 103 15
fma.rn.f64 %r83,%r29,%r58,%r59;
bra $L1;
$L2:
.loc 1 108 4
setp.le.s32 %r129,%r54,1072010279;
@ %r129 bra $L3;
.loc 1 109 8
setp.ge.s32 %r107,%r53,0;
@ %r107 bra $L6;
.loc 1 109 18
neg.f64 %r84,%r84;
.loc 1 109 26
neg.f64 %r85,%r85;
$L6:
.loc 1 110 8
mov.f64 %r108,0d3fe921fb54442d18;
sub.f64 %r62,%r108,%r84;
.loc 1 111 8
mov.f64 %r110,0d3c81a62633145c07;
sub.f64 %r109,%r110,%r85;
.loc 1 112 8
add.f64 %r84,%r109,%r62;
.loc 1 112 17
mov.f64 %r85,0d0000000000000000;
$L3:
.loc 1 114 4
mul.f64 %r65,%r84,%r84;
.loc 1 115 5
mul.f64 %r66,%r65,%r65;
.loc 1 120 42
fma.rn.f64 %r30,%r66,0dbef375cbdb605373,0d3f147e88a03792a6;
.loc 1 120 34
fma.rn.f64 %r31,%r30,%r66,0d3f4344d8f2f26501;
.loc 1 120 26
fma.rn.f64 %r32,%r31,%r66,0d3f6d6d22c9560328;
.loc 1 120 18
fma.rn.f64 %r33,%r32,%r66,0d3f9664f48406d637;
.loc 1 120 4
fma.rn.f64 %r67,%r33,%r66,0d3fc111111110fe7a;
.loc 1 121 46
fma.rn.f64 %r34,%r66,0d3efb2a7074bf7ad4,0d3f12b80f32f0a7e9;
.loc 1 121 37
fma.rn.f64 %r35,%r34,%r66,0d3f3026f71a8d1068;
.loc 1 121 29
fma.rn.f64 %r36,%r35,%r66,0d3f57dbc8fee08315;
.loc 1 121 21
fma.rn.f64 %r37,%r36,%r66,0d3f8226e3e96e8493;
.loc 1 121 13
fma.rn.f64 %r38,%r37,%r66,0d3faba1ba1bb341fe;
.loc 1 122 4
mul.f64 %r68,%r84,%r65;
.loc 1 123 17
fma.rn.f64 %r39,%r38,%r65,%r67;
.loc 1 123 20
fma.rn.f64 %r40,%r39,%r68,%r85;
.loc 1 123 4
fma.rn.f64 %r69,%r40,%r65,%r85;
.loc 1 124 4
fma.rn.f64 %r70,%r68,0d3fd5555555555563,%r69;
.loc 1 125 4
add.f64 %r83,%r84,%r70;
.loc 1 126 4
@ %r129 bra $L7;
.loc 1 127 8
cvt.rn.f64.s32 %r76,%r86;
.loc 1 128 50
mul.f64 %r112,%r83,%r83;
.loc 1 128 55
add.f64 %r113,%r83,%r76;
.loc 1 128 52
div.rn.f64 %r114,%r112,%r113;
.loc 1 128 58
sub.f64 %r115,%r114,%r70;
.loc 1 128 47
sub.f64 %r116,%r84,%r115;
.loc 1 128 40
fma.rn.f64 %r50,%r116,0dc000000000000000,%r76;
.loc 1 128 28
shr.s32 %r118,%r53,30;
.loc 1 128 33
and.b32 %r119,%r118,2;
.loc 1 128 23
mov.u32 %r121,1;
sub.u32 %r120,%r121,%r119;
.loc 1 128 13
cvt.rn.f64.s32 %r122,%r120;
.loc 1 128 37
mul.f64 %r83,%r122,%r50;
bra $L1;
$L7:
.loc 1 130 4
setp.eq.u32 %r123,%r86,1;
@ %r123 bra $L1;
.loc 1 136 6
mov.b64 %r81,%r83;
and.b64 %r124,%r81,-4294967296;
mov.b64 %r71,%r124;
.loc 1 137 16
sub.f64 %r125,%r71,%r84;
.loc 1 137 9
sub.f64 %r72,%r70,%r125;
.loc 1 138 13
mov.f64 %r126,0dbff0000000000000;
div.rn.f64 %r73,%r126,%r83;
.loc 1 139 6
mov.b64 %r82,%r73;
and.b64 %r127,%r82,-4294967296;
mov.b64 %r74,%r127;
.loc 1 140 9
fma.rn.f64 %r75,%r71,%r74,0d3ff0000000000000;
.loc 1 141 19
fma.rn.f64 %r52,%r72,%r74,%r75;
.loc 1 141 14
fma.rn.f64 %r83,%r52,%r73,%r74;
bra $L1;
$L8:
.loc 1 94 13
mov.f64 %r83,%r84;
$L1:
.loc 1 143 1
mov.f64 %value,%r83;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-kf_cos.o/ 1612277259  0     0     100666  3216      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_cosf
.visible .func (.param .f32 %value_out) __kernel_cosf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/kf_cos.c"
// BEGIN GLOBAL FUNCTION DEF: __kernel_cosf
.visible .func (.param .f32 %value_out) __kernel_cosf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r33;
.reg .f32 %r35;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .pred %r55;
.reg .u32 %r56;
.reg .pred %r57;
.reg .pred %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .pred %r63;
.reg .u32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
mov.f32 %r53,%ar0;
mov.f32 %r54,%ar1;
.loc 1 40 2
mov.b32 %r36,%r53;
.loc 1 41 5
and.b32 %r37,%r36,2147483647;
.loc 1 42 4
setp.gt.s32 %r55,%r37,838860799;
@ %r55 bra $L2;
.loc 1 43 10
cvt.rzi.s32.f32 %r56,%r53;
.loc 1 43 8
setp.eq.u32 %r57,%r56,0;
@ ! %r57 bra $L10;
bra $L8;
$L2:
.loc 1 45 5
mul.f32 %r40,%r53,%r53;
.loc 1 46 36
fma.rn.f32 %r23,%r40,0fad47d74e,0f310f74f6;
.loc 1 46 30
fma.rn.f32 %r24,%r23,%r40,0fb493f27c;
.loc 1 46 24
fma.rn.f32 %r25,%r24,%r40,0f37d00d01;
.loc 1 46 18
fma.rn.f32 %r26,%r25,%r40,0fbab60b61;
.loc 1 46 12
fma.rn.f32 %r27,%r26,%r40,0f3d2aaaab;
.loc 1 46 5
mul.f32 %r46,%r27,%r40;
.loc 1 47 4
setp.gt.s32 %r58,%r37,1050253721;
@ %r58 bra $L5;
$L7:
.loc 1 48 43
mul.f32 %r59,%r53,%r54;
.loc 1 48 40
neg.f32 %r60,%r59;
fma.rn.f32 %r29,%r40,%r46,%r60;
.loc 1 48 33
neg.f32 %r61,%r29;
fma.rn.f32 %r30,%r40,0f3f000000,%r61;
.loc 1 48 17
mov.f32 %r62,0f3f800000;
sub.f32 %r52,%r62,%r30;
bra $L1;
$L5:
.loc 1 50 8
setp.gt.s32 %r63,%r37,1061683200;
@ %r63 bra $L9;
.loc 1 53 10
add.u32 %r64,%r37,-16777216;
mov.b32 %r35,%r64;
.loc 1 56 9
mov.f32 %r65,0f3f800000;
sub.f32 %r51,%r65,%r35;
bra $L6;
$L9:
mov.f32 %r51,0f3f380000;
.loc 1 51 6
mov.f32 %r35,0f3e900000;
$L6:
.loc 1 55 9
neg.f32 %r66,%r35;
fma.rn.f32 %r39,%r40,0f3f000000,%r66;
.loc 1 57 29
mul.f32 %r67,%r53,%r54;
.loc 1 57 27
neg.f32 %r68,%r67;
fma.rn.f32 %r33,%r40,%r46,%r68;
.loc 1 57 21
sub.f32 %r69,%r39,%r33;
.loc 1 57 15
sub.f32 %r52,%r51,%r69;
bra $L1;
$L8:
.loc 1 43 29
mov.f32 %r52,0f3f800000;
bra $L1;
$L10:
.loc 1 45 5
mul.f32 %r40,%r53,%r53;
.loc 1 46 36
fma.rn.f32 %r41,%r40,0fad47d74e,0f310f74f6;
.loc 1 46 30
fma.rn.f32 %r42,%r40,%r41,0fb493f27c;
.loc 1 46 24
fma.rn.f32 %r43,%r40,%r42,0f37d00d01;
.loc 1 46 18
fma.rn.f32 %r44,%r40,%r43,0fbab60b61;
.loc 1 46 12
fma.rn.f32 %r45,%r40,%r44,0f3d2aaaab;
.loc 1 46 5
mul.f32 %r46,%r40,%r45;
bra $L7;
$L1:
.loc 1 59 1
mov.f32 %value,%r52;
st.param.f32 [%value_out],%value;
ret;
}
/685            1612277259  0     0     100666  26829     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_rem_pio2f
.visible .func (.param .u32 %value_out) __kernel_rem_pio2f (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5);
.file 1 "../../../../../newlib/libm/math/kf_rem_pio2.c"
// BEGIN GLOBAL FUNCTION DECL: scalbnf
.extern .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: floorf
.extern .func (.param .f32 %value_out) floorf (.param .f32 %in_ar0);
// BEGIN VAR DEF: init_jk
.const .align 4 .u32 init_jk[3] =
{4,7,9 };
// BEGIN VAR DEF: PIo2
.const .align 4 .u32 PIo2[11] =
{1070137344,972029952,937033728,866254848,780402688,726663168,667025408,584056832,532938752,465960960,390332416 };
// BEGIN GLOBAL FUNCTION DEF: __kernel_rem_pio2f
.visible .func (.param .u32 %value_out) __kernel_rem_pio2f (.param .u64 %in_ar0, .param .u64 %in_ar1, .param .u32 %in_ar2, .param .u32 %in_ar3, .param .u32 %in_ar4, .param .u64 %in_ar5)
{
.reg .u32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .u32 %ar3;
ld.param.u32 %ar3,[%in_ar3];
.reg .u32 %ar4;
ld.param.u32 %ar4,[%in_ar4];
.reg .u64 %ar5;
ld.param.u64 %ar5,[%in_ar5];
.local .align 16 .b8 %frame_ar[320];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f32 %r38;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r52;
.reg .u32 %r58;
.reg .u32 %r61;
.reg .f32 %r78;
.reg .f32 %r83;
.reg .u64 %r90;
.reg .f32 %r93;
.reg .f32 %r100;
.reg .f32 %r104;
.reg .u64 %r109;
.reg .u32 %r112;
.reg .u32 %r115;
.reg .u64 %r116;
.reg .u32 %r117;
.reg .u32 %r118;
.reg .u64 %r119;
.reg .f32 %r124;
.reg .u64 %r125;
.reg .u64 %r126;
.reg .f32 %r127;
.reg .f32 %r128;
.reg .u32 %r133;
.reg .u32 %r136;
.reg .u32 %r137;
.reg .u32 %r139;
.reg .f32 %r140;
.reg .u32 %r141;
.reg .u32 %r143;
.reg .u32 %r144;
.reg .f32 %r145;
.reg .u32 %r146;
.reg .f32 %r148;
.reg .u64 %r149;
.reg .u32 %r150;
.reg .u32 %r151;
.reg .f32 %r152;
.reg .f32 %r153;
.reg .f32 %r154;
.reg .u64 %r156;
.reg .u32 %r158;
.reg .f32 %r159;
.reg .f32 %r160;
.reg .f32 %r161;
.reg .u32 %r162;
.reg .u32 %r163;
.reg .f32 %r164;
.reg .u32 %r165;
.reg .f32 %r166;
.reg .f32 %r167;
.reg .f32 %r168;
.reg .u32 %r169;
.reg .u64 %r170;
.reg .u64 %r173;
.reg .u64 %r174;
.reg .u32 %r175;
.reg .u64 %r182;
.reg .u32 %r187;
.reg .u32 %r194;
.reg .u64 %r195;
.reg .f32 %r196;
.reg .f32 %r197;
.reg .f32 %r198;
.reg .u64 %r200;
.reg .u64 %r202;
.reg .f32 %r203;
.reg .u32 %r207;
.reg .u64 %r208;
.reg .u64 %r210;
.reg .u64 %r213;
.reg .u64 %r215;
.reg .u64 %r217;
.reg .u64 %r221;
.reg .u64 %r227;
.reg .u64 %r228;
.reg .u64 %r235;
.reg .u64 %r237;
.reg .u64 %r238;
.reg .u64 %r243;
.reg .u64 %r245;
.reg .u64 %r257;
.reg .u64 %r258;
.reg .u64 %r259;
.reg .u64 %r265;
.reg .u64 %r267;
.reg .u64 %r277;
.reg .u64 %r278;
.reg .u64 %r290;
.reg .u64 %r292;
.reg .u64 %r294;
.reg .u64 %r295;
.reg .u64 %r306;
.reg .u64 %r307;
.reg .u64 %r308;
.reg .u64 %r318;
.reg .u64 %r319;
.reg .u32 %r320;
.reg .u32 %r324;
.reg .u64 %r325;
.reg .u64 %r326;
.reg .u32 %r334;
.reg .u64 %r337;
.reg .u64 %r338;
.reg .u32 %r339;
.reg .u32 %r340;
.reg .u32 %r341;
.reg .u64 %r342;
.reg .u64 %r343;
.reg .u64 %r344;
.reg .u64 %r345;
.reg .u64 %r346;
.reg .pred %r347;
.reg .u32 %r348;
.reg .u32 %r351;
.reg .u32 %r352;
.reg .u32 %r353;
.reg .u32 %r355;
.reg .pred %r356;
.reg .u64 %r359;
.reg .u64 %r360;
.reg .u64 %r361;
.reg .u64 %r362;
.reg .u64 %r363;
.reg .u32 %r364;
.reg .pred %r365;
.reg .u32 %r366;
.reg .pred %r367;
.reg .u64 %r369;
.reg .u64 %r370;
.reg .f32 %r371;
.reg .f32 %r372;
.reg .pred %r373;
.reg .pred %r374;
.reg .u64 %r377;
.reg .u64 %r378;
.reg .u64 %r379;
.reg .u64 %r381;
.reg .u64 %r382;
.reg .u64 %r384;
.reg .u64 %r385;
.reg .u64 %r389;
.reg .u32 %r390;
.reg .u64 %r391;
.reg .u64 %r392;
.reg .f32 %r394;
.reg .u32 %r395;
.reg .u32 %r397;
.reg .f32 %r398;
.reg .pred %r399;
.reg .f32 %r402;
.reg .f32 %r404;
.reg .f32 %r405;
.reg .f32 %r407;
.reg .u64 %r409;
.reg .u64 %r410;
.reg .u64 %r411;
.reg .u64 %r412;
.reg .u32 %r413;
.reg .u32 %r414;
.reg .u32 %r419;
.reg .u32 %r420;
.reg .u32 %r422;
.reg .u64 %r423;
.reg .u64 %r424;
.reg .u64 %r425;
.reg .u32 %r427;
.reg .pred %r428;
.reg .pred %r429;
.reg .pred %r431;
.reg .pred %r432;
.reg .pred %r434;
.reg .pred %r435;
.reg .u64 %r436;
.reg .u64 %r437;
.reg .u64 %r438;
.reg .u32 %r440;
.reg .u32 %r441;
.reg .pred %r442;
.reg .u64 %r443;
.reg .u64 %r444;
.reg .u64 %r445;
.reg .u32 %r449;
.reg .u32 %r450;
.reg .u64 %r451;
.reg .u64 %r452;
.reg .u64 %r453;
.reg .u32 %r456;
.reg .u32 %r457;
.reg .pred %r458;
.reg .u64 %r462;
.reg .u64 %r463;
.reg .u64 %r464;
.reg .u64 %r465;
.reg .u32 %r470;
.reg .u32 %r471;
.reg .u64 %r472;
.reg .u64 %r473;
.reg .u64 %r474;
.reg .u64 %r475;
.reg .u32 %r480;
.reg .u32 %r481;
.reg .pred %r482;
.reg .f32 %r483;
.reg .pred %r484;
.reg .f32 %r487;
.reg .pred %r488;
.reg .pred %r489;
.reg .u64 %r492;
.reg .u64 %r495;
.reg .u32 %r496;
.reg .u32 %r497;
.reg .u64 %r498;
.reg .u64 %r499;
.reg .u32 %r500;
.reg .pred %r501;
.reg .pred %r502;
.reg .u32 %r508;
.reg .pred %r509;
.reg .u32 %r510;
.reg .pred %r511;
.reg .u64 %r512;
.reg .u64 %r513;
.reg .u64 %r514;
.reg .u32 %r515;
.reg .u64 %r517;
.reg .u64 %r519;
.reg .u64 %r520;
.reg .u64 %r521;
.reg .u32 %r522;
.reg .f32 %r525;
.reg .pred %r526;
.reg .u64 %r527;
.reg .u64 %r528;
.reg .u32 %r529;
.reg .pred %r530;
.reg .u64 %r531;
.reg .u64 %r532;
.reg .u64 %r533;
.reg .u32 %r535;
.reg .pred %r536;
.reg .u64 %r540;
.reg .u32 %r541;
.reg .pred %r542;
.reg .u32 %r545;
.reg .f32 %r546;
.reg .pred %r547;
.reg .f32 %r548;
.reg .u32 %r549;
.reg .u64 %r552;
.reg .u64 %r553;
.reg .u32 %r555;
.reg .u64 %r556;
.reg .u64 %r557;
.reg .u64 %r558;
.reg .u32 %r560;
.reg .u64 %r562;
.reg .u64 %r563;
.reg .u32 %r565;
.reg .f32 %r566;
.reg .f32 %r568;
.reg .pred %r569;
.reg .f32 %r572;
.reg .u32 %r573;
.reg .f32 %r574;
.reg .pred %r575;
.reg .f32 %r576;
.reg .pred %r577;
.reg .pred %r578;
.reg .pred %r579;
.reg .pred %r581;
.reg .pred %r582;
.reg .u64 %r584;
.reg .u64 %r585;
.reg .u64 %r587;
.reg .f32 %r588;
.reg .pred %r589;
.reg .pred %r590;
.reg .f32 %r591;
.reg .pred %r592;
.reg .f32 %r594;
.reg .f32 %r595;
.reg .pred %r596;
.reg .f32 %r598;
.reg .pred %r599;
.reg .u64 %r602;
.reg .u64 %r603;
.reg .u64 %r607;
.reg .u64 %r610;
.reg .u32 %r611;
.reg .u64 %r612;
.reg .u64 %r613;
.reg .f32 %r614;
.reg .f32 %r615;
.reg .pred %r616;
.reg .u64 %r618;
.reg .u64 %r619;
.reg .u64 %r623;
.reg .u32 %r624;
.reg .u64 %r625;
.reg .u64 %r627;
.reg .f32 %r628;
.reg .f32 %r629;
.reg .pred %r630;
.reg .u64 %r632;
.reg .u64 %r633;
.reg .f32 %r634;
.reg .pred %r635;
.reg .pred %r636;
.reg .f32 %r637;
.reg .f32 %r638;
.reg .f32 %r639;
.reg .u32 %r640;
.reg .f32 %r641;
.reg .pred %r642;
.reg .pred %r643;
.reg .pred %r644;
.reg .pred %r645;
.reg .pred %r646;
.reg .pred %r647;
.reg .pred %r648;
.reg .pred %r649;
.reg .pred %r650;
.reg .pred %r651;
.reg .f32 %r652;
.reg .u64 %r660;
.reg .u64 %r661;
.reg .u64 %r662;
.reg .u64 %r663;
.reg .u64 %r664;
.reg .u32 %r665;
.reg .pred %r666;
.reg .pred %r667;
.reg .pred %r668;
.reg .pred %r669;
.reg .pred %r671;
.reg .f32 %r672;
.reg .u64 %r673;
.reg .u64 %r674;
.reg .pred %r675;
.reg .pred %r676;
.reg .pred %r677;
.reg .u64 %r678;
.reg .u32 %r679;
.reg .u64 %r680;
.reg .u64 %r681;
.reg .u64 %r682;
.reg .u64 %r683;
.reg .u64 %r684;
.reg .pred %r685;
.reg .u64 %r686;
.reg .f32 %r687;
mov.u64 %r337,%ar0;
mov.u64 %r338,%ar1;
mov.u32 %r339,%ar2;
mov.u32 %r340,%ar3;
mov.u32 %r341,%ar4;
mov.u64 %r342,%ar5;
.loc 1 66 5
cvta.const.u64 %r343,init_jk;
cvt.s64.s32 %r344,%r341;
shl.b64 %r345,%r344,2;
add.u64 %r346,%r343,%r345;
ld.u32 %r133,[%r346];
.loc 1 70 5
add.u32 %r665,%r340,-1;
.loc 1 71 19
setp.lt.s32 %r347,%r339,-4;
@ %r347 bra $L76;
.loc 1 71 10
add.u32 %r348,%r339,-3;
.loc 1 71 5
shr.s32 %r351,%r348,31;
and.b32 %r352,%r351,7;
add.u32 %r353,%r352,%r348;
shr.s32 %r117,%r353,3;
.loc 1 72 16
add.u32 %r355,%r117,1;
.loc 1 72 12
shl.b32 %r187,%r355,3;
bra $L2;
$L76:
mov.u32 %r187,8;
.loc 1 71 28
mov.u32 %r117,0;
$L2:
.loc 1 72 5
sub.u32 %r151,%r339,%r187;
.loc 1 75 4
sub.u32 %r169,%r117,%r665;
.loc 1 75 15
add.u32 %r136,%r133,%r665;
.loc 1 76 2
setp.ge.s32 %r356,%r136,0;
@ %r356 bra $L3;
$L8:
.loc 1 79 2
setp.lt.s32 %r669,%r133,0;
@ %r669 bra $L4;
mov.u64 %r319,%frame;
mov.u32 %r320,%r665;
add.u32 %r324,%r133,%r340;
cvt.u64.u32 %r359,%r665;
shl.b64 %r360,%r359,2;
add.u64 %r361,%r337,4;
add.u64 %r318,%r360,%r361;
setp.ge.s32 %r668,%r665,0;
add.u64 %r686,%frame,160;
bra $L5;
$L3:
add.u64 %r325,%frame,160;
cvt.s64.s32 %r362,%r169;
shl.b64 %r363,%r362,2;
add.u64 %r326,%r342,%r363;
add.u32 %r364,%r136,1;
add.u32 %r334,%r364,%r169;
.loc 1 76 43
mov.f32 %r687,0f00000000;
$L7:
setp.lt.s32 %r365,%r169,0;
@ %r365 bra $L77;
ld.u32 %r366,[%r326];
cvt.rn.f32.s32 %r128,%r366;
bra $L6;
$L77:
mov.f32 %r128,%r687;
$L6:
.loc 1 76 29
st.f32 [%r325],%r128;
.loc 1 76 20
add.u32 %r169,%r169,1;
.loc 1 76 2
add.u64 %r325,%r325,4;
add.u64 %r326,%r326,4;
setp.ne.u32 %r367,%r169,%r334;
@ %r367 bra $L7;
bra $L8;
$L10:
cvt.s64.s32 %r369,%r320;
shl.b64 %r370,%r369,2;
add.u64 %r308,%r686,%r370;
.loc 1 80 47
mov.u64 %r307,%r337;
.loc 1 80 16
mov.f32 %r168,0f00000000;
$L9:
.loc 1 80 35
ld.f32 %r371,[%r307];
ld.f32 %r372,[%r308];
fma.rn.f32 %r168,%r371,%r372,%r168;
.loc 1 80 6
add.u64 %r307,%r307,4;
add.u64 %r308,%r308,-4;
setp.ne.u64 %r373,%r307,%r318;
@ %r373 bra $L9;
$L11:
.loc 1 81 11
st.f32 [%r319],%r168;
.loc 1 79 2
add.u64 %r319,%r319,4;
add.u32 %r320,%r320,1;
setp.eq.u32 %r374,%r320,%r324;
@ %r374 bra $L4;
$L5:
.loc 1 80 6
@ %r668 bra $L10;
.loc 1 80 16
mov.f32 %r168,0f00000000;
bra $L11;
$L4:
add.u64 %r661,%frame,240;
cvt.s64.s32 %r377,%r133;
shl.b64 %r378,%r377,2;
add.u64 %r379,%r378,-8;
add.u64 %r259,%r661,%r379;
cvt.u64.u32 %r381,%r665;
shl.b64 %r382,%r381,2;
add.u64 %r235,%r337,%r382;
.loc 1 66 5
mov.u32 %r115,%r133;
setp.le.s32 %r671,%r151,0;
add.u64 %r674,%frame,244;
.loc 1 118 10
setp.eq.u32 %r675,%r151,1;
setp.eq.u32 %r676,%r151,2;
.loc 1 104 9
setp.ne.u32 %r677,%r151,0;
add.u64 %r678,%frame,232;
.loc 1 136 16
add.u32 %r679,%r133,-1;
.loc 1 136 13
cvt.s64.s32 %r680,%r679;
shl.b64 %r681,%r680,2;
add.u64 %r682,%frame,%r681;
add.u64 %r683,%r682,240;
add.u64 %r684,%frame,160;
setp.lt.s32 %r685,%r665,0;
$L12:
.loc 1 87 16
cvt.s64.s32 %r660,%r115;
shl.b64 %r384,%r660,2;
add.u64 %r385,%frame,%r384;
ld.f32 %r167,[%r385];
.loc 1 87 2
setp.le.s32 %r667,%r115,0;
@ %r667 bra $L13;
mov.u64 %r294,%r661;
add.u64 %r389,%r384,-4;
add.u64 %r295,%frame,%r389;
add.u32 %r390,%r115,-1;
cvt.u64.u32 %r391,%r390;
shl.b64 %r392,%r391,2;
add.u64 %r306,%r392,%r674;
$L14:
.loc 1 88 40
mul.f32 %r394,%r167,0f3b800000;
.loc 1 88 23
cvt.rzi.s32.f32 %r395,%r394;
.loc 1 88 12
cvt.rn.f32.s32 %r166,%r395;
.loc 1 89 28
fma.rn.f32 %r38,%r166,0fc3800000,%r167;
.loc 1 89 15
cvt.rzi.s32.f32 %r397,%r38;
st.u32 [%r294],%r397;
.loc 1 90 12
ld.f32 %r398,[%r295];
add.f32 %r167,%r166,%r398;
.loc 1 87 2
add.u64 %r294,%r294,4;
add.u64 %r295,%r295,-4;
setp.ne.u64 %r399,%r294,%r306;
@ %r399 bra $L14;
$L13:
.loc 1 94 7
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r167;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r151;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r402,[%value_in];
}
.loc 1 95 18
mul.f32 %r404,%r402,0f3e000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r404;
call (%value_in),floorf,(%out_arg1);
ld.param.f32 %r405,[%value_in];
}
.loc 1 95 4
fma.rn.f32 %r140,%r405,0fc1000000,%r402;
.loc 1 96 5
cvt.rzi.s32.f32 %r118,%r140;
.loc 1 97 7
cvt.rn.f32.s32 %r407,%r118;
.loc 1 97 4
sub.f32 %r124,%r140,%r407;
.loc 1 99 4
@ %r671 bra $L15;
.loc 1 100 17
add.u32 %r45,%r115,-1;
.loc 1 100 14
cvt.s64.s32 %r409,%r45;
shl.b64 %r410,%r409,2;
add.u64 %r411,%frame,%r410;
add.u64 %r412,%r411,240;
ld.u32 %r46,[%r412];
.loc 1 100 24
mov.u32 %r413,8;
sub.u32 %r47,%r413,%r151;
.loc 1 100 9
shr.s32 %r141,%r46,%r47;
.loc 1 100 33
add.u32 %r118,%r118,%r141;
.loc 1 101 19
shl.b32 %r414,%r141,%r47;
.loc 1 101 15
sub.u32 %r52,%r46,%r414;
st.u32 [%r412],%r52;
.loc 1 102 23
mov.u32 %r420,7;
sub.u32 %r419,%r420,%r151;
.loc 1 102 9
shr.s32 %r112,%r52,%r419;
bra $L16;
$L15:
.loc 1 104 9
@ %r677 bra $L17;
.loc 1 104 27
add.u32 %r422,%r115,-1;
.loc 1 104 24
cvt.s64.s32 %r423,%r422;
shl.b64 %r424,%r423,2;
add.u64 %r425,%frame,%r424;
.loc 1 104 20
ld.u32 %r427,[%r425+240];
shr.s32 %r112,%r427,7;
bra $L16;
$L17:
.loc 1 105 9
setp.ge.f32 %r428,%r124,0f3f000000;
@ %r428 bra $L18;
.loc 1 98 5
mov.u32 %r112,0;
bra $L19;
$L16:
.loc 1 107 4
setp.le.s32 %r429,%r112,0;
@ %r429 bra $L19;
.loc 1 108 8
add.u32 %r118,%r118,1;
.loc 1 109 6
@ ! %r667 bra $L75;
bra $L78;
$L87:
.loc 1 105 27
mov.u32 %r112,2;
$L75:
.loc 1 110 5
ld.u32 %r143,[%frame+240];
.loc 1 112 9
setp.ne.u32 %r431,%r143,0;
@ %r431 bra $L79;
.loc 1 109 6
setp.eq.u32 %r432,%r115,1;
@ %r432 bra $L20;
add.u64 %r292,%frame,244;
.loc 1 109 21
mov.u32 %r139,1;
bra $L22;
$L23:
.loc 1 109 6
add.u64 %r292,%r292,4;
setp.eq.u32 %r434,%r115,%r194;
@ %r434 bra $L20;
mov.u32 %r139,%r194;
$L22:
.loc 1 110 5
ld.u32 %r143,[%r292];
.loc 1 109 21
add.u32 %r194,%r139,1;
.loc 1 112 9
setp.eq.u32 %r435,%r143,0;
@ %r435 bra $L23;
bra $L21;
$L79:
mov.u32 %r194,1;
mov.u32 %r139,0;
$L21:
.loc 1 113 21
cvt.s64.s32 %r436,%r139;
shl.b64 %r437,%r436,2;
add.u64 %r438,%frame,%r437;
.loc 1 113 28
mov.u32 %r441,256;
sub.u32 %r440,%r441,%r143;
.loc 1 113 21
st.u32 [%r438+240],%r440;
.loc 1 109 6
setp.le.s32 %r442,%r115,%r194;
@ %r442 bra $L80;
.loc 1 110 5
cvt.s64.s32 %r443,%r194;
shl.b64 %r444,%r443,2;
add.u64 %r445,%frame,%r444;
ld.u32 %r137,[%r445+240];
add.u64 %r278,%r661,%r444;
add.u32 %r449,%r115,-1;
sub.u32 %r450,%r449,%r194;
cvt.u64.u32 %r451,%r450;
add.u64 %r452,%r451,%r443;
shl.b64 %r453,%r452,2;
add.u64 %r290,%r453,%r674;
.loc 1 115 24
mov.u32 %r457,255;
$L24:
sub.u32 %r456,%r457,%r137;
.loc 1 115 17
st.u32 [%r278],%r456;
.loc 1 109 6
add.u64 %r278,%r278,4;
setp.eq.u64 %r458,%r278,%r290;
@ %r458 bra $L81;
.loc 1 110 5
ld.u32 %r137,[%r278];
bra $L24;
$L78:
.loc 1 108 20
mov.u32 %r143,0;
bra $L20;
$L80:
.loc 1 113 10
mov.u32 %r143,1;
bra $L20;
$L81:
mov.u32 %r143,1;
$L20:
.loc 1 117 8
@ %r671 bra $L25;
.loc 1 118 10
@ %r675 bra $L26;
@ %r676 bra $L27;
bra $L25;
$L26:
.loc 1 120 19
add.u32 %r58,%r115,-1;
cvt.s64.s32 %r462,%r58;
shl.b64 %r463,%r462,2;
add.u64 %r464,%frame,%r463;
add.u64 %r465,%r464,240;
ld.u32 %r471,[%r465];
and.b32 %r470,%r471,127;
st.u32 [%r465],%r470;
.loc 1 120 10
bra $L25;
$L27:
.loc 1 122 19
add.u32 %r61,%r115,-1;
cvt.s64.s32 %r472,%r61;
shl.b64 %r473,%r472,2;
add.u64 %r474,%frame,%r473;
add.u64 %r475,%r474,240;
ld.u32 %r481,[%r475];
and.b32 %r480,%r481,63;
st.u32 [%r475],%r480;
$L25:
.loc 1 125 8
setp.ne.u32 %r482,%r112,2;
@ %r482 bra $L19;
.loc 1 126 5
mov.f32 %r483,0f3f800000;
sub.f32 %r124,%r483,%r124;
.loc 1 127 5
setp.eq.u32 %r484,%r143,0;
@ %r484 bra $L19;
.loc 1 127 21
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r483;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r151;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r487,[%value_in];
}
.loc 1 127 18
sub.f32 %r124,%r124,%r487;
$L19:
.loc 1 132 4
setp.neu.f32 %r488,%r124,0f00000000;
@ %r488 bra $L28;
.loc 1 134 12
add.u32 %r150,%r115,-1;
.loc 1 134 6
setp.gt.s32 %r489,%r133,%r150;
@ %r489 bra $L29;
shl.b64 %r267,%r660,2;
add.u64 %r492,%r267,-4;
add.u64 %r265,%r661,%r492;
add.u64 %r495,%r678,%r267;
not.b32 %r496,%r133;
add.u32 %r497,%r496,%r115;
cvt.u64.u32 %r498,%r497;
shl.b64 %r499,%r498,2;
sub.u64 %r277,%r495,%r499;
.loc 1 133 8
mov.u32 %r48,0;
$L30:
.loc 1 134 31
ld.u32 %r500,[%r265];
or.b32 %r48,%r48,%r500;
.loc 1 134 6
add.u64 %r265,%r265,-4;
setp.ne.u64 %r501,%r265,%r277;
@ %r501 bra $L30;
.loc 1 135 8
setp.ne.u32 %r502,%r48,0;
@ %r502 bra $L31;
$L29:
.loc 1 136 3
ld.u32 %r508,[%r683];
setp.ne.u32 %r509,%r508,0;
@ %r509 bra $L32;
mov.u64 %r258,%r259;
.loc 1 136 8
mov.u32 %r146,1;
$L33:
.loc 1 136 24
add.u32 %r146,%r146,1;
.loc 1 136 3
add.u64 %r258,%r258,-4;
ld.u32 %r510,[%r258+4];
setp.eq.u32 %r511,%r510,0;
@ %r511 bra $L33;
bra $L115;
$L32:
.loc 1 138 8
add.u32 %r144,%r115,1;
.loc 1 138 19
mov.u32 %r175,%r144;
bra $L35;
$L115:
.loc 1 138 8
add.u32 %r144,%r115,1;
.loc 1 138 19
add.u32 %r175,%r115,%r146;
$L35:
cvt.s64.s32 %r237,%r144;
cvt.s64.s32 %r512,%r117;
add.u64 %r513,%r512,%r237;
shl.b64 %r514,%r513,2;
add.u64 %r238,%r342,%r514;
add.u32 %r515,%r665,%r144;
cvt.s64.s32 %r245,%r515;
shl.b64 %r517,%r245,2;
add.u64 %r243,%r684,%r517;
cvt.s64.s32 %r519,%r340;
add.u64 %r520,%r660,%r519;
sub.u64 %r521,%r520,%r245;
shl.b64 %r257,%r521,2;
add.u64 %r673,%r257,-4;
$L38:
.loc 1 139 17
ld.u32 %r522,[%r238];
cvt.rn.f32.s32 %r203,%r522;
.loc 1 139 15
st.f32 [%r243],%r203;
.loc 1 140 7
@ %r685 bra $L82;
add.u64 %r228,%r673,%r243;
mov.u64 %r227,%r337;
.loc 1 140 17
mov.f32 %r145,0f00000000;
$L37:
.loc 1 140 36
ld.f32 %r525,[%r227];
fma.rn.f32 %r145,%r525,%r203,%r145;
.loc 1 140 7
setp.eq.u64 %r526,%r227,%r235;
@ %r526 bra $L36;
.loc 1 140 45
ld.f32 %r203,[%r228];
add.u64 %r227,%r227,4;
add.u64 %r228,%r228,-4;
bra $L37;
$L82:
.loc 1 140 17
mov.f32 %r145,0f00000000;
$L36:
.loc 1 141 12
shl.b64 %r527,%r237,2;
add.u64 %r528,%frame,%r527;
st.f32 [%r528],%r145;
.loc 1 138 3
add.u64 %r237,%r237,1;
add.u64 %r238,%r238,4;
add.u64 %r243,%r243,4;
cvt.u32.u64 %r529,%r237;
setp.ge.s32 %r530,%r175,%r529;
@ %r530 bra $L38;
mov.u32 %r115,%r175;
bra $L12;
$L31:
.loc 1 150 18
add.u32 %r151,%r151,-8;
.loc 1 151 14
cvt.s64.s32 %r531,%r150;
shl.b64 %r532,%r531,2;
add.u64 %r533,%frame,%r532;
.loc 1 151 11
ld.u32 %r535,[%r533+240];
setp.ne.u32 %r536,%r535,0;
@ %r536 bra $L39;
add.u64 %r540,%r532,-4;
add.u64 %r221,%r661,%r540;
$L40:
.loc 1 151 27
add.u32 %r150,%r150,-1;
.loc 1 151 33
add.u32 %r151,%r151,-8;
.loc 1 151 11
add.u64 %r221,%r221,-4;
ld.u32 %r541,[%r221+4];
setp.eq.u32 %r542,%r541,0;
@ %r542 bra $L40;
bra $L39;
$L28:
.loc 1 153 10
sub.u32 %r545,%r187,%r339;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r124;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r545;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r546,[%value_in];
}
.loc 1 154 8
setp.ge.f32 %r547,%r546,0f43800000;
@ ! %r547 bra $L116;
.loc 1 155 33
mul.f32 %r548,%r546,0f3b800000;
.loc 1 155 16
cvt.rzi.s32.f32 %r549,%r548;
.loc 1 155 6
cvt.rn.f32.s32 %r148,%r549;
.loc 1 156 25
fma.rn.f32 %r83,%r148,0fc3800000,%r546;
.loc 1 156 10
shl.b64 %r552,%r660,2;
add.u64 %r553,%frame,%r552;
.loc 1 156 12
cvt.rzi.s32.f32 %r555,%r83;
st.u32 [%r553+240],%r555;
.loc 1 157 6
add.u32 %r150,%r115,1;
.loc 1 157 15
add.u32 %r151,%r151,8;
.loc 1 158 10
cvt.s64.s32 %r556,%r150;
shl.b64 %r557,%r556,2;
add.u64 %r558,%frame,%r557;
.loc 1 158 12
cvt.rzi.s32.f32 %r560,%r148;
st.u32 [%r558+240],%r560;
bra $L39;
$L116:
.loc 1 159 20
shl.b64 %r562,%r660,2;
add.u64 %r563,%frame,%r562;
.loc 1 159 22
cvt.rzi.s32.f32 %r565,%r546;
st.u32 [%r563+240],%r565;
.loc 1 159 20
mov.u32 %r150,%r115;
$L39:
.loc 1 163 7
mov.f32 %r566,0f3f800000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r566;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r151;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r568,[%value_in];
}
mov.f32 %r164,%r568;
.loc 1 164 2
setp.lt.s32 %r569,%r150,0;
@ %r569 bra $L43;
cvt.s64.s32 %r662,%r150;
shl.b64 %r215,%r662,2;
add.u64 %r213,%r661,%r215;
add.u64 %r210,%frame,%r215;
mov.u64 %r217,%r210;
mov.u32 %r165,%r150;
$L44:
.loc 1 165 16
ld.u32 %r573,[%r213];
cvt.rn.f32.s32 %r572,%r573;
.loc 1 165 15
mul.f32 %r574,%r572,%r164;
.loc 1 165 11
st.f32 [%r217],%r574;
.loc 1 165 32
mul.f32 %r164,%r164,0f3b800000;
.loc 1 164 17
add.u32 %r165,%r165,-1;
.loc 1 164 2
add.u64 %r213,%r213,-4;
add.u64 %r217,%r217,-4;
setp.ne.u32 %r575,%r165,-1;
@ %r575 bra $L44;
add.u64 %r664,%frame,80;
mov.u64 %r208,%r664;
mov.u32 %r163,%r150;
mov.u32 %r207,0;
.loc 1 170 6
mov.f32 %r672,0f3fc90000;
bra $L45;
$L47:
.loc 1 170 51
ld.f32 %r196,[%r109];
add.u64 %r109,%r109,4;
$L49:
.loc 1 170 44
ld.f32 %r576,[%r90];
fma.rn.f32 %r161,%r576,%r196,%r161;
.loc 1 170 37
add.u32 %r162,%r162,1;
.loc 1 170 6
setp.lt.s32 %r577,%r133,%r162;
@ %r577 bra $L46;
.loc 1 170 26
add.u64 %r90,%r90,4;
setp.le.s32 %r578,%r162,%r207;
@ %r578 bra $L47;
bra $L46;
$L83:
.loc 1 170 12
mov.f32 %r161,0f00000000;
$L46:
.loc 1 171 15
st.f32 [%r208],%r161;
.loc 1 169 17
add.u32 %r163,%r163,-1;
.loc 1 169 2
add.u32 %r207,%r207,1;
add.u64 %r208,%r208,4;
add.u64 %r210,%r210,-4;
setp.eq.u32 %r579,%r163,-1;
@ %r579 bra $L48;
$L45:
.loc 1 170 6
@ %r669 bra $L83;
cvta.const.u64 %r109,PIo2+4;
mov.u64 %r90,%r210;
mov.f32 %r196,%r672;
.loc 1 170 12
mov.f32 %r161,0f00000000;
.loc 1 170 18
mov.u32 %r162,0;
bra $L49;
$L71:
.loc 1 191 3
setp.ne.u32 %r581,%r150,0;
@ %r581 bra $L50;
bra $L117;
$L118:
.loc 1 196 3
setp.gt.s32 %r582,%r150,1;
@ %r582 bra $L51;
$L117:
.loc 1 201 10
mov.f32 %r152,0f00000000;
bra $L52;
$L69:
add.u64 %r182,%r664,%r215;
add.u64 %r584,%r664,-4;
add.u64 %r585,%r584,%r215;
shl.b64 %r587,%r662,2;
sub.u64 %r174,%r585,%r587;
.loc 1 175 2
mov.f32 %r160,0f00000000;
$L53:
.loc 1 178 26
ld.f32 %r588,[%r182];
add.f32 %r160,%r160,%r588;
.loc 1 178 3
add.u64 %r182,%r182,-4;
setp.ne.u64 %r589,%r174,%r182;
@ %r589 bra $L53;
bra $L74;
$L85:
.loc 1 175 2
mov.f32 %r160,0f00000000;
$L74:
.loc 1 179 21
setp.eq.u32 %r590,%r112,0;
@ %r590 bra $L54;
neg.f32 %r160,%r160;
$L54:
.loc 1 179 8
st.f32 [%r338],%r160;
.loc 1 180 3
bra $L55;
$L56:
.loc 1 184 26
ld.f32 %r591,[%r170];
add.f32 %r159,%r159,%r591;
.loc 1 184 3
add.u64 %r170,%r170,-4;
setp.ne.u64 %r592,%r126,%r170;
@ %r592 bra $L56;
bra $L73;
$L84:
.loc 1 183 6
mov.f32 %r159,0f00000000;
$L73:
.loc 1 185 21
setp.eq.u32 %r666,%r112,0;
@ %r666 bra $L57;
neg.f32 %r594,%r159;
.loc 1 185 8
st.f32 [%r338],%r594;
.loc 1 186 6
ld.f32 %r595,[%frame+80];
sub.f32 %r127,%r595,%r159;
.loc 1 187 3
setp.le.s32 %r596,%r150,0;
@ %r596 bra $L58;
$L66:
add.u64 %r173,%frame,84;
.loc 1 187 9
mov.u32 %r158,1;
$L59:
.loc 1 187 26
ld.f32 %r598,[%r173];
add.f32 %r127,%r127,%r598;
.loc 1 187 19
add.u32 %r158,%r158,1;
.loc 1 187 3
add.u64 %r173,%r173,4;
setp.ge.s32 %r599,%r150,%r158;
@ %r599 bra $L59;
.loc 1 188 21
@ %r666 bra $L60;
$L58:
neg.f32 %r127,%r127;
$L60:
.loc 1 188 8
st.f32 [%r338+4],%r127;
.loc 1 189 3
bra $L55;
$L50:
.loc 1 192 27
shl.b64 %r602,%r662,2;
add.u64 %r603,%frame,%r602;
ld.f32 %r154,[%r603+80];
add.u64 %r607,%r602,-4;
add.u64 %r195,%r664,%r607;
add.u64 %r663,%frame,72;
add.u64 %r610,%r663,%r602;
add.u32 %r611,%r150,-1;
cvt.u64.u32 %r612,%r611;
shl.b64 %r613,%r612,2;
sub.u64 %r149,%r610,%r613;
$L61:
.loc 1 192 19
ld.f32 %r100,[%r195];
mov.f32 %r93,%r154;
.loc 1 192 15
add.f32 %r154,%r154,%r100;
.loc 1 193 24
sub.f32 %r614,%r100,%r154;
.loc 1 193 14
add.f32 %r615,%r614,%r93;
st.f32 [%r195+4],%r615;
.loc 1 194 15
st.f32 [%r195],%r154;
.loc 1 191 3
add.u64 %r195,%r195,-4;
setp.ne.u64 %r616,%r149,%r195;
@ %r616 bra $L61;
bra $L118;
$L51:
.loc 1 197 27
shl.b64 %r618,%r662,2;
add.u64 %r619,%frame,%r618;
ld.f32 %r153,[%r619+80];
add.u64 %r623,%r618,-4;
add.u64 %r116,%r664,%r623;
add.u32 %r624,%r150,-2;
cvt.u64.u32 %r625,%r624;
shl.b64 %r202,%r625,2;
add.u64 %r627,%r663,%r618;
sub.u64 %r200,%r627,%r202;
$L63:
.loc 1 197 19
ld.f32 %r104,[%r116];
mov.f32 %r78,%r153;
.loc 1 197 15
add.f32 %r153,%r153,%r104;
.loc 1 198 24
sub.f32 %r628,%r104,%r153;
.loc 1 198 14
add.f32 %r629,%r628,%r78;
st.f32 [%r116+4],%r629;
.loc 1 199 15
st.f32 [%r116],%r153;
.loc 1 196 3
add.u64 %r116,%r116,-4;
setp.ne.u64 %r630,%r116,%r200;
@ %r630 bra $L63;
add.u64 %r125,%r664,%r618;
add.u64 %r632,%r664,-4;
add.u64 %r633,%r632,%r618;
sub.u64 %r119,%r633,%r202;
mov.f32 %r152,0f00000000;
$L64:
.loc 1 201 33
ld.f32 %r634,[%r125];
add.f32 %r152,%r152,%r634;
.loc 1 201 3
add.u64 %r125,%r125,-4;
setp.ne.u64 %r635,%r119,%r125;
@ %r635 bra $L64;
bra $L52;
$L86:
.loc 1 201 10
mov.f32 %r152,0f00000000;
$L52:
.loc 1 203 17
ld.f32 %r197,[%frame+80];
.loc 1 203 32
ld.f32 %r198,[%frame+84];
.loc 1 202 5
setp.ne.u32 %r636,%r112,0;
@ %r636 bra $L65;
.loc 1 203 12
st.f32 [%r338],%r197;
.loc 1 203 27
st.f32 [%r338+4],%r198;
.loc 1 203 42
st.f32 [%r338+8],%r152;
bra $L55;
$L65:
.loc 1 205 14
neg.f32 %r637,%r197;
.loc 1 205 12
st.f32 [%r338],%r637;
.loc 1 205 29
neg.f32 %r638,%r198;
.loc 1 205 27
st.f32 [%r338+4],%r638;
.loc 1 205 44
neg.f32 %r639,%r152;
.loc 1 205 42
st.f32 [%r338+8],%r639;
$L55:
.loc 1 208 10
and.b32 %r640,%r118,7;
bra $L119;
$L57:
.loc 1 185 8
st.f32 [%r338],%r159;
.loc 1 186 6
ld.f32 %r641,[%frame+80];
sub.f32 %r127,%r641,%r159;
.loc 1 187 3
setp.gt.s32 %r642,%r150,0;
@ %r642 bra $L66;
bra $L60;
$L48:
.loc 1 175 2
setp.gt.s32 %r643,%r341,2;
@ %r643 bra $L67;
setp.gt.s32 %r644,%r341,0;
@ %r644 bra $L68;
setp.eq.u32 %r645,%r341,0;
@ %r645 bra $L69;
bra $L55;
$L67:
setp.eq.u32 %r646,%r341,3;
@ %r646 bra $L71;
bra $L55;
$L43:
setp.gt.s32 %r647,%r341,2;
@ %r647 bra $L72;
setp.gt.s32 %r648,%r341,0;
@ %r648 bra $L84;
setp.eq.u32 %r649,%r341,0;
@ %r649 bra $L85;
bra $L55;
$L72:
setp.eq.u32 %r650,%r341,3;
@ %r650 bra $L86;
bra $L55;
$L18:
.loc 1 108 8
add.u32 %r118,%r118,1;
.loc 1 109 6
setp.gt.s32 %r651,%r115,0;
@ %r651 bra $L87;
.loc 1 126 5
mov.f32 %r652,0f3f800000;
sub.f32 %r124,%r652,%r124;
mov.u32 %r112,2;
bra $L19;
$L68:
shl.b64 %r156,%r662,2;
add.u64 %r170,%r664,%r156;
add.u64 %r126,%frame,76;
.loc 1 183 6
mov.f32 %r159,0f00000000;
bra $L56;
$L119:
.loc 1 209 1
mov.u32 %value,%r640;
st.param.u32 [%value_out],%value;
ret;
}

lib_a-kf_sin.o/ 1612277259  0     0     100666  2197      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_sinf
.visible .func (.param .f32 %value_out) __kernel_sinf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
.file 1 "../../../../../newlib/libm/math/kf_sin.c"
// BEGIN GLOBAL FUNCTION DEF: __kernel_sinf
.visible .func (.param .f32 %value_out) __kernel_sinf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .u32 %r31;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .pred %r44;
.reg .u32 %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
mov.f32 %r40,%ar0;
mov.f32 %r41,%ar1;
mov.u32 %r42,%ar2;
.loc 1 40 2
mov.b32 %r31,%r40;
.loc 1 41 5
and.b32 %r43,%r31,2147483647;
.loc 1 42 4
setp.gt.s32 %r44,%r43,838860799;
@ %r44 bra $L2;
.loc 1 43 9
cvt.rzi.s32.f32 %r45,%r40;
.loc 1 43 8
setp.eq.u32 %r46,%r45,0;
@ %r46 bra $L5;
$L2:
.loc 1 44 4
mul.f32 %r34,%r40,%r40;
.loc 1 45 4
mul.f32 %r35,%r40,%r34;
.loc 1 46 27
fma.rn.f32 %r23,%r34,0f2f2ec9d3,0fb2d72f34;
.loc 1 46 21
fma.rn.f32 %r24,%r23,%r34,0f3638ef1b;
.loc 1 46 15
fma.rn.f32 %r25,%r24,%r34,0fb9500d01;
.loc 1 46 4
fma.rn.f32 %r36,%r25,%r34,0f3c088889;
.loc 1 47 4
setp.ne.u32 %r47,%r42,0;
@ %r47 bra $L4;
.loc 1 47 26
fma.rn.f32 %r26,%r34,%r36,0fbe2aaaab;
.loc 1 47 20
fma.rn.f32 %r39,%r26,%r35,%r40;
bra $L1;
$L4:
.loc 1 48 34
mul.f32 %r48,%r35,%r36;
.loc 1 48 32
neg.f32 %r49,%r48;
fma.rn.f32 %r28,%r41,0f3f000000,%r49;
.loc 1 48 37
neg.f32 %r50,%r41;
fma.rn.f32 %r29,%r28,%r34,%r50;
.loc 1 48 40
fma.rn.f32 %r30,%r35,0f3e2aaaab,%r29;
.loc 1 48 20
sub.f32 %r39,%r40,%r30;
bra $L1;
$L5:
.loc 1 43 27
mov.f32 %r39,%r40;
$L1:
.loc 1 49 1
mov.f32 %value,%r39;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-kf_tan.o/ 1612277259  0     0     100666  5206      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __kernel_tanf
.visible .func (.param .f32 %value_out) __kernel_tanf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
.file 1 "../../../../../newlib/libm/math/kf_tan.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __kernel_tanf
.visible .func (.param .f32 %value_out) __kernel_tanf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %ar2;
ld.param.u32 %ar2,[%in_ar2];
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r46;
.reg .f32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .f32 %r55;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .u32 %r74;
.reg .pred %r75;
.reg .u32 %r76;
.reg .pred %r77;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .pred %r80;
.reg .f32 %r82;
.reg .f32 %r83;
.reg .pred %r84;
.reg .f32 %r85;
.reg .pred %r87;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .f32 %r90;
.reg .f32 %r92;
.reg .f32 %r93;
.reg .f32 %r94;
.reg .f32 %r95;
.reg .f32 %r96;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .u32 %r100;
.reg .u32 %r101;
.reg .f32 %r102;
.reg .pred %r103;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .f32 %r106;
.reg .f32 %r107;
.reg .u32 %r108;
.reg .u32 %r109;
.reg .pred %r111;
mov.f32 %r72,%ar0;
mov.f32 %r73,%ar1;
mov.u32 %r74,%ar2;
.loc 1 50 2
mov.b32 %r51,%r72;
.loc 1 51 5
and.b32 %r52,%r51,2147483647;
.loc 1 52 4
setp.gt.s32 %r75,%r52,830472191;
@ %r75 bra $L2;
.loc 1 53 10
cvt.rzi.s32.f32 %r76,%r72;
.loc 1 53 9
setp.ne.u32 %r77,%r76,0;
@ ! %r77 bra $L13;
setp.le.s32 %r111,%r52,1059889471;
bra $L3;
$L13:
.loc 1 54 13
add.u32 %r78,%r74,1;
.loc 1 54 9
or.b32 %r79,%r78,%r52;
.loc 1 54 5
setp.ne.u32 %r80,%r79,0;
@ %r80 bra $L4;
.loc 1 54 33
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r72;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r82,[%value_in];
}
.loc 1 54 32
mov.f32 %r83,0f3f800000;
div.rn.f32 %r71,%r83,%r82;
bra $L1;
$L4:
.loc 1 55 25
setp.eq.u32 %r84,%r74,1;
@ %r84 bra $L8;
mov.f32 %r85,0fbf800000;
div.rn.f32 %r71,%r85,%r72;
bra $L1;
$L2:
.loc 1 58 4
setp.le.s32 %r111,%r52,1059889471;
@ %r111 bra $L3;
.loc 1 59 8
setp.ge.s32 %r87,%r51,0;
@ %r87 bra $L6;
.loc 1 59 18
neg.f32 %r72,%r72;
.loc 1 59 26
neg.f32 %r73,%r73;
$L6:
.loc 1 60 8
mov.f32 %r88,0f3f490fda;
sub.f32 %r55,%r88,%r72;
.loc 1 61 8
mov.f32 %r90,0f33222168;
sub.f32 %r89,%r90,%r73;
.loc 1 62 8
add.f32 %r72,%r89,%r55;
.loc 1 62 17
mov.f32 %r73,0f00000000;
$L3:
.loc 1 64 4
mul.f32 %r58,%r72,%r72;
.loc 1 65 5
mul.f32 %r59,%r58,%r58;
.loc 1 70 42
fma.rn.f32 %r26,%r59,0fb79bae5f,0f38a3f445;
.loc 1 70 34
fma.rn.f32 %r27,%r26,%r59,0f3a1a26c8;
.loc 1 70 26
fma.rn.f32 %r28,%r27,%r59,0f3b6b6916;
.loc 1 70 18
fma.rn.f32 %r29,%r28,%r59,0f3cb327a4;
.loc 1 70 4
fma.rn.f32 %r60,%r29,%r59,0f3e088889;
.loc 1 71 46
fma.rn.f32 %r30,%r59,0f37d95384,0f3895c07a;
.loc 1 71 37
fma.rn.f32 %r31,%r30,%r59,0f398137b9;
.loc 1 71 29
fma.rn.f32 %r32,%r31,%r59,0f3abede48;
.loc 1 71 21
fma.rn.f32 %r33,%r32,%r59,0f3c11371f;
.loc 1 71 13
fma.rn.f32 %r34,%r33,%r59,0f3d5d0dd1;
.loc 1 72 4
mul.f32 %r61,%r72,%r58;
.loc 1 73 17
fma.rn.f32 %r35,%r34,%r58,%r60;
.loc 1 73 20
fma.rn.f32 %r36,%r35,%r61,%r73;
.loc 1 73 4
fma.rn.f32 %r62,%r36,%r58,%r73;
.loc 1 74 4
fma.rn.f32 %r63,%r61,0f3eaaaaab,%r62;
.loc 1 75 4
add.f32 %r71,%r72,%r63;
.loc 1 76 4
@ %r111 bra $L7;
.loc 1 77 8
cvt.rn.f32.s32 %r69,%r74;
.loc 1 78 56
mul.f32 %r92,%r71,%r71;
.loc 1 78 61
add.f32 %r93,%r71,%r69;
.loc 1 78 58
div.rn.f32 %r94,%r92,%r93;
.loc 1 78 64
sub.f32 %r95,%r94,%r63;
.loc 1 78 53
sub.f32 %r96,%r72,%r95;
.loc 1 78 39
fma.rn.f32 %r46,%r96,0fc0000000,%r69;
.loc 1 78 27
shr.s32 %r98,%r51,30;
.loc 1 78 32
and.b32 %r99,%r98,2;
.loc 1 78 22
mov.u32 %r101,1;
sub.u32 %r100,%r101,%r99;
.loc 1 78 13
cvt.rn.f32.s32 %r102,%r100;
.loc 1 78 36
mul.f32 %r71,%r102,%r46;
bra $L1;
$L7:
.loc 1 80 4
setp.eq.u32 %r103,%r74,1;
@ %r103 bra $L1;
.loc 1 88 6
mov.b32 %r105,%r71;
and.b32 %r104,%r105,-4096;
mov.b32 %r64,%r104;
.loc 1 89 16
sub.f32 %r106,%r64,%r72;
.loc 1 89 9
sub.f32 %r65,%r63,%r106;
.loc 1 90 13
mov.f32 %r107,0fbf800000;
div.rn.f32 %r66,%r107,%r71;
.loc 1 92 6
mov.b32 %r109,%r66;
and.b32 %r108,%r109,-4096;
mov.b32 %r67,%r108;
.loc 1 93 9
fma.rn.f32 %r68,%r64,%r67,0f3f800000;
.loc 1 94 19
fma.rn.f32 %r50,%r65,%r67,%r68;
.loc 1 94 14
fma.rn.f32 %r71,%r50,%r66,%r67;
bra $L1;
$L8:
.loc 1 55 25
mov.f32 %r71,%r72;
$L1:
.loc 1 96 1
mov.f32 %value,%r71;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-ldexpl.o/ 1612277260  0     0     100666  1046      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ldexpl
.visible .func (.param .f64 %value_out) ldexpl (.param .f64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/ldexpl.c"
// BEGIN GLOBAL FUNCTION DECL: ldexp
.extern .func (.param .f64 %value_out) ldexp (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: ldexpl
.visible .func (.param .f64 %value_out) ldexpl (.param .f64 %in_ar0, .param .u32 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u32 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u32 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r24;
call (%value_in),ldexp,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-lgammal.o/1612277260  0     0     100666  841       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lgammal
.visible .func (.param .f64 %value_out) lgammal (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/lgammal.c"
// BEGIN GLOBAL FUNCTION DECL: lgamma
.extern .func (.param .f64 %value_out) lgamma (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: lgammal
.visible .func (.param .f64 %value_out) lgammal (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lgamma,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-llrintl.o/1612277260  0     0     100666  838       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llrintl
.visible .func (.param .u64 %value_out) llrintl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/llrintl.c"
// BEGIN GLOBAL FUNCTION DECL: lrint
.extern .func (.param .u64 %value_out) lrint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: llrintl
.visible .func (.param .u64 %value_out) llrintl (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .u64 %r26;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .u64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lrint,(%out_arg1);
ld.param.u64 %r26,[%value_in];
}
.loc 1 40 1
mov.u64 %value,%r26;
st.param.u64 [%value_out],%value;
ret;
}
/706            1612277260  0     0     100666  846       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llroundl
.visible .func (.param .u64 %value_out) llroundl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/llroundl.c"
// BEGIN GLOBAL FUNCTION DECL: lround
.extern .func (.param .u64 %value_out) lround (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: llroundl
.visible .func (.param .u64 %value_out) llroundl (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .u64 %r26;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .u64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lround,(%out_arg1);
ld.param.u64 %r26,[%value_in];
}
.loc 1 40 1
mov.u64 %value,%r26;
st.param.u64 [%value_out],%value;
ret;
}
lib_a-log.o/    1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-log10l.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log10l
.visible .func (.param .f64 %value_out) log10l (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/log10l.c"
// BEGIN GLOBAL FUNCTION DECL: log10
.extern .func (.param .f64 %value_out) log10 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log10l
.visible .func (.param .f64 %value_out) log10l (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),log10,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-log1pl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log1pl
.visible .func (.param .f64 %value_out) log1pl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/log1pl.c"
// BEGIN GLOBAL FUNCTION DECL: log1p
.extern .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log1pl
.visible .func (.param .f64 %value_out) log1pl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),log1p,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-log2.o/   1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/724            1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-log2l.o/  1612277260  0     0     100666  844       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log2l
.visible .func (.param .f64 %value_out) log2l (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/log2l.c"
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log2l
.visible .func (.param .f64 %value_out) log2l (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r26;
mov.f64 %r24,%ar0;
.loc 1 35 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r26,[%value_in];
}
div.rn.f64 %value,%r26,0d3fe62e42fefa39ef;
.loc 1 36 1
st.param.f64 [%value_out],%value;
ret;
}
/743            1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-logbl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: logbl
.visible .func (.param .f64 %value_out) logbl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/logbl.c"
// BEGIN GLOBAL FUNCTION DECL: logb
.extern .func (.param .f64 %value_out) logb (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: logbl
.visible .func (.param .f64 %value_out) logbl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 35 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),logb,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 36 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-logl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: logl
.visible .func (.param .f64 %value_out) logl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/logl.c"
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: logl
.visible .func (.param .f64 %value_out) logl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-lrintl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lrintl
.visible .func (.param .u64 %value_out) lrintl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/lrintl.c"
// BEGIN GLOBAL FUNCTION DECL: lrint
.extern .func (.param .u64 %value_out) lrint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: lrintl
.visible .func (.param .u64 %value_out) lrintl (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .u64 %r26;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .u64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lrint,(%out_arg1);
ld.param.u64 %r26,[%value_in];
}
.loc 1 40 1
mov.u64 %value,%r26;
st.param.u64 [%value_out],%value;
ret;
}

lib_a-lroundl.o/1612277260  0     0     100666  841       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lroundl
.visible .func (.param .u64 %value_out) lroundl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/lroundl.c"
// BEGIN GLOBAL FUNCTION DECL: lround
.extern .func (.param .u64 %value_out) lround (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: lroundl
.visible .func (.param .u64 %value_out) lroundl (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .u64 %r26;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .u64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lround,(%out_arg1);
ld.param.u64 %r26,[%value_in];
}
.loc 1 40 1
mov.u64 %value,%r26;
st.param.u64 [%value_out],%value;
ret;
}

/761            1612277260  0     0     100666  8184      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: with_errno
.func (.param .f64 %value_out) with_errno (.param .f64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/math_err.c"
// BEGIN FUNCTION DECL: xflow
.func (.param .f64 %value_out) xflow (.param .u32 %in_ar0, .param .f64 %in_ar1);
.file 2 "../../../../../newlib/libm/common/math_config.h"
// BEGIN GLOBAL FUNCTION DECL: __math_uflow
.visible .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_may_uflow
.visible .func (.param .f64 %value_out) __math_may_uflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflow
.visible .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_divzero
.visible .func (.param .f64 %value_out) __math_divzero (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_invalid
.visible .func (.param .f64 %value_out) __math_invalid (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_check_uflow
.visible .func (.param .f64 %value_out) __math_check_uflow (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_check_oflow
.visible .func (.param .f64 %value_out) __math_check_oflow (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN FUNCTION DEF: with_errno
.func (.param .f64 %value_out) with_errno (.param .f64 %in_ar0, .param .u32 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f64 %r24;
.reg .u32 %r25;
.reg .u64 %r26;
mov.f64 %r24,%ar0;
mov.u32 %r25,%ar1;
.loc 1 38 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r26,[%value_in];
}
.loc 1 38 9
st.u32 [%r26],%r25;
.loc 1 40 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: xflow
.func (.param .f64 %value_out) xflow (.param .u32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r22;
.reg .f64 %r24;
.reg .u32 %r26;
.reg .f64 %r27;
.reg .pred %r28;
.reg .u32 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
mov.u32 %r26,%ar0;
mov.f64 %r27,%ar1;
.loc 1 49 7
setp.eq.u32 %r28,%r26,0;
@ %r28 bra $L4;
neg.f64 %r22,%r27;
bra $L3;
$L4:
mov.f64 %r22,%r27;
$L3:
.loc 2 222 19
st.f64 [%frame],%r22;
.loc 2 223 10
ld.f64 %r24,[%frame];
.loc 1 49 5
mul.f64 %r31,%r27,%r24;
.loc 1 50 10
mov.u32 %r30,34;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r31;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r30;
call (%value_in),with_errno,(%out_arg1,%out_arg2);
ld.param.f64 %r32,[%value_in];
}
.loc 1 51 1
mov.f64 %value,%r32;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_uflow
.visible .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f64 %r25;
.reg .f64 %r26;
mov.u32 %r23,%ar0;
.loc 1 56 10
mov.f64 %r25,0d1000000000000000;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
call (%value_in),xflow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 57 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_may_uflow
.visible .func (.param .f64 %value_out) __math_may_uflow (.param .u32 %in_ar0)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f64 %r25;
.reg .f64 %r26;
mov.u32 %r23,%ar0;
.loc 1 65 10
mov.f64 %r25,0d1e58000000000000;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
call (%value_in),xflow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 66 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_oflow
.visible .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f64 %r25;
.reg .f64 %r26;
mov.u32 %r23,%ar0;
.loc 1 72 10
mov.f64 %r25,0d7000000000000000;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r25;
call (%value_in),xflow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 73 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_divzero
.visible .func (.param .f64 %value_out) __math_divzero (.param .u32 %in_ar0)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .f64 %r22;
.reg .f64 %r24;
.reg .u32 %r26;
.reg .pred %r27;
.reg .u32 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
mov.u32 %r26,%ar0;
.loc 1 78 14
setp.ne.u32 %r27,%r26,0;
selp.f64 %r22,0dbff0000000000000,0d3ff0000000000000,%r27;
.loc 2 222 19
st.f64 [%frame],%r22;
.loc 2 223 10
ld.f64 %r24,[%frame];
.loc 1 78 10
div.rn.f64 %r30,%r24,0d0000000000000000;
.loc 1 79 10
mov.u32 %r29,34;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r29;
call (%value_in),with_errno,(%out_arg1,%out_arg2);
ld.param.f64 %r31,[%value_in];
}
.loc 1 80 1
mov.f64 %value,%r31;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_invalid
.visible .func (.param .f64 %value_out) __math_invalid (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r22;
.reg .f64 %r23;
.reg .f64 %r24;
.reg .pred %r25;
.reg .u32 %r27;
.reg .f64 %r28;
mov.f64 %r24,%ar0;
.loc 1 85 17
sub.f64 %r22,%r24,%r24;
.loc 1 85 10
div.rn.f64 %r23,%r22,%r22;
.loc 1 86 24
setp.nan.f64 %r25,%r24,%r24;
@ %r25 bra $L11;
.loc 1 86 26
mov.u32 %r27,33;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r27;
call (%value_in),with_errno,(%out_arg1,%out_arg2);
ld.param.f64 %r28,[%value_in];
}
mov.f64 %r23,%r28;
$L11:
.loc 1 87 1
mov.f64 %value,%r23;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_check_uflow
.visible .func (.param .f64 %value_out) __math_check_uflow (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .pred %r24;
.reg .u32 %r26;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
.loc 1 94 44
setp.neu.f64 %r24,%r23,0d0000000000000000;
@ %r24 bra $L14;
.loc 1 94 21
mov.u32 %r26,34;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r26;
call (%value_in),with_errno,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r23,%r27;
$L14:
.loc 1 95 1
mov.f64 %value,%r23;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_check_oflow
.visible .func (.param .f64 %value_out) __math_check_oflow (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .pred %r26;
.reg .u32 %r28;
.reg .f64 %r29;
mov.f64 %r24,%ar0;
.loc 1 100 10
abs.f64 %r25,%r24;
.loc 1 100 45
setp.leu.f64 %r26,%r25,0d7fefffffffffffff;
@ %r26 bra $L16;
.loc 1 100 22
mov.u32 %r28,34;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r28;
call (%value_in),with_errno,(%out_arg1,%out_arg2);
ld.param.f64 %r29,[%value_in];
}
mov.f64 %r24,%r29;
$L16:
.loc 1 101 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
/779            1612277260  0     0     100666  5192      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN FUNCTION DECL: with_errnof
.func (.param .f32 %value_out) with_errnof (.param .f32 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/math_errf.c"
// BEGIN FUNCTION DECL: xflowf
.func (.param .f32 %value_out) xflowf (.param .u32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __math_uflowf
.visible .func (.param .f32 %value_out) __math_uflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_oflowf
.visible .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_divzerof
.visible .func (.param .f32 %value_out) __math_divzerof (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_invalidf
.visible .func (.param .f32 %value_out) __math_invalidf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN FUNCTION DEF: with_errnof
.func (.param .f32 %value_out) with_errnof (.param .f32 %in_ar0, .param .u32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f32 %r24;
.reg .u32 %r25;
.reg .u64 %r26;
mov.f32 %r24,%ar0;
mov.u32 %r25,%ar1;
.loc 1 39 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r26,[%value_in];
}
.loc 1 39 9
st.u32 [%r26],%r25;
.loc 1 41 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN FUNCTION DEF: xflowf
.func (.param .f32 %value_out) xflowf (.param .u32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r22;
.reg .u32 %r25;
.reg .f32 %r26;
.reg .pred %r27;
.reg .u32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
mov.u32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 50 18
setp.eq.u32 %r27,%r25,0;
@ %r27 bra $L4;
neg.f32 %r22,%r26;
bra $L3;
$L4:
mov.f32 %r22,%r26;
$L3:
.loc 1 50 5
mul.f32 %r30,%r22,%r26;
.loc 1 51 10
mov.u32 %r29,34;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r30;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r29;
call (%value_in),with_errnof,(%out_arg1,%out_arg2);
ld.param.f32 %r31,[%value_in];
}
.loc 1 52 1
mov.f32 %value,%r31;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_uflowf
.visible .func (.param .f32 %value_out) __math_uflowf (.param .u32 %in_ar0)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r25;
.reg .f32 %r26;
mov.u32 %r23,%ar0;
.loc 1 57 10
mov.f32 %r25,0f10000000;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r23;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r25;
call (%value_in),xflowf,(%out_arg1,%out_arg2);
ld.param.f32 %r26,[%value_in];
}
.loc 1 58 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_oflowf
.visible .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r25;
.reg .f32 %r26;
mov.u32 %r23,%ar0;
.loc 1 75 10
mov.f32 %r25,0f70000000;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r23;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r25;
call (%value_in),xflowf,(%out_arg1,%out_arg2);
ld.param.f32 %r26,[%value_in];
}
.loc 1 76 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_divzerof
.visible .func (.param .f32 %value_out) __math_divzerof (.param .u32 %in_ar0)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .u32 %r25;
.reg .pred %r26;
.reg .u32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
mov.u32 %r25,%ar0;
.loc 1 82 10
setp.ne.u32 %r26,%r25,0;
selp.f32 %r23,0fbf800000,0f3f800000,%r26;
div.rn.f32 %r29,%r23,0f00000000;
mov.u32 %r28,34;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r28;
call (%value_in),with_errnof,(%out_arg1,%out_arg2);
ld.param.f32 %r30,[%value_in];
}
.loc 1 83 1
mov.f32 %value,%r30;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __math_invalidf
.visible .func (.param .f32 %value_out) __math_invalidf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r22;
.reg .f32 %r23;
.reg .f32 %r24;
.reg .pred %r25;
.reg .u32 %r27;
.reg .f32 %r28;
mov.f32 %r24,%ar0;
.loc 1 88 16
sub.f32 %r22,%r24,%r24;
.loc 1 88 9
div.rn.f32 %r23,%r22,%r22;
.loc 1 89 24
setp.nan.f32 %r25,%r24,%r24;
@ %r25 bra $L10;
.loc 1 89 26
mov.u32 %r27,33;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r27;
call (%value_in),with_errnof,(%out_arg1,%out_arg2);
ld.param.f32 %r28,[%value_in];
}
mov.f32 %r23,%r28;
$L10:
.loc 1 90 1
mov.f32 %value,%r23;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-modfl.o/  1612277260  0     0     100666  1038      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: modfl
.visible .func (.param .f64 %value_out) modfl (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/modfl.c"
// BEGIN GLOBAL FUNCTION DECL: modf
.extern .func (.param .f64 %value_out) modf (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: modfl
.visible .func (.param .f64 %value_out) modfl (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r24;
call (%value_in),modf,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-nanl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nanl
.visible .func (.param .f64 %value_out) nanl (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/nanl.c"
// BEGIN GLOBAL FUNCTION DECL: nan
.extern .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: nanl
.visible .func (.param .f64 %value_out) nanl (.param .u64 %in_ar0)
{
.reg .f64 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.reg .u64 %r23;
.reg .f64 %r25;
mov.u64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r23;
call (%value_in),nan,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

/798            1612277260  0     0     100666  582       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nearbyintl
.visible .func (.param .f64 %value_out) nearbyintl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/nearbyintl.c"
// BEGIN GLOBAL FUNCTION DEF: nearbyintl
.visible .func (.param .f64 %value_out) nearbyintl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
cvt.rni.f64.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}
/818            1612277260  0     0     100666  1078      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nextafterl
.visible .func (.param .f64 %value_out) nextafterl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/nextafterl.c"
// BEGIN GLOBAL FUNCTION DECL: nextafter
.extern .func (.param .f64 %value_out) nextafter (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: nextafterl
.visible .func (.param .f64 %value_out) nextafterl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),nextafter,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/838            1612277260  0     0     100666  1078      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nexttoward
.visible .func (.param .f64 %value_out) nexttoward (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/nexttoward.c"
// BEGIN GLOBAL FUNCTION DECL: nextafter
.extern .func (.param .f64 %value_out) nextafter (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: nexttoward
.visible .func (.param .f64 %value_out) nexttoward (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 35 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),nextafter,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 36 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/858            1612277260  0     0     100666  3026      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nexttowardf
.visible .func (.param .f32 %value_out) nexttowardf (.param .f32 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/nexttowardf.c"
// BEGIN GLOBAL FUNCTION DEF: nexttowardf
.visible .func (.param .f32 %value_out) nexttowardf (.param .f32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r27;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .u32 %r31;
.reg .u32 %r32;
.reg .f64 %r33;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f64 %r37;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u16 %r44;
.reg .u16 %r45;
.reg .u16 %r46;
.reg .u32 %r47;
.reg .u16 %r48;
.reg .pred %r49;
.reg .f64 %r50;
.reg .pred %r51;
.reg .pred %r52;
.reg .u64 %r53;
.reg .u64 %r54;
.reg .u32 %r56;
.reg .pred %r57;
.reg .u32 %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .pred %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .f32 %r65;
mov.f32 %r36,%ar0;
mov.f64 %r37,%ar1;
.loc 1 45 14
cvt.f64.f32 %r33,%r36;
.loc 1 44 7
set.u32.nan.f32 %r39,%r36,%r36;
neg.s32 %r40,%r39;
.loc 1 44 19
set.u32.nan.f64 %r42,%r37,%r37;
neg.s32 %r43,%r42;
.loc 1 44 16
cvt.u16.u32 %r45,%r40;
cvt.u16.u32 %r46,%r43;
or.b16 %r44,%r45,%r46;
.loc 1 44 6
cvt.u32.u16 %r47,%r44;
cvt.u16.u8 %r48,%r47;
setp.eq.u16 %r49,%r48,0;
@ %r49 bra $L2;
.loc 1 45 14
add.f64 %r50,%r37,%r33;
cvt.rn.f32.f64 %r35,%r50;
bra $L1;
$L2:
.loc 1 46 6
setp.neu.f64 %r51,%r37,%r33;
@ %r51 bra $L4;
.loc 1 47 12
cvt.rn.f32.f64 %r35,%r37;
bra $L1;
$L4:
.loc 1 49 6
setp.neu.f32 %r52,%r36,0f00000000;
@ %r52 bra $L5;
.loc 1 51 9
mov.b64 %r53,%r37;
shr.u64 %r54,%r53,63;
cvt.u32.u64 %r56,%r54;
.loc 1 51 8
setp.eq.u32 %r57,%r56,0;
selp.f32 %r35,0f00000001,0f80000001,%r57;
bra $L13;
$L5:
.loc 1 48 12
mov.b32 %r32,%r36;
.loc 1 54 9
and.b32 %r59,%r32,-2147483648;
.loc 1 53 13
setp.gt.f64 %r60,%r37,%r33;
@ ! %r60 bra $L20;
.loc 1 54 8
setp.eq.u32 %r61,%r59,0;
@ %r61 bra $L9;
.loc 1 55 14
add.u32 %r27,%r32,-1;
bra $L10;
$L9:
.loc 1 57 14
add.u32 %r27,%r32,1;
bra $L10;
$L20:
.loc 1 59 8
setp.eq.u32 %r62,%r59,0;
@ %r62 bra $L11;
.loc 1 60 14
add.u32 %r27,%r32,1;
bra $L10;
$L11:
.loc 1 62 14
add.u32 %r27,%r32,-1;
$L10:
.loc 1 64 5
and.b32 %r31,%r27,2139095040;
.loc 1 75 12
mov.b32 %r35,%r27;
.loc 1 66 6
setp.eq.u32 %r63,%r31,2139095040;
@ %r63 bra $L12;
.loc 1 71 6
setp.eq.u32 %r64,%r31,0;
@ ! %r64 bra $L1;
bra $L13;
$L12:
.loc 1 68 20
add.f32 %r28,%r36,%r36;
.loc 1 68 16
st.f32 [%frame+4],%r28;
bra $L1;
$L13:
.loc 1 73 32
mul.f32 %r65,%r35,%r35;
.loc 1 73 22
fma.rn.f32 %r30,%r36,%r36,%r65;
.loc 1 73 16
st.f32 [%frame],%r30;
$L1:
.loc 1 76 1
mov.f32 %value,%r35;
st.param.f32 [%value_out],%value;
ret;
}
/879            1612277260  0     0     100666  1083      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nexttowardl
.visible .func (.param .f64 %value_out) nexttowardl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/nexttowardl.c"
// BEGIN GLOBAL FUNCTION DECL: nextafter
.extern .func (.param .f64 %value_out) nextafter (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: nexttowardl
.visible .func (.param .f64 %value_out) nexttowardl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 35 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),nextafter,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 36 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-pow.o/    1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/900            1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-powl.o/   1612277260  0     0     100666  1030      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: powl
.visible .func (.param .f64 %value_out) powl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/powl.c"
// BEGIN GLOBAL FUNCTION DECL: pow
.extern .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: powl
.visible .func (.param .f64 %value_out) powl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),pow,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/922            1612277260  0     0     100666  1078      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remainderl
.visible .func (.param .f64 %value_out) remainderl (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/remainderl.c"
// BEGIN GLOBAL FUNCTION DECL: remainder
.extern .func (.param .f64 %value_out) remainder (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: remainderl
.visible .func (.param .f64 %value_out) remainderl (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),remainder,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-remquol.o/1612277260  0     0     100666  1267      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remquol
.visible .func (.param .f64 %value_out) remquol (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/common/remquol.c"
// BEGIN GLOBAL FUNCTION DECL: remquo
.extern .func (.param .f64 %value_out) remquo (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u64 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: remquol
.visible .func (.param .f64 %value_out) remquol (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .u64 %r25;
.reg .f64 %r29;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
mov.u64 %r25,%ar2;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
.param .u64 %out_arg3;
st.param.u64 [%out_arg3],%r25;
call (%value_in),remquo,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r29,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r29;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-rintl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: rintl
.visible .func (.param .f64 %value_out) rintl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/rintl.c"
// BEGIN GLOBAL FUNCTION DECL: rint
.extern .func (.param .f64 %value_out) rint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: rintl
.visible .func (.param .f64 %value_out) rintl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),rint,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-roundl.o/ 1612277260  0     0     100666  833       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: roundl
.visible .func (.param .f64 %value_out) roundl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/roundl.c"
// BEGIN GLOBAL FUNCTION DECL: round
.extern .func (.param .f64 %value_out) round (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: roundl
.visible .func (.param .f64 %value_out) roundl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),round,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_asinh.o/1612277259  0     0     100666  4145      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: asinh
.visible .func (.param .f64 %value_out) asinh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_asinh.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log1p
.extern .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: asinh
.visible .func (.param .f64 %value_out) asinh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r25;
.reg .f64 %r29;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .f64 %r38;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .u64 %r43;
.reg .u64 %r44;
.reg .pred %r45;
.reg .pred %r46;
.reg .f64 %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .f64 %r51;
.reg .f64 %r53;
.reg .pred %r54;
.reg .f64 %r56;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r63;
.reg .f64 %r65;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .pred %r74;
mov.f64 %r42,%ar0;
.loc 1 81 2
mov.b64 %r43,%r42;
shr.u64 %r44,%r43,32;
cvt.u32.u64 %r36,%r44;
.loc 1 82 5
and.b32 %r37,%r36,2147483647;
.loc 1 83 4
setp.le.s32 %r45,%r37,2146435071;
@ %r45 bra $L2;
.loc 1 83 29
add.f64 %r41,%r42,%r42;
bra $L1;
$L2:
.loc 1 84 4
setp.gt.s32 %r46,%r37,1043333119;
@ %r46 bra $L4;
.loc 1 85 13
add.f64 %r47,%r42,0d7e37e43c8800759c;
.loc 1 85 8
setp.gt.f64 %r48,%r47,0d3ff0000000000000;
@ ! %r48 bra $L5;
bra $L8;
$L4:
.loc 1 87 4
setp.le.s32 %r49,%r37,1102053376;
@ %r49 bra $L6;
.loc 1 88 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r51,[%value_in];
}
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r51;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r53,[%value_in];
}
.loc 1 88 8
add.f64 %r41,%r53,0d3fe62e42fefa39ef;
bra $L7;
$L6:
.loc 1 89 12
setp.le.s32 %r54,%r37,1073741824;
@ %r54 bra $L5;
.loc 1 90 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r56,[%value_in];
}
.loc 1 91 35
fma.rn.f64 %r25,%r42,%r42,0d3ff0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r58,[%value_in];
}
.loc 1 91 58
add.f64 %r59,%r58,%r56;
.loc 1 91 33
mov.f64 %r61,0d3ff0000000000000;
div.rn.f64 %r60,%r61,%r59;
.loc 1 91 10
fma.rn.f64 %r29,%r56,0d4000000000000000,%r60;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r29;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r63,[%value_in];
}
mov.f64 %r41,%r63;
bra $L7;
$L5:
.loc 1 93 8
mul.f64 %r38,%r42,%r42;
.loc 1 94 15
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r42;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r65,[%value_in];
}
.loc 1 94 30
add.f64 %r67,%r38,0d3ff0000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r68,[%value_in];
}
.loc 1 94 29
add.f64 %r70,%r68,0d3ff0000000000000;
.loc 1 94 24
div.rn.f64 %r71,%r38,%r70;
.loc 1 94 9
add.f64 %r72,%r71,%r65;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r72;
call (%value_in),log1p,(%out_arg1);
ld.param.f64 %r73,[%value_in];
}
mov.f64 %r41,%r73;
$L7:
.loc 1 96 4
setp.gt.s32 %r74,%r36,0;
@ %r74 bra $L1;
.loc 1 96 33
neg.f64 %r41,%r41;
bra $L1;
$L8:
.loc 1 85 28
mov.f64 %r41,%r42;
$L1:
.loc 1 97 1
mov.f64 %value,%r41;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_atan.o/ 1612277259  0     0     100666  5731      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atan
.visible .func (.param .f64 %value_out) atan (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_atan.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN VAR DEF: atanhi
.const .align 8 .u64 atanhi[4] =
{4602023952714414927,4605249457297304856,4607027438436873883,4609753056924675352 };
// BEGIN VAR DEF: atanlo
.const .align 8 .u64 atanlo[4] =
{4357843414468748770,4359948597267291143,4354989122426817469,4364452196894661639 };
// BEGIN GLOBAL FUNCTION DEF: atan
.visible .func (.param .f64 %value_out) atan (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .u64 %r58;
.reg .u64 %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .u16 %r70;
.reg .u16 %r71;
.reg .u16 %r72;
.reg .u32 %r73;
.reg .u16 %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .pred %r78;
.reg .f64 %r79;
.reg .pred %r80;
.reg .f64 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .f64 %r85;
.reg .pred %r86;
.reg .f64 %r87;
.reg .f64 %r88;
.reg .f64 %r89;
.reg .pred %r90;
.reg .u64 %r91;
.reg .u64 %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u64 %r98;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .f64 %r101;
.reg .f64 %r102;
.reg .pred %r103;
mov.f64 %r57,%ar0;
.loc 1 130 2
mov.b64 %r58,%r57;
shr.u64 %r59,%r58,32;
cvt.u32.u64 %r46,%r59;
.loc 1 131 5
and.b32 %r47,%r46,2147483647;
.loc 1 132 4
setp.le.s32 %r60,%r47,1141899263;
@ %r60 bra $L2;
.loc 1 135 8
setp.gt.s32 %r61,%r47,2146435072;
@ %r61 bra $L3;
.loc 1 136 6
set.u32.eq.u32 %r63,%r47,2146435072;
neg.s32 %r64,%r63;
.loc 1 136 24
cvt.u32.u64 %r67,%r58;
set.u32.ne.u32 %r68,%r67,0;
neg.s32 %r69,%r68;
.loc 1 136 18
cvt.u16.u32 %r71,%r64;
cvt.u16.u32 %r72,%r69;
and.b16 %r70,%r71,%r72;
.loc 1 135 22
cvt.u32.u16 %r73,%r70;
cvt.u16.u8 %r74,%r73;
setp.eq.u16 %r75,%r74,0;
@ %r75 bra $L4;
$L3:
.loc 1 137 11
add.f64 %r56,%r57,%r57;
bra $L1;
$L4:
.loc 1 138 8
setp.gt.s32 %r76,%r46,0;
.loc 1 139 32
selp.f64 %r56,0d3ff921fb54442d18,0dbff921fb54442d18,%r76;
bra $L1;
$L2:
.loc 1 140 7
setp.gt.s32 %r77,%r47,1071382527;
@ %r77 bra $L6;
.loc 1 141 9
setp.gt.s32 %r78,%r47,1042284543;
@ %r78 bra $L13;
.loc 1 142 10
add.f64 %r79,%r57,0d7e37e43c8800759c;
.loc 1 142 5
setp.gt.f64 %r80,%r79,0d3ff0000000000000;
@ %r80 bra $L14;
.loc 1 144 9
mov.u32 %r45,-1;
bra $L7;
$L6:
.loc 1 146 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r57;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r82,[%value_in];
}
.loc 1 147 5
setp.gt.s32 %r83,%r47,1072889855;
@ %r83 bra $L8;
.loc 1 148 9
setp.gt.s32 %r84,%r47,1072037887;
@ %r84 bra $L9;
.loc 1 149 21
fma.rn.f64 %r26,%r82,0d4000000000000000,0dbff0000000000000;
.loc 1 149 31
add.f64 %r27,%r82,0d4000000000000000;
.loc 1 149 13
div.rn.f64 %r57,%r26,%r27;
.loc 1 149 6
mov.u32 %r45,0;
bra $L7;
$L9:
.loc 1 151 18
mov.f64 %r85,0d3ff0000000000000;
sub.f64 %r28,%r82,%r85;
.loc 1 151 26
add.f64 %r29,%r82,0d3ff0000000000000;
.loc 1 151 14
div.rn.f64 %r57,%r28,%r29;
.loc 1 151 6
mov.u32 %r45,1;
bra $L7;
$L8:
.loc 1 154 9
setp.gt.s32 %r86,%r47,1073971199;
@ %r86 bra $L10;
.loc 1 155 18
mov.f64 %r87,0d3ff8000000000000;
sub.f64 %r30,%r82,%r87;
.loc 1 155 28
fma.rn.f64 %r31,%r82,0d3ff8000000000000,0d3ff0000000000000;
.loc 1 155 14
div.rn.f64 %r57,%r30,%r31;
.loc 1 155 6
mov.u32 %r45,2;
bra $L7;
$L10:
.loc 1 157 14
mov.f64 %r88,0dbff0000000000000;
div.rn.f64 %r57,%r88,%r82;
.loc 1 157 6
mov.u32 %r45,3;
bra $L7;
$L13:
.loc 1 144 9
mov.u32 %r45,-1;
$L7:
.loc 1 161 4
mul.f64 %r51,%r57,%r57;
.loc 1 162 4
mul.f64 %r52,%r51,%r51;
.loc 1 164 51
fma.rn.f64 %r32,%r52,0d3f90ad3ae322da11,0d3fa97b4b24760deb;
.loc 1 164 42
fma.rn.f64 %r33,%r32,%r52,0d3fb10d66a0d03d51;
.loc 1 164 33
fma.rn.f64 %r34,%r33,%r52,0d3fb745cdc54c206e;
.loc 1 164 24
fma.rn.f64 %r35,%r34,%r52,0d3fc24924920083ff;
.loc 1 164 15
fma.rn.f64 %r36,%r35,%r52,0d3fd555555555550d;
.loc 1 165 42
fma.rn.f64 %r37,%r52,0dbfa2b4442c6a6c2f,0dbfadde2d52defd9a;
.loc 1 165 33
fma.rn.f64 %r38,%r37,%r52,0dbfb3b0f2af749a6d;
.loc 1 165 24
fma.rn.f64 %r39,%r38,%r52,0dbfbc71c6fe231671;
.loc 1 165 15
fma.rn.f64 %r40,%r39,%r52,0dbfc999999998ebc4;
.loc 1 165 5
mul.f64 %r89,%r40,%r52;
.loc 1 166 28
fma.rn.f64 %r54,%r36,%r51,%r89;
.loc 1 166 24
mul.f64 %r55,%r57,%r54;
.loc 1 166 5
setp.ne.u32 %r90,%r45,-1;
@ %r90 bra $L11;
.loc 1 166 21
sub.f64 %r56,%r57,%r55;
bra $L1;
$L11:
.loc 1 168 16
cvta.const.u64 %r91,atanhi;
cvt.s64.s32 %r92,%r45;
shl.b64 %r93,%r92,3;
add.u64 %r94,%r91,%r93;
.loc 1 168 43
cvta.const.u64 %r95,atanlo;
add.u64 %r98,%r95,%r93;
.loc 1 168 35
ld.f64 %r100,[%r98];
sub.f64 %r99,%r55,%r100;
.loc 1 168 49
sub.f64 %r101,%r99,%r57;
.loc 1 168 8
ld.f64 %r102,[%r94];
sub.f64 %r56,%r102,%r101;
.loc 1 169 23
setp.ge.s32 %r103,%r46,0;
@ %r103 bra $L1;
neg.f64 %r56,%r56;
bra $L1;
$L14:
.loc 1 142 25
mov.f64 %r56,%r57;
$L1:
.loc 1 171 1
mov.f64 %value,%r56;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_cbrt.o/ 1612277259  0     0     100666  3993      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cbrt
.visible .func (.param .f64 %value_out) cbrt (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_cbrt.c"
// BEGIN GLOBAL FUNCTION DEF: cbrt
.visible .func (.param .f64 %value_out) cbrt (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r39;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r45;
.reg .f64 %r47;
.reg .f64 %r49;
.reg .f64 %r51;
.reg .u32 %r52;
.reg .u64 %r59;
.reg .u64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .u64 %r65;
.reg .u64 %r66;
.reg .pred %r67;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .pred %r71;
.reg .u64 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .u64 %r75;
.reg .u32 %r76;
.reg .pred %r77;
.reg .u64 %r79;
.reg .u32 %r81;
.reg .u32 %r82;
.reg .u32 %r83;
.reg .u64 %r84;
.reg .u64 %r85;
.reg .u64 %r86;
.reg .u64 %r87;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .f64 %r101;
.reg .f64 %r102;
.reg .f64 %r103;
.reg .f64 %r104;
.reg .f64 %r105;
.reg .f64 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u32 %r109;
.reg .u32 %r110;
.reg .u64 %r111;
.reg .u64 %r115;
.reg .f64 %r116;
.reg .f64 %r117;
.reg .u32 %r118;
.reg .u64 %r120;
.reg .u32 %r121;
.reg .u32 %r122;
.reg .u64 %r123;
.reg .u64 %r124;
.reg .u64 %r125;
.reg .u64 %r126;
mov.f64 %r64,%ar0;
mov.b64 %r65,%r64;
shr.u64 %r66,%r65,32;
cvt.u32.u64 %r52,%r66;
.loc 1 79 6
and.b32 %r22,%r52,2147483647;
.loc 1 80 4
setp.le.u32 %r67,%r22,2146435071;
@ %r67 bra $L2;
.loc 1 80 29
add.f64 %r63,%r64,%r64;
bra $L1;
$L2:
.loc 1 82 8
cvt.u32.u64 %r70,%r65;
or.b32 %r69,%r22,%r70;
.loc 1 82 4
setp.eq.u32 %r71,%r69,0;
@ %r71 bra $L6;
.loc 1 85 2
cvt.u64.u32 %r72,%r22;
shl.b64 %r73,%r72,32;
and.b64 %r74,%r65,4294967295;
or.b64 %r75,%r74,%r73;
mov.b64 %r42,%r75;
.loc 1 87 4
and.b32 %r76,%r52,2146435072;
setp.ne.u32 %r77,%r76,0;
@ %r77 bra $L4;
.loc 1 89 6
mul.f64 %r43,%r42,0d4350000000000000;
.loc 1 89 34
mov.b64 %r59,%r43;
shr.u64 %r79,%r59,32;
cvt.u32.u64 %r81,%r79;
div.u32 %r82,%r81,3;
add.u32 %r83,%r82,696219795;
cvt.u64.u32 %r84,%r83;
shl.b64 %r85,%r84,32;
and.b64 %r86,%r59,4294967295;
or.b64 %r87,%r86,%r85;
mov.b64 %r39,%r87;
bra $L5;
$L4:
.loc 1 92 4
div.s32 %r91,%r22,3;
add.u32 %r92,%r91,715094163;
cvt.u64.u32 %r93,%r92;
shl.b64 %r94,%r93,32;
mov.b64 %r39,%r94;
$L5:
.loc 1 96 5
mul.f64 %r97,%r39,%r39;
.loc 1 96 3
div.rn.f64 %r98,%r97,%r42;
.loc 1 97 3
fma.rn.f64 %r45,%r39,%r98,0d3fe15f15f15f15f1;
.loc 1 98 11
add.f64 %r99,%r45,0d3ff6a0ea0ea0ea0f;
.loc 1 98 15
mov.f64 %r101,0dbfe691de2532c834;
div.rn.f64 %r100,%r101,%r45;
.loc 1 98 13
add.f64 %r102,%r99,%r100;
.loc 1 98 8
mov.f64 %r104,0d3ff9b6db6db6db6e;
div.rn.f64 %r103,%r104,%r102;
.loc 1 98 6
add.f64 %r105,%r103,0d3fd6db6db6db6db7;
.loc 1 98 3
mul.f64 %r106,%r105,%r39;
.loc 1 102 2
mov.b64 %r107,%r106;
shr.u64 %r108,%r107,32;
cvt.u32.u64 %r110,%r108;
add.u32 %r109,%r110,1;
cvt.u64.u32 %r111,%r109;
shl.b64 %r115,%r111,32;
mov.b64 %r47,%r115;
.loc 1 106 3
mul.f64 %r116,%r47,%r47;
.loc 1 107 3
div.rn.f64 %r49,%r42,%r116;
.loc 1 109 6
sub.f64 %r36,%r49,%r47;
.loc 1 109 12
fma.rn.f64 %r37,%r47,0d4000000000000000,%r49;
.loc 1 109 3
div.rn.f64 %r117,%r36,%r37;
.loc 1 110 3
fma.rn.f64 %r51,%r47,%r117,%r47;
.loc 1 114 2
mov.b64 %r62,%r51;
.loc 1 78 6
and.b32 %r118,%r52,-2147483648;
.loc 1 114 2
shr.u64 %r120,%r62,32;
cvt.u32.u64 %r122,%r120;
or.b32 %r121,%r118,%r122;
cvt.u64.u32 %r123,%r121;
shl.b64 %r124,%r123,32;
and.b64 %r125,%r62,4294967295;
or.b64 %r126,%r125,%r124;
mov.b64 %r63,%r126;
.loc 1 115 8
bra $L1;
$L6:
.loc 1 83 12
mov.f64 %r63,%r64;
$L1:
.loc 1 116 1
mov.f64 %value,%r63;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_ceil.o/ 1612277259  0     0     100666  4069      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ceil
.visible .func (.param .f64 %value_out) ceil (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_ceil.c"
// BEGIN GLOBAL FUNCTION DEF: ceil
.visible .func (.param .f64 %value_out) ceil (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r45;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .u64 %r53;
.reg .u64 %r54;
.reg .u32 %r56;
.reg .pred %r57;
.reg .pred %r58;
.reg .f64 %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .pred %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .pred %r67;
.reg .f64 %r68;
.reg .pred %r69;
.reg .pred %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .pred %r74;
.reg .pred %r75;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .u32 %r78;
.reg .pred %r79;
.reg .f64 %r80;
.reg .pred %r81;
.reg .pred %r82;
.reg .pred %r83;
.reg .u32 %r84;
.reg .u32 %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .u64 %r90;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u64 %r96;
mov.f64 %r52,%ar0;
mov.b64 %r53,%r52;
shr.u64 %r54,%r53,32;
cvt.u32.u64 %r45,%r54;
cvt.u32.u64 %r47,%r53;
.loc 1 43 11
shr.s32 %r56,%r45,20;
.loc 1 43 16
and.b32 %r23,%r56,2047;
.loc 1 43 5
add.u32 %r41,%r23,-1023;
.loc 1 44 4
setp.gt.s32 %r57,%r41,19;
@ %r57 bra $L2;
.loc 1 45 8
setp.ge.s32 %r58,%r41,0;
@ %r58 bra $L3;
.loc 1 46 10
add.f64 %r59,%r52,0d7e37e43c8800759c;
.loc 1 46 5
setp.gt.f64 %r60,%r59,0d0000000000000000;
@ ! %r60 bra $L4;
.loc 1 47 9
setp.lt.s32 %r61,%r45,0;
@ %r61 bra $L13;
.loc 1 48 18
or.b32 %r62,%r45,%r47;
.loc 1 48 14
setp.eq.u32 %r63,%r62,0;
@ %r63 bra $L14;
mov.u32 %r47,0;
mov.u32 %r45,1072693248;
bra $L4;
$L3:
.loc 1 51 19
mov.u32 %r64,1048575;
shr.s32 %r48,%r64,%r41;
.loc 1 52 10
and.b32 %r65,%r45,%r48;
.loc 1 52 13
or.b32 %r66,%r65,%r47;
.loc 1 52 5
setp.eq.u32 %r67,%r66,0;
@ %r67 bra $L15;
.loc 1 53 10
add.f64 %r68,%r52,0d7e37e43c8800759c;
.loc 1 53 5
setp.gt.f64 %r69,%r68,0d0000000000000000;
@ ! %r69 bra $L4;
.loc 1 54 9
setp.le.s32 %r70,%r45,0;
@ %r70 bra $L8;
.loc 1 54 34
mov.u32 %r72,1048576;
shr.s32 %r71,%r72,%r41;
.loc 1 54 19
add.u32 %r45,%r71,%r45;
$L8:
.loc 1 55 14
not.b32 %r73,%r48;
.loc 1 55 10
and.b32 %r45,%r45,%r73;
mov.u32 %r47,0;
bra $L4;
$L2:
.loc 1 58 12
setp.le.s32 %r74,%r41,51;
@ %r74 bra $L9;
.loc 1 59 8
setp.ne.u32 %r75,%r41,1024;
@ %r75 bra $L16;
.loc 1 59 28
add.f64 %r51,%r52,%r52;
bra $L1;
$L9:
.loc 1 62 41
add.u32 %r76,%r23,-1043;
.loc 1 62 8
mov.u32 %r77,-1;
shr.u32 %r42,%r77,%r76;
.loc 1 63 12
and.b32 %r78,%r42,%r47;
.loc 1 63 8
setp.eq.u32 %r79,%r78,0;
@ %r79 bra $L17;
.loc 1 64 13
add.f64 %r80,%r52,0d7e37e43c8800759c;
.loc 1 64 8
setp.gt.f64 %r81,%r80,0d0000000000000000;
@ ! %r81 bra $L4;
.loc 1 65 5
setp.le.s32 %r82,%r45,0;
@ %r82 bra $L11;
.loc 1 66 9
setp.ne.u32 %r83,%r41,20;
@ %r83 bra $L12;
.loc 1 66 20
add.u32 %r45,%r45,1;
bra $L11;
$L12:
.loc 1 68 20
mov.u32 %r85,52;
sub.u32 %r84,%r85,%r41;
.loc 1 68 15
mov.u32 %r87,1;
shl.b32 %r86,%r87,%r84;
.loc 1 68 11
add.u32 %r43,%r86,%r47;
.loc 1 69 6
setp.ge.u32 %r88,%r43,%r47;
@ %r88 bra $L18;
.loc 1 69 15
add.u32 %r45,%r45,1;
.loc 1 76 2
mov.u32 %r47,%r43;
bra $L11;
$L18:
mov.u32 %r47,%r43;
$L11:
.loc 1 73 10
not.b32 %r89,%r42;
.loc 1 73 6
and.b32 %r47,%r47,%r89;
bra $L4;
$L13:
mov.u32 %r47,0;
mov.u32 %r45,-2147483648;
bra $L4;
$L14:
mov.u32 %r47,%r62;
mov.u32 %r45,%r47;
$L4:
.loc 1 76 2
cvt.u64.u32 %r90,%r45;
cvt.u64.u32 %r94,%r47;
shl.b64 %r95,%r90,32;
or.b64 %r96,%r95,%r94;
mov.b64 %r51,%r96;
.loc 1 77 9
bra $L1;
$L15:
.loc 1 52 29
mov.f64 %r51,%r52;
bra $L1;
$L16:
mov.f64 %r51,%r52;
bra $L1;
$L17:
mov.f64 %r51,%r52;
$L1:
.loc 1 78 1
mov.f64 %value,%r51;
st.param.f64 [%value_out],%value;
ret;
}

/942            1612277259  0     0     100666  1235      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: copysign
.visible .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_copysign.c"
// BEGIN GLOBAL FUNCTION DEF: copysign
.visible .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u64 %r27;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u64 %r35;
.reg .u64 %r36;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .u64 %r40;
.reg .u64 %r41;
.reg .u64 %r42;
.reg .u64 %r43;
mov.f64 %r29,%ar0;
mov.f64 %r30,%ar1;
.loc 1 68 2
mov.b64 %r27,%r29;
shr.u64 %r32,%r27,32;
cvt.u32.u64 %r34,%r32;
and.b32 %r33,%r34,2147483647;
mov.b64 %r35,%r30;
shr.u64 %r36,%r35,32;
cvt.u32.u64 %r38,%r36;
and.b32 %r37,%r38,-2147483648;
or.b32 %r39,%r33,%r37;
cvt.u64.u32 %r40,%r39;
shl.b64 %r41,%r40,32;
and.b64 %r42,%r27,4294967295;
or.b64 %r43,%r42,%r41;
mov.b64 %value,%r43;
.loc 1 70 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_cos.o/  1612277259  0     0     100666  4059      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cos
.visible .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_cos.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_cos
.extern .func (.param .f64 %value_out) __kernel_cos (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2 (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __kernel_sin
.extern .func (.param .f64 %value_out) __kernel_sin (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: cos
.visible .func (.param .f64 %value_out) cos (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .pred %r41;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .pred %r45;
.reg .u32 %r48;
.reg .pred %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .f64 %r52;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .u32 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
mov.f64 %r38,%ar0;
.loc 1 60 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r33,%r40;
.loc 1 63 5
and.b32 %r34,%r33,2147483647;
.loc 1 64 4
setp.gt.s32 %r41,%r34,1072243195;
@ %r41 bra $L2;
.loc 1 64 30
mov.f64 %r43,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r44,[%value_in];
}
mov.f64 %r37,%r44;
bra $L1;
$L2:
.loc 1 67 10
setp.le.s32 %r45,%r34,2146435071;
@ %r45 bra $L4;
.loc 1 67 35
sub.f64 %r37,%r38,%r38;
bra $L1;
$L4:
.loc 1 71 10
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2,(%out_arg1,%out_arg2);
ld.param.u32 %r48,[%value_in];
}
.loc 1 72 14
and.b32 %r22,%r48,3;
.loc 1 72 6
setp.eq.u32 %r49,%r22,1;
@ %r49 bra $L5;
setp.eq.u32 %r50,%r22,2;
@ %r50 bra $L6;
setp.ne.u32 %r51,%r22,0;
@ %r51 bra $L7;
.loc 1 73 19
ld.f64 %r54,[%frame+8];
ld.f64 %r52,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r54;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r55,[%value_in];
}
mov.f64 %r37,%r55;
bra $L1;
$L5:
.loc 1 74 19
ld.f64 %r59,[%frame+8];
ld.f64 %r56,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r56;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r59;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r22;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r60,[%value_in];
}
.loc 1 74 18
neg.f64 %r37,%r60;
bra $L1;
$L6:
.loc 1 75 19
ld.f64 %r63,[%frame+8];
ld.f64 %r61,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r61;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r63;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r64,[%value_in];
}
.loc 1 75 18
neg.f64 %r37,%r64;
bra $L1;
$L7:
.loc 1 77 19
ld.f64 %r68,[%frame+8];
mov.u32 %r67,1;
ld.f64 %r65,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r65;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r68;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r67;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r69,[%value_in];
}
mov.f64 %r37,%r69;
$L1:
.loc 1 80 1
mov.f64 %value,%r37;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_erf.o/  1612277259  0     0     100666  18877     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: erf
.visible .func (.param .f64 %value_out) erf (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_erf.c"
// BEGIN GLOBAL FUNCTION DECL: erfc
.visible .func (.param .f64 %value_out) erfc (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.extern .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflow
.extern .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: erf
.visible .func (.param .f64 %value_out) erf (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r75;
.reg .f64 %r80;
.reg .f64 %r84;
.reg .f64 %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .f64 %r89;
.reg .f64 %r91;
.reg .f64 %r92;
.reg .u32 %r93;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r98;
.reg .f64 %r99;
.reg .u64 %r102;
.reg .f64 %r103;
.reg .f64 %r104;
.reg .u64 %r105;
.reg .u64 %r106;
.reg .pred %r107;
.reg .u32 %r108;
.reg .u32 %r109;
.reg .u32 %r110;
.reg .u32 %r111;
.reg .f64 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .pred %r115;
.reg .pred %r116;
.reg .u32 %r117;
.reg .pred %r118;
.reg .f64 %r119;
.reg .f64 %r120;
.reg .pred %r121;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .pred %r125;
.reg .f64 %r126;
.reg .f64 %r127;
.reg .f64 %r128;
.reg .pred %r129;
.reg .pred %r130;
.reg .f64 %r132;
.reg .f64 %r133;
.reg .f64 %r134;
.reg .pred %r135;
.reg .u64 %r136;
.reg .f64 %r137;
.reg .f64 %r139;
.reg .f64 %r140;
.reg .f64 %r141;
.reg .f64 %r142;
.reg .f64 %r144;
.reg .pred %r145;
.reg .f64 %r146;
.reg .f64 %r147;
.reg .f64 %r148;
.reg .f64 %r149;
mov.f64 %r104,%ar0;
mov.b64 %r105,%r104;
shr.u64 %r106,%r105,32;
cvt.u32.u64 %r93,%r106;
.loc 1 247 2
cvt.u32.u64 %r86,%r106;
.loc 1 248 5
and.b32 %r87,%r93,2147483647;
.loc 1 249 4
setp.le.s32 %r107,%r87,2146435071;
@ %r107 bra $L2;
.loc 1 250 25
shr.u32 %r108,%r93,31;
.loc 1 250 30
add.u32 %r109,%r108,%r108;
.loc 1 251 23
mov.u32 %r111,1;
sub.u32 %r110,%r111,%r109;
.loc 1 251 13
cvt.rn.f64.s32 %r112,%r110;
.loc 1 251 30
mov.f64 %r114,0d3ff0000000000000;
div.rn.f64 %r113,%r114,%r104;
.loc 1 251 26
add.f64 %r103,%r112,%r113;
bra $L1;
$L2:
.loc 1 254 4
setp.gt.s32 %r115,%r87,1072365567;
@ %r115 bra $L4;
.loc 1 255 8
setp.gt.s32 %r116,%r87,1043333119;
@ %r116 bra $L5;
.loc 1 256 13
and.b32 %r117,%r93,2139095040;
setp.ne.u32 %r118,%r117,0;
@ %r118 bra $L6;
.loc 1 257 31
mul.f64 %r119,%r104,0d3ff06eba8214db69;
.loc 1 257 26
fma.rn.f64 %r28,%r104,0d4020000000000000,%r119;
.loc 1 257 19
mul.f64 %r103,%r28,0d3fc0000000000000;
bra $L1;
$L6:
.loc 1 258 12
fma.rn.f64 %r103,%r104,0d3fc06eba8214db69,%r104;
bra $L1;
$L5:
.loc 1 260 8
mul.f64 %r97,%r104,%r104;
.loc 1 261 34
fma.rn.f64 %r29,%r97,0dbef8ead6120016ac,0dbf77a291236668e4;
.loc 1 261 27
fma.rn.f64 %r30,%r29,%r97,0dbf9d2a51dbd7194f;
.loc 1 261 20
fma.rn.f64 %r31,%r30,%r97,0dbfd4cd7d691cb913;
.loc 1 261 8
fma.rn.f64 %r98,%r31,%r97,0d3fc06eba8214db68;
.loc 1 262 41
fma.rn.f64 %r32,%r97,0dbed09c4342a26120,0d3f215dc9221c1a10;
.loc 1 262 34
fma.rn.f64 %r33,%r32,%r97,0d3f74d022c4d36b0f;
.loc 1 262 27
fma.rn.f64 %r34,%r33,%r97,0d3fb0a54c5536ceba;
.loc 1 262 20
fma.rn.f64 %r35,%r34,%r97,0d3fd97779cddadc09;
.loc 1 262 8
fma.rn.f64 %r99,%r35,%r97,0d3ff0000000000000;
.loc 1 263 8
div.rn.f64 %r120,%r98,%r99;
.loc 1 264 15
fma.rn.f64 %r103,%r104,%r120,%r104;
bra $L1;
$L4:
.loc 1 266 4
setp.gt.s32 %r121,%r87,1072955391;
@ %r121 bra $L7;
.loc 1 267 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r104;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r123,[%value_in];
}
.loc 1 267 8
mov.f64 %r124,0d3ff0000000000000;
sub.f64 %r94,%r123,%r124;
.loc 1 268 48
fma.rn.f64 %r37,%r94,0dbf61bf380a96073f,0d3fa22a36599795eb;
.loc 1 268 41
fma.rn.f64 %r38,%r37,%r94,0dbfbc63983d3e28ec;
.loc 1 268 34
fma.rn.f64 %r39,%r38,%r94,0d3fd45fca805120e4;
.loc 1 268 27
fma.rn.f64 %r40,%r39,%r94,0dbfd7d240fbb8c3f1;
.loc 1 268 20
fma.rn.f64 %r41,%r40,%r94,0d3fda8d00ad92b34d;
.loc 1 268 8
fma.rn.f64 %r95,%r41,%r94,0dbf6359b8bef77538;
.loc 1 269 48
fma.rn.f64 %r42,%r94,0d3f888b545735151d,0d3f8bedc26b51dd1c;
.loc 1 269 41
fma.rn.f64 %r43,%r42,%r94,0d3fc02660e763351f;
.loc 1 269 34
fma.rn.f64 %r44,%r43,%r94,0d3fb2635cd99fe9a7;
.loc 1 269 27
fma.rn.f64 %r45,%r44,%r94,0d3fe14af092eb6f33;
.loc 1 269 20
fma.rn.f64 %r46,%r45,%r94,0d3fbb3e6618eee323;
.loc 1 269 8
fma.rn.f64 %r96,%r46,%r94,0d3ff0000000000000;
.loc 1 270 8
setp.lt.s32 %r125,%r93,0;
@ %r125 bra $L8;
.loc 1 270 30
div.rn.f64 %r126,%r95,%r96;
.loc 1 270 27
add.f64 %r103,%r126,0d3feb0ac160000000;
bra $L1;
$L8:
.loc 1 270 54
div.rn.f64 %r127,%r95,%r96;
.loc 1 270 51
mov.f64 %r128,0dbfeb0ac160000000;
sub.f64 %r103,%r128,%r127;
bra $L1;
$L7:
.loc 1 272 5
setp.le.s32 %r129,%r87,1075314687;
@ %r129 bra $L9;
.loc 1 273 8
setp.ge.s32 %r130,%r93,0;
.loc 1 273 49
selp.f64 %r103,0d3ff0000000000000,0dbff0000000000000,%r130;
bra $L1;
$L9:
.loc 1 275 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r104;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r132,[%value_in];
}
.loc 1 276 13
mul.f64 %r133,%r132,%r132;
.loc 1 276 5
mov.f64 %r134,0d3ff0000000000000;
div.rn.f64 %r89,%r134,%r133;
.loc 1 277 4
setp.gt.s32 %r135,%r87,1074191213;
@ %r135 bra $L10;
.loc 1 279 15
fma.rn.f64 %r50,%r89,0dc023a0efc69ac25c,0dc054526557e4d2f2;
.loc 1 279 8
fma.rn.f64 %r51,%r50,%r89,0dc067135cebccabb2;
.loc 1 278 39
fma.rn.f64 %r52,%r51,%r89,0dc0644cb184282266;
.loc 1 278 32
fma.rn.f64 %r53,%r52,%r89,0dc04f300ae4cba38d;
.loc 1 278 25
fma.rn.f64 %r54,%r53,%r89,0dc0251e0441b0e726;
.loc 1 278 18
fma.rn.f64 %r55,%r54,%r89,0dbfe63416e4ba7360;
.loc 1 278 7
fma.rn.f64 %r84,%r55,%r89,0dbf843412600d6435;
.loc 1 281 22
fma.rn.f64 %r56,%r89,0dbfaeeff2ee749a62,0d401a47ef8e484a93;
.loc 1 281 15
fma.rn.f64 %r57,%r56,%r89,0d405b28a3ee48ae2c;
.loc 1 281 8
fma.rn.f64 %r58,%r57,%r89,0d407ad02157700314;
.loc 1 280 39
fma.rn.f64 %r59,%r58,%r89,0d40842b1921ec2868;
.loc 1 280 32
fma.rn.f64 %r60,%r59,%r89,0d407b290dd58a1a71;
.loc 1 280 25
fma.rn.f64 %r61,%r60,%r89,0d4061350c526ae721;
.loc 1 280 18
fma.rn.f64 %r62,%r61,%r89,0d4033a6b9bd707687;
.loc 1 280 7
fma.rn.f64 %r85,%r62,%r89,0d3ff0000000000000;
bra $L11;
$L10:
.loc 1 284 8
fma.rn.f64 %r63,%r89,0dc07e384e9bdc383f,0dc09004616a2e5992;
.loc 1 283 39
fma.rn.f64 %r64,%r63,%r89,0dc083ec881375f228;
.loc 1 283 32
fma.rn.f64 %r65,%r64,%r89,0dc064145d43c5ed98;
.loc 1 283 25
fma.rn.f64 %r66,%r65,%r89,0dc031c209555f995a;
.loc 1 283 18
fma.rn.f64 %r67,%r66,%r89,0dbfe993ba70c285de;
.loc 1 283 7
fma.rn.f64 %r84,%r67,%r89,0dbf84341239e86f4a;
.loc 1 286 15
fma.rn.f64 %r68,%r89,0dc03670e242712d62,0d407da874e79fe763;
.loc 1 286 8
fma.rn.f64 %r69,%r68,%r89,0d40a3f219cedf3be6;
.loc 1 285 39
fma.rn.f64 %r70,%r69,%r89,0d40a8ffb7688c246a;
.loc 1 285 32
fma.rn.f64 %r71,%r70,%r89,0d409802eb189d5118;
.loc 1 285 25
fma.rn.f64 %r72,%r71,%r89,0d40745cae221b9f0a;
.loc 1 285 18
fma.rn.f64 %r73,%r72,%r89,0d403e568b261d5190;
.loc 1 285 7
fma.rn.f64 %r85,%r73,%r89,0d3ff0000000000000;
$L11:
.loc 1 289 2
mov.b64 %r102,%r132;
and.b64 %r136,%r102,-4294967296;
mov.b64 %r91,%r136;
.loc 1 290 22
neg.f64 %r137,%r91;
.loc 1 290 8
fma.rn.f64 %r75,%r137,%r91,0dbfe2000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r75;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r139,[%value_in];
}
.loc 1 290 51
sub.f64 %r140,%r91,%r132;
.loc 1 290 57
add.f64 %r141,%r132,%r91;
.loc 1 290 62
div.rn.f64 %r142,%r84,%r85;
.loc 1 290 35
fma.rn.f64 %r80,%r140,%r141,%r142;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r80;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r144,[%value_in];
}
.loc 1 290 5
mul.f64 %r92,%r139,%r144;
.loc 1 291 4
setp.lt.s32 %r145,%r86,0;
@ %r145 bra $L12;
.loc 1 291 24
div.rn.f64 %r146,%r92,%r132;
.loc 1 291 22
mov.f64 %r147,0d3ff0000000000000;
sub.f64 %r103,%r147,%r146;
bra $L1;
$L12:
.loc 1 291 42
div.rn.f64 %r148,%r92,%r132;
.loc 1 291 44
mov.f64 %r149,0d3ff0000000000000;
sub.f64 %r103,%r148,%r149;
$L1:
.loc 1 292 1
mov.f64 %value,%r103;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: erfc
.visible .func (.param .f64 %value_out) erfc (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r39;
.reg .f64 %r40;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r73;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r77;
.reg .f64 %r82;
.reg .f64 %r85;
.reg .f64 %r86;
.reg .u32 %r87;
.reg .u32 %r88;
.reg .f64 %r90;
.reg .u32 %r91;
.reg .f64 %r93;
.reg .f64 %r94;
.reg .f64 %r95;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .f64 %r99;
.reg .f64 %r100;
.reg .f64 %r101;
.reg .f64 %r104;
.reg .u64 %r105;
.reg .f64 %r106;
.reg .f64 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .pred %r110;
.reg .u32 %r111;
.reg .u32 %r112;
.reg .f64 %r113;
.reg .f64 %r114;
.reg .f64 %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .f64 %r118;
.reg .f64 %r119;
.reg .pred %r120;
.reg .f64 %r121;
.reg .f64 %r122;
.reg .f64 %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .pred %r127;
.reg .f64 %r129;
.reg .f64 %r130;
.reg .pred %r131;
.reg .f64 %r132;
.reg .f64 %r133;
.reg .f64 %r134;
.reg .f64 %r135;
.reg .pred %r136;
.reg .f64 %r138;
.reg .f64 %r139;
.reg .f64 %r140;
.reg .pred %r141;
.reg .u32 %r143;
.reg .u32 %r145;
.reg .u32 %r146;
.reg .u16 %r148;
.reg .u16 %r149;
.reg .u16 %r150;
.reg .u32 %r151;
.reg .u16 %r152;
.reg .pred %r153;
.reg .u64 %r154;
.reg .f64 %r155;
.reg .f64 %r157;
.reg .f64 %r158;
.reg .f64 %r159;
.reg .f64 %r160;
.reg .f64 %r162;
.reg .pred %r163;
.reg .f64 %r164;
.reg .f64 %r165;
.reg .pred %r166;
.reg .u32 %r167;
.reg .f64 %r168;
mov.f64 %r107,%ar0;
mov.b64 %r108,%r107;
shr.u64 %r109,%r108,32;
cvt.u32.u64 %r91,%r109;
.loc 1 303 2
cvt.u32.u64 %r87,%r109;
.loc 1 304 5
and.b32 %r88,%r91,2147483647;
.loc 1 305 4
setp.le.s32 %r110,%r88,2146435071;
@ %r110 bra $L15;
.loc 1 307 37
shr.u32 %r111,%r91,31;
.loc 1 307 42
add.u32 %r112,%r111,%r111;
.loc 1 307 13
cvt.rn.f64.s32 %r113,%r112;
.loc 1 307 50
mov.f64 %r115,0d3ff0000000000000;
div.rn.f64 %r114,%r115,%r107;
.loc 1 307 46
add.f64 %r106,%r113,%r114;
bra $L14;
$L15:
.loc 1 310 4
setp.gt.s32 %r116,%r88,1072365567;
@ %r116 bra $L17;
.loc 1 311 8
setp.gt.s32 %r117,%r88,1013972991;
@ %r117 bra $L18;
.loc 1 312 13
mov.f64 %r118,0d3ff0000000000000;
sub.f64 %r106,%r118,%r107;
bra $L14;
$L18:
.loc 1 313 8
mul.f64 %r99,%r107,%r107;
.loc 1 314 34
fma.rn.f64 %r26,%r99,0dbef8ead6120016ac,0dbf77a291236668e4;
.loc 1 314 27
fma.rn.f64 %r27,%r26,%r99,0dbf9d2a51dbd7194f;
.loc 1 314 20
fma.rn.f64 %r28,%r27,%r99,0dbfd4cd7d691cb913;
.loc 1 314 8
fma.rn.f64 %r100,%r28,%r99,0d3fc06eba8214db68;
.loc 1 315 41
fma.rn.f64 %r29,%r99,0dbed09c4342a26120,0d3f215dc9221c1a10;
.loc 1 315 34
fma.rn.f64 %r30,%r29,%r99,0d3f74d022c4d36b0f;
.loc 1 315 27
fma.rn.f64 %r31,%r30,%r99,0d3fb0a54c5536ceba;
.loc 1 315 20
fma.rn.f64 %r32,%r31,%r99,0d3fd97779cddadc09;
.loc 1 315 8
fma.rn.f64 %r101,%r32,%r99,0d3ff0000000000000;
.loc 1 316 8
div.rn.f64 %r119,%r100,%r101;
.loc 1 318 18
mul.f64 %r104,%r119,%r107;
.loc 1 317 8
setp.gt.s32 %r120,%r91,1070596095;
@ %r120 bra $L19;
.loc 1 318 16
add.f64 %r121,%r107,%r104;
.loc 1 318 13
mov.f64 %r122,0d3ff0000000000000;
sub.f64 %r106,%r122,%r121;
bra $L14;
$L19:
.loc 1 321 10
mov.f64 %r124,0d3fe0000000000000;
sub.f64 %r123,%r107,%r124;
.loc 1 321 5
add.f64 %r125,%r123,%r104;
.loc 1 322 22
sub.f64 %r106,%r124,%r125;
bra $L14;
$L17:
.loc 1 325 4
setp.gt.s32 %r127,%r88,1072955391;
@ %r127 bra $L20;
.loc 1 326 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r107;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r129,[%value_in];
}
.loc 1 326 8
mov.f64 %r130,0d3ff0000000000000;
sub.f64 %r95,%r129,%r130;
.loc 1 327 48
fma.rn.f64 %r36,%r95,0dbf61bf380a96073f,0d3fa22a36599795eb;
.loc 1 327 41
fma.rn.f64 %r37,%r36,%r95,0dbfbc63983d3e28ec;
.loc 1 327 34
fma.rn.f64 %r38,%r37,%r95,0d3fd45fca805120e4;
.loc 1 327 27
fma.rn.f64 %r39,%r38,%r95,0dbfd7d240fbb8c3f1;
.loc 1 327 20
fma.rn.f64 %r40,%r39,%r95,0d3fda8d00ad92b34d;
.loc 1 327 8
fma.rn.f64 %r96,%r40,%r95,0dbf6359b8bef77538;
.loc 1 328 48
fma.rn.f64 %r41,%r95,0d3f888b545735151d,0d3f8bedc26b51dd1c;
.loc 1 328 41
fma.rn.f64 %r42,%r41,%r95,0d3fc02660e763351f;
.loc 1 328 34
fma.rn.f64 %r43,%r42,%r95,0d3fb2635cd99fe9a7;
.loc 1 328 27
fma.rn.f64 %r44,%r43,%r95,0d3fe14af092eb6f33;
.loc 1 328 20
fma.rn.f64 %r45,%r44,%r95,0d3fbb3e6618eee323;
.loc 1 328 8
fma.rn.f64 %r97,%r45,%r95,0d3ff0000000000000;
.loc 1 329 8
setp.lt.s32 %r131,%r91,0;
@ %r131 bra $L21;
.loc 1 330 36
div.rn.f64 %r132,%r96,%r97;
.loc 1 330 33
mov.f64 %r133,0d3fc3d4fa80000000;
sub.f64 %r106,%r133,%r132;
bra $L14;
$L21:
.loc 1 332 12
div.rn.f64 %r134,%r96,%r97;
.loc 1 332 5
add.f64 %r135,%r134,0d3feb0ac160000000;
.loc 1 332 26
add.f64 %r106,%r135,0d3ff0000000000000;
bra $L14;
$L20:
.loc 1 335 5
setp.gt.s32 %r136,%r88,1077673983;
@ %r136 bra $L22;
.loc 1 336 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r107;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r138,[%value_in];
}
.loc 1 337 17
mul.f64 %r139,%r138,%r138;
.loc 1 337 9
mov.f64 %r140,0d3ff0000000000000;
div.rn.f64 %r90,%r140,%r139;
.loc 1 338 8
setp.gt.s32 %r141,%r88,1074191212;
@ %r141 bra $L23;
.loc 1 340 15
fma.rn.f64 %r49,%r90,0dc023a0efc69ac25c,0dc054526557e4d2f2;
.loc 1 340 8
fma.rn.f64 %r50,%r49,%r90,0dc067135cebccabb2;
.loc 1 339 43
fma.rn.f64 %r51,%r50,%r90,0dc0644cb184282266;
.loc 1 339 36
fma.rn.f64 %r52,%r51,%r90,0dc04f300ae4cba38d;
.loc 1 339 29
fma.rn.f64 %r53,%r52,%r90,0dc0251e0441b0e726;
.loc 1 339 22
fma.rn.f64 %r54,%r53,%r90,0dbfe63416e4ba7360;
.loc 1 339 11
fma.rn.f64 %r85,%r54,%r90,0dbf843412600d6435;
.loc 1 342 22
fma.rn.f64 %r55,%r90,0dbfaeeff2ee749a62,0d401a47ef8e484a93;
.loc 1 342 15
fma.rn.f64 %r56,%r55,%r90,0d405b28a3ee48ae2c;
.loc 1 342 8
fma.rn.f64 %r57,%r56,%r90,0d407ad02157700314;
.loc 1 341 43
fma.rn.f64 %r58,%r57,%r90,0d40842b1921ec2868;
.loc 1 341 36
fma.rn.f64 %r59,%r58,%r90,0d407b290dd58a1a71;
.loc 1 341 29
fma.rn.f64 %r60,%r59,%r90,0d4061350c526ae721;
.loc 1 341 22
fma.rn.f64 %r61,%r60,%r90,0d4033a6b9bd707687;
.loc 1 341 11
fma.rn.f64 %r86,%r61,%r90,0d3ff0000000000000;
bra $L24;
$L23:
.loc 1 344 8
shr.u32 %r143,%r87,31;
.loc 1 344 14
set.u32.gt.s32 %r145,%r88,1075314687;
neg.s32 %r146,%r145;
.loc 1 344 10
cvt.u16.u32 %r149,%r143;
cvt.u16.u32 %r150,%r146;
and.b16 %r148,%r149,%r150;
.loc 1 344 5
cvt.u32.u16 %r151,%r148;
cvt.u16.u8 %r152,%r151;
setp.eq.u16 %r153,%r152,0;
@ %r153 bra $L25;
$L27:
.loc 1 344 38
mov.f64 %r106,0d4000000000000000;
bra $L14;
$L25:
.loc 1 346 8
fma.rn.f64 %r65,%r90,0dc07e384e9bdc383f,0dc09004616a2e5992;
.loc 1 345 43
fma.rn.f64 %r66,%r65,%r90,0dc083ec881375f228;
.loc 1 345 36
fma.rn.f64 %r67,%r66,%r90,0dc064145d43c5ed98;
.loc 1 345 29
fma.rn.f64 %r68,%r67,%r90,0dc031c209555f995a;
.loc 1 345 22
fma.rn.f64 %r69,%r68,%r90,0dbfe993ba70c285de;
.loc 1 345 11
fma.rn.f64 %r85,%r69,%r90,0dbf84341239e86f4a;
.loc 1 348 15
fma.rn.f64 %r70,%r90,0dc03670e242712d62,0d407da874e79fe763;
.loc 1 348 8
fma.rn.f64 %r71,%r70,%r90,0d40a3f219cedf3be6;
.loc 1 347 43
fma.rn.f64 %r72,%r71,%r90,0d40a8ffb7688c246a;
.loc 1 347 36
fma.rn.f64 %r73,%r72,%r90,0d409802eb189d5118;
.loc 1 347 29
fma.rn.f64 %r74,%r73,%r90,0d40745cae221b9f0a;
.loc 1 347 22
fma.rn.f64 %r75,%r74,%r90,0d403e568b261d5190;
.loc 1 347 11
fma.rn.f64 %r86,%r75,%r90,0d3ff0000000000000;
$L24:
.loc 1 351 6
mov.b64 %r105,%r138;
and.b64 %r154,%r105,-4294967296;
mov.b64 %r93,%r154;
.loc 1 352 26
neg.f64 %r155,%r93;
.loc 1 352 12
fma.rn.f64 %r77,%r155,%r93,0dbfe2000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r77;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r157,[%value_in];
}
.loc 1 353 20
sub.f64 %r158,%r93,%r138;
.loc 1 353 26
add.f64 %r159,%r138,%r93;
.loc 1 353 31
div.rn.f64 %r160,%r85,%r86;
.loc 1 353 4
fma.rn.f64 %r82,%r158,%r159,%r160;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r82;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r162,[%value_in];
}
.loc 1 352 9
mul.f64 %r94,%r157,%r162;
.loc 1 354 8
setp.le.s32 %r163,%r87,0;
@ %r163 bra $L26;
.loc 1 354 23
div.rn.f64 %r106,%r94,%r138;
bra $L14;
$L26:
.loc 1 354 44
div.rn.f64 %r164,%r94,%r138;
.loc 1 354 42
mov.f64 %r165,0d4000000000000000;
sub.f64 %r106,%r165,%r164;
bra $L14;
$L22:
.loc 1 356 8
setp.le.s32 %r166,%r91,0;
@ %r166 bra $L27;
.loc 1 356 22
mov.u32 %r167,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r167;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r168,[%value_in];
}
mov.f64 %r106,%r168;
$L14:
.loc 1 358 1
mov.f64 %value,%r106;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_exp10.o/1612277259  0     0     100666  962       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp10
.visible .func (.param .f64 %value_out) exp10 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_exp10.c"
// BEGIN GLOBAL FUNCTION DECL: pow
.extern .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: exp10
.visible .func (.param .f64 %value_out) exp10 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r26;
mov.f64 %r23,%ar0;
.loc 1 66 10
mov.f64 %r24,0d4024000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r23;
call (%value_in),pow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 67 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_expm1.o/1612277260  0     0     100666  8943      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: expm1
.visible .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_expm1.c"
// BEGIN GLOBAL FUNCTION DECL: __math_oflow
.extern .func (.param .f64 %value_out) __math_oflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: expm1
.visible .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .f64 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .u32 %r59;
.reg .f64 %r60;
.reg .u32 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .u32 %r64;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r70;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r74;
.reg .f64 %r75;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .f64 %r78;
.reg .f64 %r80;
.reg .f64 %r81;
.reg .f64 %r88;
.reg .u32 %r90;
.reg .u64 %r91;
.reg .u64 %r93;
.reg .u64 %r95;
.reg .f64 %r96;
.reg .f64 %r97;
.reg .u64 %r98;
.reg .u64 %r99;
.reg .pred %r100;
.reg .pred %r101;
.reg .pred %r102;
.reg .u32 %r103;
.reg .u32 %r105;
.reg .u32 %r106;
.reg .pred %r107;
.reg .pred %r108;
.reg .pred %r109;
.reg .u32 %r110;
.reg .f64 %r111;
.reg .pred %r112;
.reg .f64 %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .f64 %r118;
.reg .pred %r119;
.reg .f64 %r120;
.reg .f64 %r122;
.reg .pred %r123;
.reg .f64 %r124;
.reg .f64 %r125;
.reg .f64 %r126;
.reg .f64 %r127;
.reg .pred %r128;
.reg .f64 %r129;
.reg .f64 %r130;
.reg .pred %r131;
.reg .f64 %r132;
.reg .pred %r133;
.reg .pred %r134;
.reg .f64 %r135;
.reg .f64 %r136;
.reg .f64 %r137;
.reg .u32 %r138;
.reg .pred %r139;
.reg .f64 %r140;
.reg .f64 %r141;
.reg .u64 %r143;
.reg .u32 %r144;
.reg .u32 %r145;
.reg .u64 %r146;
.reg .u64 %r147;
.reg .u64 %r148;
.reg .u64 %r149;
.reg .pred %r151;
.reg .u32 %r152;
.reg .u32 %r153;
.reg .u32 %r154;
.reg .u32 %r155;
.reg .u64 %r156;
.reg .u64 %r157;
.reg .f64 %r160;
.reg .u64 %r162;
.reg .u32 %r163;
.reg .u32 %r164;
.reg .u64 %r165;
.reg .u64 %r166;
.reg .u64 %r167;
.reg .u64 %r168;
.reg .u32 %r169;
.reg .u32 %r170;
.reg .u32 %r171;
.reg .u64 %r172;
.reg .u64 %r173;
.reg .f64 %r176;
.reg .u64 %r178;
.reg .u32 %r179;
.reg .u32 %r180;
.reg .u64 %r181;
.reg .u64 %r182;
.reg .u64 %r183;
.reg .u64 %r184;
mov.f64 %r97,%ar0;
mov.b64 %r98,%r97;
shr.u64 %r99,%r98,32;
cvt.u32.u64 %r64,%r99;
.loc 1 180 10
cvt.u32.u64 %r22,%r99;
.loc 1 182 5
and.b32 %r61,%r64,2147483647;
.loc 1 185 4
setp.le.u32 %r100,%r61,1078159481;
@ %r100 bra $L2;
.loc 1 186 8
setp.le.u32 %r101,%r61,1082535489;
@ %r101 bra $L3;
.loc 1 187 19
setp.le.u32 %r102,%r61,2146435071;
@ %r102 bra $L4;
.loc 1 190 14
and.b32 %r103,%r64,1048575;
.loc 1 190 23
cvt.u32.u64 %r106,%r98;
or.b32 %r105,%r103,%r106;
.loc 1 190 9
setp.eq.u32 %r107,%r105,0;
@ %r107 bra $L5;
.loc 1 191 20
add.f64 %r96,%r97,%r97;
bra $L1;
$L5:
.loc 1 192 30
setp.lt.s32 %r108,%r64,0;
selp.f64 %r96,0dbff0000000000000,%r97,%r108;
bra $L1;
$L4:
.loc 1 194 12
setp.gt.f64 %r109,%r97,0d40862e42fefa39ef;
@ ! %r109 bra $L3;
.loc 1 194 37
mov.u32 %r110,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r110;
call (%value_in),__math_oflow,(%out_arg1);
ld.param.f64 %r111,[%value_in];
}
mov.f64 %r96,%r111;
bra $L1;
$L3:
.loc 1 196 8
setp.ge.s32 %r112,%r22,0;
@ %r112 bra $L8;
.loc 1 197 7
add.f64 %r113,%r97,0d01a56e1fc2f8f359;
.loc 1 197 5
setp.lt.f64 %r114,%r113,0d0000000000000000;
@ ! %r114 bra $L29;
bra $L24;
$L2:
.loc 1 203 4
setp.le.u32 %r115,%r61,1071001154;
@ %r115 bra $L10;
.loc 1 204 8
setp.gt.u32 %r116,%r61,1072734897;
@ %r116 bra $L11;
.loc 1 205 5
setp.lt.s32 %r117,%r64,0;
@ %r117 bra $L12;
.loc 1 206 11
mov.f64 %r118,0d3fe62e42fee00000;
sub.f64 %r56,%r97,%r118;
.loc 1 206 42
mov.u32 %r59,1;
.loc 1 206 28
mov.f64 %r57,0d3dea39ef35793c76;
bra $L13;
$L12:
.loc 1 208 11
add.f64 %r56,%r97,0d3fe62e42fee00000;
.loc 1 208 42
mov.u32 %r59,-1;
.loc 1 208 28
mov.f64 %r57,0dbdea39ef35793c76;
bra $L13;
$L11:
.loc 1 210 14
mul.f64 %r88,%r97,0d3ff71547652b82fe;
.loc 1 210 30
setp.ge.s32 %r119,%r64,0;
selp.f64 %r60,0d3fe0000000000000,0dbfe0000000000000,%r119;
$L14:
.loc 1 210 16
add.f64 %r120,%r60,%r88;
.loc 1 210 6
cvt.rzi.s32.f64 %r59,%r120;
.loc 1 211 6
cvt.rn.f64.s32 %r63,%r59;
.loc 1 212 6
fma.rn.f64 %r56,%r63,0dbfe62e42fee00000,%r97;
.loc 1 213 6
mul.f64 %r57,%r63,0d3dea39ef35793c76;
$L13:
.loc 1 215 9
sub.f64 %r97,%r56,%r57;
.loc 1 216 14
sub.f64 %r122,%r56,%r97;
.loc 1 216 9
sub.f64 %r58,%r122,%r57;
bra $L15;
$L10:
.loc 1 218 9
setp.gt.u32 %r123,%r61,1016070143;
@ %r123 bra $L26;
.loc 1 219 8
add.f64 %r62,%r97,0d7e37e43c8800759c;
.loc 1 220 19
sub.f64 %r124,%r62,%r62;
.loc 1 220 15
sub.f64 %r96,%r97,%r124;
bra $L1;
$L26:
.loc 1 222 9
mov.u32 %r59,0;
$L15:
.loc 1 225 6
mul.f64 %r66,%r97,0d3fe0000000000000;
.loc 1 226 6
mul.f64 %r67,%r97,%r66;
.loc 1 227 42
fma.rn.f64 %r29,%r67,0dbe8afdb76e09c32d,0d3ed0cfca86e65239;
.loc 1 227 34
fma.rn.f64 %r30,%r29,%r67,0dbf14ce199eaadbb7;
.loc 1 227 26
fma.rn.f64 %r31,%r30,%r67,0d3f5a01a019fe5585;
.loc 1 227 18
fma.rn.f64 %r32,%r31,%r67,0dbfa11111111110f4;
.loc 1 227 5
fma.rn.f64 %r68,%r32,%r67,0d3ff0000000000000;
.loc 1 228 5
neg.f64 %r125,%r66;
fma.rn.f64 %r69,%r125,%r68,0d4008000000000000;
.loc 1 229 15
sub.f64 %r33,%r68,%r69;
.loc 1 229 24
neg.f64 %r126,%r97;
fma.rn.f64 %r34,%r126,%r69,0d4018000000000000;
.loc 1 229 18
div.rn.f64 %r127,%r33,%r34;
.loc 1 229 5
mul.f64 %r70,%r127,%r67;
.loc 1 230 4
setp.ne.u32 %r128,%r59,0;
@ %r128 bra $L16;
.loc 1 230 26
neg.f64 %r129,%r67;
fma.rn.f64 %r36,%r97,%r70,%r129;
.loc 1 230 20
sub.f64 %r96,%r97,%r36;
bra $L1;
$L16:
.loc 1 232 16
sub.f64 %r37,%r70,%r58;
.loc 1 232 9
neg.f64 %r130,%r58;
fma.rn.f64 %r71,%r37,%r97,%r130;
.loc 1 233 8
sub.f64 %r72,%r71,%r67;
.loc 1 234 8
setp.ne.u32 %r131,%r59,-1;
@ %r131 bra $L17;
.loc 1 234 30
sub.f64 %r132,%r97,%r72;
.loc 1 234 33
fma.rn.f64 %r96,%r132,0d3fe0000000000000,0dbfe0000000000000;
bra $L1;
$L17:
.loc 1 235 13
setp.ne.u32 %r133,%r59,1;
@ %r133 bra $L18;
.loc 1 236 12
setp.lt.f64 %r134,%r97,0dbfd0000000000000;
@ ! %r134 bra $L30;
.loc 1 236 41
add.f64 %r135,%r97,0d3fe0000000000000;
.loc 1 236 38
sub.f64 %r136,%r72,%r135;
.loc 1 236 35
mul.f64 %r96,%r136,0dc000000000000000;
bra $L1;
$L30:
.loc 1 237 40
sub.f64 %r137,%r97,%r72;
.loc 1 237 33
fma.rn.f64 %r96,%r137,0d4000000000000000,0d3ff0000000000000;
bra $L1;
$L18:
.loc 1 243 3
shl.b32 %r90,%r59,20;
.loc 1 239 18
add.u32 %r138,%r59,1;
.loc 1 239 9
setp.le.u32 %r139,%r138,57;
@ %r139 bra $L21;
.loc 1 241 20
sub.f64 %r140,%r72,%r97;
.loc 1 241 12
mov.f64 %r141,0d3ff0000000000000;
sub.f64 %r80,%r141,%r140;
.loc 1 243 3
mov.b64 %r91,%r80;
shr.u64 %r143,%r91,32;
cvt.u32.u64 %r145,%r143;
add.u32 %r144,%r90,%r145;
cvt.u64.u32 %r146,%r144;
shl.b64 %r147,%r146,32;
and.b64 %r148,%r91,4294967295;
or.b64 %r149,%r148,%r147;
mov.b64 %r81,%r149;
.loc 1 244 18
sub.f64 %r96,%r81,%r141;
bra $L1;
$L21:
.loc 1 247 8
setp.gt.s32 %r151,%r59,19;
@ %r151 bra $L22;
.loc 1 249 10
mov.u32 %r153,2097152;
shr.s32 %r152,%r153,%r59;
mov.u32 %r155,1072693248;
sub.u32 %r154,%r155,%r152;
cvt.u64.u32 %r156,%r154;
shl.b64 %r157,%r156,32;
mov.b64 %r77,%r157;
.loc 1 250 18
sub.f64 %r160,%r72,%r97;
.loc 1 250 12
sub.f64 %r78,%r77,%r160;
.loc 1 252 3
mov.b64 %r93,%r78;
shr.u64 %r162,%r93,32;
cvt.u32.u64 %r164,%r162;
add.u32 %r163,%r90,%r164;
cvt.u64.u32 %r165,%r163;
shl.b64 %r166,%r165,32;
and.b64 %r167,%r93,4294967295;
or.b64 %r168,%r167,%r166;
mov.b64 %r96,%r168;
bra $L1;
$L22:
.loc 1 255 3
mov.u32 %r170,1023;
sub.u32 %r169,%r170,%r59;
shl.b32 %r171,%r169,20;
cvt.u64.u32 %r172,%r171;
shl.b64 %r173,%r172,32;
mov.b64 %r74,%r173;
.loc 1 256 18
add.f64 %r176,%r72,%r74;
.loc 1 256 12
sub.f64 %r75,%r97,%r176;
.loc 1 257 12
add.f64 %r76,%r75,0d3ff0000000000000;
.loc 1 259 3
mov.b64 %r95,%r76;
shr.u64 %r178,%r95,32;
cvt.u32.u64 %r180,%r178;
add.u32 %r179,%r90,%r180;
cvt.u64.u32 %r181,%r179;
shl.b64 %r182,%r181,32;
and.b64 %r183,%r95,4294967295;
or.b64 %r184,%r183,%r182;
mov.b64 %r96,%r184;
bra $L1;
$L24:
.loc 1 192 30
mov.f64 %r96,0dbff0000000000000;
bra $L1;
$L29:
.loc 1 210 14
mul.f64 %r88,%r97,0d3ff71547652b82fe;
.loc 1 210 30
mov.f64 %r60,0dbfe0000000000000;
bra $L14;
$L8:
.loc 1 210 14
mul.f64 %r88,%r97,0d3ff71547652b82fe;
.loc 1 210 30
mov.f64 %r60,0d3fe0000000000000;
bra $L14;
$L1:
.loc 1 263 1
mov.f64 %value,%r96;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_fabs.o/ 1612277259  0     0     100666  879       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fabs
.visible .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_fabs.c"
// BEGIN GLOBAL FUNCTION DEF: fabs
.visible .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %r24;
.reg .f64 %r26;
.reg .u64 %r28;
.reg .u32 %r29;
.reg .u32 %r30;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .u64 %r33;
.reg .u64 %r34;
mov.f64 %r26,%ar0;
.loc 1 61 2
mov.b64 %r24,%r26;
shr.u64 %r28,%r24,32;
cvt.u32.u64 %r30,%r28;
and.b32 %r29,%r30,2147483647;
cvt.u64.u32 %r31,%r29;
shl.b64 %r32,%r31,32;
and.b64 %r33,%r24,4294967295;
or.b64 %r34,%r33,%r32;
mov.b64 %value,%r34;
.loc 1 63 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_fdim.o/ 1612277260  0     0     100666  1542      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fdim
.visible .func (.param .f64 %value_out) fdim (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_fdim.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyd
.extern .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fdim
.visible .func (.param .f64 %value_out) fdim (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f64 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 52 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 52 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 53 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 53 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 55 24
setp.gt.f64 %r33,%r25,%r26;
@ ! %r33 bra $L10;
sub.f64 %r25,%r25,%r26;
bra $L2;
$L4:
.loc 1 53 42
mov.f64 %r25,%r26;
bra $L2;
$L10:
.loc 1 55 24
mov.f64 %r25,0d0000000000000000;
$L2:
.loc 1 56 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}
/962            1612277259  0     0     100666  815       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: finite
.visible .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_finite.c"
// BEGIN GLOBAL FUNCTION DEF: finite
.visible .func (.param .u32 %value_out) finite (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r29;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
mov.f64 %r29,%ar0;
.loc 1 31 2
mov.b64 %r31,%r29;
shr.u64 %r32,%r31,32;
.loc 1 32 32
cvt.u32.u64 %r34,%r32;
and.b32 %r33,%r34,2147483647;
.loc 1 32 44
add.u32 %r35,%r33,-2146435072;
.loc 1 32 56
shr.u32 %value,%r35,31;
.loc 1 33 1
st.param.u32 [%value_out],%value;
ret;
}

lib_a-s_floor.o/1612277259  0     0     100666  4089      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: floor
.visible .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_floor.c"
// BEGIN GLOBAL FUNCTION DEF: floor
.visible .func (.param .f64 %value_out) floor (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .u64 %r54;
.reg .u64 %r55;
.reg .u32 %r57;
.reg .pred %r58;
.reg .pred %r59;
.reg .f64 %r60;
.reg .pred %r61;
.reg .pred %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .pred %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .pred %r69;
.reg .f64 %r70;
.reg .pred %r71;
.reg .pred %r72;
.reg .u32 %r73;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .u32 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .pred %r81;
.reg .f64 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .u32 %r88;
.reg .u32 %r89;
.reg .pred %r90;
.reg .u32 %r91;
.reg .u64 %r92;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .u64 %r98;
mov.f64 %r53,%ar0;
mov.b64 %r54,%r53;
shr.u64 %r55,%r54,32;
cvt.u32.u64 %r46,%r55;
cvt.u32.u64 %r48,%r54;
.loc 1 85 11
shr.s32 %r57,%r46,20;
.loc 1 85 16
and.b32 %r23,%r57,2047;
.loc 1 85 5
add.u32 %r42,%r23,-1023;
.loc 1 86 4
setp.gt.s32 %r58,%r42,19;
@ %r58 bra $L2;
.loc 1 87 8
setp.ge.s32 %r59,%r42,0;
@ %r59 bra $L3;
.loc 1 88 10
add.f64 %r60,%r53,0d7e37e43c8800759c;
.loc 1 88 5
setp.gt.f64 %r61,%r60,0d0000000000000000;
@ ! %r61 bra $L4;
.loc 1 89 9
setp.ge.s32 %r62,%r46,0;
@ %r62 bra $L13;
.loc 1 90 19
and.b32 %r63,%r46,2147483647;
.loc 1 90 31
or.b32 %r64,%r63,%r48;
.loc 1 90 14
setp.eq.u32 %r65,%r64,0;
mov.u32 %r48,0;
selp.u32 %r46,%r46,-1074790400,%r65;
bra $L4;
$L3:
.loc 1 94 19
mov.u32 %r66,1048575;
shr.s32 %r49,%r66,%r42;
.loc 1 95 10
and.b32 %r67,%r46,%r49;
.loc 1 95 13
or.b32 %r68,%r67,%r48;
.loc 1 95 5
setp.eq.u32 %r69,%r68,0;
@ %r69 bra $L15;
.loc 1 96 10
add.f64 %r70,%r53,0d7e37e43c8800759c;
.loc 1 96 5
setp.gt.f64 %r71,%r70,0d0000000000000000;
@ ! %r71 bra $L4;
.loc 1 97 9
setp.ge.s32 %r72,%r46,0;
@ %r72 bra $L8;
.loc 1 97 34
mov.u32 %r74,1048576;
shr.s32 %r73,%r74,%r42;
.loc 1 97 19
add.u32 %r46,%r73,%r46;
$L8:
.loc 1 98 14
not.b32 %r75,%r49;
.loc 1 98 10
and.b32 %r46,%r46,%r75;
mov.u32 %r48,0;
bra $L4;
$L2:
.loc 1 101 12
setp.le.s32 %r76,%r42,51;
@ %r76 bra $L9;
.loc 1 102 8
setp.ne.u32 %r77,%r42,1024;
@ %r77 bra $L16;
.loc 1 102 28
add.f64 %r52,%r53,%r53;
bra $L1;
$L9:
.loc 1 105 41
add.u32 %r78,%r23,-1043;
.loc 1 105 8
mov.u32 %r79,-1;
shr.u32 %r43,%r79,%r78;
.loc 1 106 12
and.b32 %r80,%r43,%r48;
.loc 1 106 8
setp.eq.u32 %r81,%r80,0;
@ %r81 bra $L17;
.loc 1 107 13
add.f64 %r82,%r53,0d7e37e43c8800759c;
.loc 1 107 8
setp.gt.f64 %r83,%r82,0d0000000000000000;
@ ! %r83 bra $L4;
.loc 1 108 5
setp.ge.s32 %r84,%r46,0;
@ %r84 bra $L11;
.loc 1 109 9
setp.ne.u32 %r85,%r42,20;
@ %r85 bra $L12;
.loc 1 109 20
add.u32 %r46,%r46,1;
bra $L11;
$L12:
.loc 1 111 18
mov.u32 %r87,52;
sub.u32 %r86,%r87,%r42;
.loc 1 111 13
mov.u32 %r89,1;
shl.b32 %r88,%r89,%r86;
.loc 1 111 10
add.u32 %r44,%r88,%r48;
.loc 1 112 6
setp.ge.u32 %r90,%r44,%r48;
@ %r90 bra $L18;
.loc 1 112 16
add.u32 %r46,%r46,1;
.loc 1 119 2
mov.u32 %r48,%r44;
bra $L11;
$L18:
mov.u32 %r48,%r44;
$L11:
.loc 1 116 10
not.b32 %r91,%r43;
.loc 1 116 6
and.b32 %r48,%r48,%r91;
bra $L4;
$L13:
mov.u32 %r48,0;
mov.u32 %r46,%r48;
$L4:
.loc 1 119 2
cvt.u64.u32 %r92,%r46;
cvt.u64.u32 %r96,%r48;
shl.b64 %r97,%r92,32;
or.b64 %r98,%r97,%r96;
mov.b64 %r52,%r98;
.loc 1 120 9
bra $L1;
$L15:
.loc 1 95 29
mov.f64 %r52,%r53;
bra $L1;
$L16:
mov.f64 %r52,%r53;
bra $L1;
$L17:
mov.f64 %r52,%r53;
$L1:
.loc 1 121 1
mov.f64 %value,%r52;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_fma.o/  1612277260  0     0     100666  806       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fma
.visible .func (.param .f64 %value_out) fma (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2);
.file 1 "../../../../../newlib/libm/common/s_fma.c"
// BEGIN GLOBAL FUNCTION DEF: fma
.visible .func (.param .f64 %value_out) fma (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .f64 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %ar2;
ld.param.f64 %ar2,[%in_ar2];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
mov.f64 %r25,%ar2;
.loc 1 55 18
fma.rn.f64 %value,%r23,%r24,%r25;
.loc 1 56 1
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_fmax.o/ 1612277260  0     0     100666  1528      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmax
.visible .func (.param .f64 %value_out) fmax (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_fmax.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyd
.extern .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fmax
.visible .func (.param .f64 %value_out) fmax (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f64 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 44 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 44 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 46 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 46 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 49 20
setp.gt.f64 %r33,%r25,%r26;
@ %r33 bra $L5;
$L2:
mov.f64 %r24,%r26;
bra $L1;
$L4:
.loc 1 47 12
mov.f64 %r24,%r25;
bra $L1;
$L5:
mov.f64 %r24,%r25;
$L1:
.loc 1 50 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_fmin.o/ 1612277260  0     0     100666  1528      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmin
.visible .func (.param .f64 %value_out) fmin (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_fmin.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyd
.extern .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fmin
.visible .func (.param .f64 %value_out) fmin (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f64 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 44 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 44 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 46 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 46 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 49 20
setp.lt.f64 %r33,%r25,%r26;
@ %r33 bra $L5;
$L2:
mov.f64 %r24,%r26;
bra $L1;
$L4:
.loc 1 47 12
mov.f64 %r24,%r25;
bra $L1;
$L5:
mov.f64 %r24,%r25;
$L1:
.loc 1 50 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
/980            1612277260  0     0     100666  2193      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyd
.visible .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_fpclassify.c"
// BEGIN GLOBAL FUNCTION DEF: __fpclassifyd
.visible .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r28;
.reg .u32 %r31;
.reg .u32 %r33;
.reg .f64 %r34;
.reg .u64 %r35;
.reg .u64 %r36;
.reg .u32 %r38;
.reg .pred %r39;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u16 %r46;
.reg .u16 %r47;
.reg .u16 %r48;
.reg .u32 %r49;
.reg .u16 %r50;
.reg .pred %r51;
.reg .u32 %r52;
.reg .pred %r53;
.reg .u32 %r54;
.reg .pred %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u16 %r59;
.reg .u16 %r60;
.reg .u32 %r62;
mov.f64 %r34,%ar0;
mov.b64 %r35,%r34;
shr.u64 %r36,%r35,32;
cvt.u32.u64 %r27,%r36;
cvt.u32.u64 %r28,%r35;
.loc 1 16 26
or.b32 %r38,%r27,%r28;
.loc 1 16 6
setp.eq.u32 %r39,%r38,0;
@ %r39 bra $L3;
.loc 1 17 33
set.u32.eq.u32 %r41,%r28,0;
neg.s32 %r42,%r41;
cvt.u32.u32 %r40,%r42;
.loc 1 17 12
set.u32.eq.u32 %r44,%r27,-2147483648;
neg.s32 %r45,%r44;
.loc 1 17 26
cvt.u16.u32 %r47,%r45;
cvt.u16.u8 %r48,%r40;
and.b16 %r46,%r47,%r48;
.loc 1 16 48
cvt.u32.u16 %r49,%r46;
cvt.u16.u8 %r50,%r49;
setp.ne.u16 %r51,%r50,0;
@ %r51 bra $L4;
.loc 1 19 31
and.b32 %r31,%r27,2147483647;
add.u32 %r52,%r31,-1048576;
.loc 1 19 11
setp.le.u32 %r53,%r52,2145386495;
@ %r53 bra $L5;
.loc 1 22 31
and.b32 %r54,%r27,2146435072;
.loc 1 22 11
setp.eq.u32 %r55,%r54,0;
@ %r55 bra $L6;
.loc 1 26 17
set.u32.eq.u32 %r57,%r31,2146435072;
neg.s32 %r58,%r57;
.loc 1 26 53
cvt.u16.u32 %r60,%r58;
and.b16 %r59,%r60,%r48;
.loc 1 18 12
cvt.u32.u16 %r62,%r59;
cvt.u32.u8 %r33,%r62;
bra $L1;
$L3:
mov.u32 %r33,2;
bra $L1;
$L4:
mov.u32 %r33,2;
bra $L1;
$L5:
.loc 1 21 12
mov.u32 %r33,4;
bra $L1;
$L6:
.loc 1 25 12
mov.u32 %r33,3;
$L1:
.loc 1 31 1
mov.u32 %value,%r33;
st.param.u32 [%value_out],%value;
ret;
}

lib_a-s_frexp.o/1612277259  0     0     100666  2130      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: frexp
.visible .func (.param .f64 %value_out) frexp (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/s_frexp.c"
// BEGIN GLOBAL FUNCTION DEF: frexp
.visible .func (.param .f64 %value_out) frexp (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %r28;
.reg .u32 %r33;
.reg .u32 %r35;
.reg .u64 %r36;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .u64 %r41;
.reg .u32 %r42;
.reg .pred %r43;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .pred %r47;
.reg .u32 %r48;
.reg .pred %r49;
.reg .u64 %r50;
.reg .u64 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u64 %r57;
.reg .u64 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
mov.f64 %r38,%ar0;
mov.u64 %r39,%ar1;
mov.b64 %r40,%r38;
shr.u64 %r41,%r40,32;
cvt.u32.u64 %r33,%r41;
.loc 1 88 5
and.b32 %r28,%r33,2147483647;
.loc 1 89 8
mov.u32 %r42,0;
st.u32 [%r39],%r42;
.loc 1 90 4
setp.gt.s32 %r43,%r28,2146435071;
@ %r43 bra $L2;
.loc 1 90 25
cvt.u32.u64 %r46,%r40;
or.b32 %r45,%r28,%r46;
.loc 1 90 19
setp.eq.u32 %r47,%r45,0;
@ %r47 bra $L2;
.loc 1 91 5
and.b32 %r48,%r33,2146435072;
setp.ne.u32 %r49,%r48,0;
@ %r49 bra $L4;
.loc 1 92 8
mul.f64 %r38,%r38,0d4350000000000000;
mov.b64 %r50,%r38;
shr.u64 %r51,%r50,32;
cvt.u32.u64 %r33,%r51;
.loc 1 94 9
and.b32 %r28,%r33,2147483647;
mov.u32 %r35,-54;
bra $L3;
$L4:
mov.u32 %r35,%r42;
$L3:
.loc 1 97 14
shr.s32 %r52,%r28,20;
.loc 1 97 19
add.u32 %r53,%r52,-1022;
.loc 1 97 8
add.u32 %r54,%r53,%r35;
st.u32 [%r39],%r54;
.loc 1 99 2
mov.b64 %r36,%r38;
.loc 1 98 10
and.b32 %r55,%r33,-2146435073;
.loc 1 98 22
or.b32 %r56,%r55,1071644672;
.loc 1 99 2
cvt.u64.u32 %r57,%r56;
shl.b64 %r58,%r57,32;
and.b64 %r59,%r36,4294967295;
or.b64 %r60,%r59,%r58;
mov.b64 %r38,%r60;
$L2:
.loc 1 101 1
mov.f64 %value,%r38;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_ilogb.o/1612277260  0     0     100666  2142      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ilogb
.visible .func (.param .u32 %value_out) ilogb (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_ilogb.c"
// BEGIN GLOBAL FUNCTION DEF: ilogb
.visible .func (.param .u32 %value_out) ilogb (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r24;
.reg .u32 %r25;
.reg .u32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
.reg .f64 %r32;
.reg .u64 %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u32 %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .pred %r41;
.reg .pred %r43;
.reg .pred %r44;
.reg .pred %r46;
.reg .pred %r47;
.reg .u32 %r48;
mov.f64 %r32,%ar0;
.loc 1 77 2
mov.b64 %r33,%r32;
shr.u64 %r34,%r33,32;
cvt.u32.u64 %r24,%r34;
.loc 1 78 5
and.b32 %r25,%r24,2147483647;
.loc 1 79 4
and.b32 %r35,%r24,2146435072;
setp.ne.u32 %r36,%r35,0;
@ %r36 bra $L2;
.loc 1 77 2
cvt.u32.u64 %r29,%r33;
.loc 1 80 12
or.b32 %r38,%r29,%r25;
.loc 1 80 8
setp.eq.u32 %r39,%r38,0;
@ %r39 bra $L7;
.loc 1 83 5
setp.ne.u32 %r40,%r25,0;
@ %r40 bra $L4;
.loc 1 84 7
setp.le.s32 %r41,%r29,0;
@ %r41 bra $L8;
.loc 1 84 15
mov.u32 %r31,-1043;
$L5:
.loc 1 84 41
add.u32 %r31,%r31,-1;
.loc 1 84 32
add.u32 %r29,%r29,%r29;
.loc 1 84 7
setp.gt.s32 %r43,%r29,0;
@ %r43 bra $L5;
bra $L1;
$L4:
.loc 1 86 25
shl.b32 %r27,%r25,11;
.loc 1 86 7
setp.le.s32 %r44,%r27,0;
@ %r44 bra $L9;
.loc 1 86 15
mov.u32 %r31,-1022;
$L6:
.loc 1 86 49
add.u32 %r31,%r31,-1;
.loc 1 86 40
add.u32 %r27,%r27,%r27;
.loc 1 86 7
setp.gt.s32 %r46,%r27,0;
@ %r46 bra $L6;
bra $L1;
$L2:
.loc 1 90 10
setp.gt.s32 %r47,%r25,2146435071;
@ %r47 bra $L10;
.loc 1 90 36
shr.s32 %r48,%r25,20;
.loc 1 90 41
add.u32 %r31,%r48,-1023;
bra $L1;
$L7:
.loc 1 81 10
mov.u32 %r31,-2147483647;
bra $L1;
$L8:
.loc 1 84 15
mov.u32 %r31,-1043;
bra $L1;
$L9:
.loc 1 86 15
mov.u32 %r31,-1022;
bra $L1;
$L10:
.loc 1 94 14
mov.u32 %r31,2147483647;
$L1:
.loc 1 95 1
mov.u32 %value,%r31;
st.param.u32 [%value_out],%value;
ret;
}
/1002           1612277260  0     0     100666  451       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: infinity
.visible .func (.param .f64 %value_out) infinity;
.file 1 "../../../../../newlib/libm/common/s_infinity.c"
// BEGIN GLOBAL FUNCTION DEF: infinity
.visible .func (.param .f64 %value_out) infinity
{
.reg .f64 %value;
.loc 1 46 9
mov.f64 %value,0d7ff0000000000000;
.loc 1 47 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_isinf.o/1612277260  0     0     100666  1307      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: isinf
.visible .func (.param .u32 %value_out) isinf (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_isinf.c"
// BEGIN GLOBAL FUNCTION DEF: isinf
.visible .func (.param .u32 %value_out) isinf (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .f64 %r41;
.reg .u64 %r42;
.reg .u64 %r43;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
mov.f64 %r41,%ar0;
.loc 1 22 2
mov.b64 %r42,%r41;
shr.u64 %r43,%r42,32;
cvt.u32.u64 %r33,%r43;
cvt.u32.u64 %r34,%r42;
.loc 1 24 25
neg.s32 %r45,%r34;
.loc 1 24 23
or.b32 %r46,%r45,%r34;
.loc 1 24 30
shr.u32 %r47,%r46,31;
.loc 1 23 5
and.b32 %r48,%r33,2147483647;
.loc 1 24 5
or.b32 %r27,%r47,%r48;
.loc 1 26 36
add.u32 %r50,%r27,-2146435072;
.loc 1 25 5
mov.u32 %r52,2146435072;
sub.u32 %r51,%r52,%r27;
.loc 1 26 34
or.b32 %r53,%r50,%r51;
.loc 1 26 41
shr.u32 %r54,%r53,31;
.loc 1 26 11
mov.u32 %r55,1;
sub.u32 %value,%r55,%r54;
.loc 1 27 1
st.param.u32 [%value_out],%value;
ret;
}

/1022           1612277260  0     0     100666  1320      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __isinfd
.visible .func (.param .u32 %value_out) __isinfd (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_isinfd.c"
// BEGIN GLOBAL FUNCTION DEF: __isinfd
.visible .func (.param .u32 %value_out) __isinfd (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .f64 %r41;
.reg .u64 %r42;
.reg .u64 %r43;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
mov.f64 %r41,%ar0;
.loc 1 15 2
mov.b64 %r42,%r41;
shr.u64 %r43,%r42,32;
cvt.u32.u64 %r33,%r43;
cvt.u32.u64 %r34,%r42;
.loc 1 17 25
neg.s32 %r45,%r34;
.loc 1 17 23
or.b32 %r46,%r45,%r34;
.loc 1 17 30
shr.u32 %r47,%r46,31;
.loc 1 16 5
and.b32 %r48,%r33,2147483647;
.loc 1 17 5
or.b32 %r27,%r47,%r48;
.loc 1 19 36
add.u32 %r50,%r27,-2146435072;
.loc 1 18 5
mov.u32 %r52,2146435072;
sub.u32 %r51,%r52,%r27;
.loc 1 19 34
or.b32 %r53,%r50,%r51;
.loc 1 19 41
shr.u32 %r54,%r53,31;
.loc 1 19 11
mov.u32 %r55,1;
sub.u32 %value,%r55,%r54;
.loc 1 20 1
st.param.u32 [%value_out],%value;
ret;
}
lib_a-s_isnan.o/1612277260  0     0     100666  1108      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: isnan
.visible .func (.param .u32 %value_out) isnan (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_isnan.c"
// BEGIN GLOBAL FUNCTION DEF: isnan
.visible .func (.param .u32 %value_out) isnan (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r30;
.reg .u32 %r31;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r47;
.reg .u32 %r48;
mov.f64 %r38,%ar0;
.loc 1 203 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r30,%r40;
cvt.u32.u64 %r31,%r39;
.loc 1 205 25
neg.s32 %r42,%r31;
.loc 1 205 23
or.b32 %r43,%r42,%r31;
.loc 1 205 30
shr.u32 %r44,%r43,31;
.loc 1 204 5
and.b32 %r45,%r30,2147483647;
.loc 1 205 5
or.b32 %r27,%r44,%r45;
.loc 1 206 5
mov.u32 %r48,2146435072;
sub.u32 %r47,%r48,%r27;
.loc 1 207 33
shr.u32 %value,%r47,31;
.loc 1 208 1
st.param.u32 [%value_out],%value;
ret;
}
/1040           1612277260  0     0     100666  1120      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __isnand
.visible .func (.param .u32 %value_out) __isnand (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_isnand.c"
// BEGIN GLOBAL FUNCTION DEF: __isnand
.visible .func (.param .u32 %value_out) __isnand (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r30;
.reg .u32 %r31;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r47;
.reg .u32 %r48;
mov.f64 %r38,%ar0;
.loc 1 99 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r30,%r40;
cvt.u32.u64 %r31,%r39;
.loc 1 101 25
neg.s32 %r42,%r31;
.loc 1 101 23
or.b32 %r43,%r42,%r31;
.loc 1 101 30
shr.u32 %r44,%r43,31;
.loc 1 100 5
and.b32 %r45,%r30,2147483647;
.loc 1 101 5
or.b32 %r27,%r44,%r45;
.loc 1 102 5
mov.u32 %r48,2146435072;
sub.u32 %r47,%r48,%r27;
.loc 1 103 33
shr.u32 %value,%r47,31;
.loc 1 104 1
st.param.u32 [%value_out],%value;
ret;
}
lib_a-s_ldexp.o/1612277259  0     0     100666  2808      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ldexp
.visible .func (.param .f64 %value_out) ldexp (.param .f64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/s_ldexp.c"
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbn
.extern .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: ldexp
.visible .func (.param .f64 %value_out) ldexp (.param .f64 %in_ar0, .param .u32 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f64 %r32;
.reg .u32 %r33;
.reg .u32 %r35;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .u16 %r43;
.reg .u16 %r44;
.reg .u32 %r45;
.reg .u16 %r46;
.reg .pred %r47;
.reg .f64 %r50;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u16 %r59;
.reg .u16 %r60;
.reg .u16 %r61;
.reg .u32 %r62;
.reg .u16 %r63;
.reg .pred %r64;
.reg .u64 %r65;
.reg .u32 %r66;
mov.f64 %r32,%ar0;
mov.u32 %r33,%ar1;
.loc 1 63 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r35,[%value_in];
}
.loc 1 63 19
set.u32.eq.f64 %r37,%r32,0d0000000000000000;
neg.s32 %r38,%r37;
.loc 1 63 4
set.u32.eq.u32 %r40,%r35,0;
neg.s32 %r41,%r40;
.loc 1 63 19
cvt.u16.u32 %r43,%r38;
cvt.u16.u32 %r44,%r41;
or.b16 %r42,%r43,%r44;
cvt.u32.u16 %r45,%r42;
cvt.u16.u8 %r46,%r45;
setp.ne.u16 %r47,%r46,0;
@ %r47 bra $L2;
.loc 1 64 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r33;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r50,[%value_in];
}
mov.f64 %r32,%r50;
.loc 1 65 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r52,[%value_in];
}
.loc 1 65 19
set.u32.eq.f64 %r54,%r32,0d0000000000000000;
neg.s32 %r55,%r54;
.loc 1 65 4
set.u32.eq.u32 %r57,%r52,0;
neg.s32 %r58,%r57;
.loc 1 65 19
cvt.u16.u32 %r60,%r55;
cvt.u16.u32 %r61,%r58;
or.b16 %r59,%r60,%r61;
cvt.u32.u16 %r62,%r59;
cvt.u16.u8 %r63,%r62;
setp.eq.u16 %r64,%r63,0;
@ %r64 bra $L2;
.loc 1 65 33
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r65,[%value_in];
}
.loc 1 65 39
mov.u32 %r66,34;
st.u32 [%r65],%r66;
$L2:
.loc 1 67 1
mov.f64 %value,%r32;
st.param.f64 [%value_out],%value;
ret;
}
/1058           1612277260  0     0     100666  4574      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llrint
.visible .func (.param .u64 %value_out) llrint (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_llrint.c"
// BEGIN VAR DEF: TWO52
.const .align 8 .u64 TWO52[2] =
{4841369599423283200,-4382002437431492608 };
// BEGIN GLOBAL FUNCTION DEF: llrint
.visible .func (.param .u64 %value_out) llrint (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .u32 %r45;
.reg .u32 %r48;
.reg .u32 %r53;
.reg .f64 %r54;
.reg .u32 %r55;
.reg .u32 %r57;
.reg .u32 %r61;
.reg .u32 %r63;
.reg .u32 %r65;
.reg .u64 %r70;
.reg .f64 %r71;
.reg .u64 %r72;
.reg .u64 %r73;
.reg .u32 %r74;
.reg .pred %r75;
.reg .pred %r76;
.reg .u64 %r77;
.reg .u64 %r78;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .f64 %r81;
.reg .u64 %r82;
.reg .u64 %r83;
.reg .u32 %r84;
.reg .pred %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .u32 %r88;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .u32 %r95;
.reg .u32 %r96;
.reg .u64 %r97;
.reg .u32 %r98;
.reg .u64 %r99;
.reg .u64 %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .u64 %r104;
.reg .u64 %r105;
.reg .u64 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .u64 %r110;
.reg .u32 %r111;
.reg .u32 %r112;
.reg .u64 %r113;
.reg .u32 %r114;
.reg .u32 %r116;
.reg .pred %r117;
.reg .u32 %r119;
.reg .u32 %r120;
.reg .u64 %r121;
.reg .pred %r122;
mov.f64 %r71,%ar0;
mov.b64 %r72,%r71;
shr.u64 %r73,%r72,32;
cvt.u32.u64 %r65,%r73;
.loc 1 60 16
shr.u32 %r22,%r65,31;
.loc 1 63 27
shr.s32 %r74,%r65,20;
and.b32 %r24,%r74,2047;
.loc 1 63 6
add.u32 %r53,%r24,-1023;
.loc 1 66 5
setp.gt.s32 %r75,%r53,19;
@ %r75 bra $L2;
.loc 1 69 9
setp.ge.s32 %r76,%r53,-1;
@ %r76 bra $L3;
$L5:
.loc 1 70 16
mov.u64 %r70,0;
bra $L1;
$L3:
.loc 1 75 20
cvta.const.u64 %r77,TWO52;
cvt.s64.s32 %r78,%r22;
shl.b64 %r79,%r78,3;
add.u64 %r80,%r77,%r79;
ld.f64 %r25,[%r80];
.loc 1 75 25
add.f64 %r26,%r25,%r71;
.loc 1 75 13
st.f64 [%frame],%r26;
.loc 1 76 17
ld.f64 %r27,[%frame];
.loc 1 76 13
sub.f64 %r81,%r27,%r25;
.loc 1 77 11
mov.b64 %r82,%r81;
shr.u64 %r83,%r82,32;
cvt.u32.u64 %r61,%r83;
.loc 1 80 19
and.b32 %r84,%r61,2147483647;
.loc 1 80 14
setp.eq.u32 %r85,%r84,0;
@ %r85 bra $L5;
.loc 1 84 14
and.b32 %r63,%r61,1048575;
.loc 1 85 14
or.b32 %r86,%r63,1048576;
.loc 1 83 35
shr.s32 %r87,%r61,20;
and.b32 %r88,%r87,2047;
.loc 1 87 30
mov.u32 %r91,1043;
sub.u32 %r90,%r91,%r88;
.loc 1 87 23
shr.s32 %r92,%r86,%r90;
.loc 1 87 18
cvt.s64.s32 %r70,%r92;
bra $L6;
$L2:
.loc 1 90 11
setp.gt.s32 %r93,%r53,62;
@ %r93 bra $L7;
.loc 1 93 10
setp.le.s32 %r94,%r53,51;
@ %r94 bra $L8;
.loc 1 96 40
and.b32 %r95,%r65,1048575;
.loc 1 96 54
or.b32 %r96,%r95,1048576;
.loc 1 96 19
cvt.s64.s32 %r97,%r96;
.loc 1 96 75
add.u32 %r98,%r24,-1043;
.loc 1 96 68
shl.b64 %r99,%r97,%r98;
.loc 1 98 21
cvt.u32.u64 %r102,%r72;
cvt.u64.u32 %r101,%r102;
.loc 1 98 47
add.u32 %r103,%r24,-1075;
.loc 1 98 40
shl.b64 %r104,%r101,%r103;
.loc 1 96 16
or.b64 %r70,%r99,%r104;
bra $L6;
$L8:
.loc 1 102 20
cvta.const.u64 %r105,TWO52;
cvt.s64.s32 %r106,%r22;
shl.b64 %r107,%r106,3;
add.u64 %r108,%r105,%r107;
ld.f64 %r41,[%r108];
.loc 1 102 25
add.f64 %r42,%r41,%r71;
.loc 1 102 13
st.f64 [%frame],%r42;
.loc 1 103 17
ld.f64 %r43,[%frame];
.loc 1 103 13
sub.f64 %r54,%r43,%r41;
.loc 1 104 11
mov.b64 %r109,%r54;
shr.u64 %r110,%r109,32;
cvt.u32.u64 %r55,%r110;
.loc 1 105 35
shr.s32 %r111,%r55,20;
and.b32 %r45,%r111,2047;
.loc 1 106 14
and.b32 %r57,%r55,1048575;
.loc 1 107 14
or.b32 %r112,%r57,1048576;
.loc 1 112 21
cvt.s64.s32 %r113,%r112;
.loc 1 112 47
add.u32 %r114,%r45,-1043;
.loc 1 112 40
shl.b64 %r70,%r113,%r114;
.loc 1 113 6
mov.u32 %r116,1075;
sub.u32 %r48,%r116,%r45;
setp.gt.u32 %r117,%r48,31;
@ %r117 bra $L6;
cvt.u32.u64 %r120,%r109;
shr.u32 %r119,%r120,%r48;
cvt.u64.u32 %r121,%r119;
.loc 1 112 18
or.b64 %r70,%r70,%r121;
bra $L6;
$L7:
.loc 1 118 14
cvt.rzi.s64.f64 %r70,%r71;
bra $L1;
$L6:
.loc 1 121 23
setp.eq.u32 %r122,%r22,0;
@ %r122 bra $L1;
neg.s64 %r70,%r70;
$L1:
.loc 1 122 1
mov.u64 %value,%r70;
st.param.u64 [%value_out],%value;
ret;
}
/1076           1612277260  0     0     100666  3125      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llround
.visible .func (.param .u64 %value_out) llround (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_llround.c"
// BEGIN GLOBAL FUNCTION DEF: llround
.visible .func (.param .u64 %value_out) llround (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r24;
.reg .u32 %r37;
.reg .u32 %r40;
.reg .u64 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u64 %r53;
.reg .f64 %r54;
.reg .u64 %r55;
.reg .u64 %r56;
.reg .pred %r57;
.reg .u32 %r58;
.reg .pred %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .pred %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .u64 %r75;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .pred %r78;
.reg .u64 %r79;
.reg .u32 %r80;
.reg .pred %r81;
.reg .u32 %r82;
.reg .u64 %r83;
.reg .u64 %r84;
mov.f64 %r54,%ar0;
mov.b64 %r55,%r54;
shr.u64 %r56,%r55,32;
cvt.u32.u64 %r49,%r56;
.loc 1 28 35
setp.lt.s32 %r57,%r49,0;
selp.u32 %r42,-1,1,%r57;
.loc 1 30 44
shr.u32 %r58,%r49,20;
and.b32 %r24,%r58,2047;
.loc 1 30 51
add.u32 %r43,%r24,-1023;
.loc 1 31 7
and.b32 %r44,%r49,1048575;
.loc 1 32 7
or.b32 %r40,%r44,1048576;
.loc 1 35 6
setp.gt.s32 %r59,%r43,19;
@ %r59 bra $L3;
.loc 1 38 10
setp.ge.s32 %r60,%r43,0;
@ %r60 bra $L4;
.loc 1 40 14
setp.ne.u32 %r61,%r43,-1;
@ %r61 bra $L12;
.loc 1 43 20
cvt.s64.s32 %r53,%r42;
bra $L1;
$L4:
.loc 1 49 26
mov.u32 %r63,524288;
shr.s32 %r62,%r63,%r43;
.loc 1 49 15
add.u32 %r64,%r62,%r40;
.loc 1 51 31
mov.u32 %r66,20;
sub.u32 %r65,%r66,%r43;
.loc 1 51 24
shr.u32 %r67,%r64,%r65;
.loc 1 51 18
cvt.u64.u32 %r41,%r67;
bra $L6;
$L3:
.loc 1 54 11
setp.gt.u32 %r68,%r43,62;
@ %r68 bra $L7;
cvt.u32.u64 %r50,%r55;
.loc 1 60 62
add.u32 %r51,%r24,-1043;
.loc 1 57 10
setp.le.s32 %r70,%r43,51;
@ %r70 bra $L8;
.loc 1 62 51
add.u32 %r71,%r24,-1075;
.loc 1 62 28
shl.b32 %r72,%r50,%r71;
cvt.u64.u32 %r73,%r72;
.loc 1 60 19
cvt.u64.u32 %r74,%r40;
.loc 1 60 39
shl.b64 %r75,%r74,%r51;
.loc 1 60 16
or.b64 %r41,%r73,%r75;
bra $L6;
$L8:
.loc 1 68 35
mov.u32 %r77,-2147483648;
shr.u32 %r76,%r77,%r51;
.loc 1 66 24
add.u32 %r45,%r76,%r50;
.loc 1 69 14
setp.ge.u32 %r78,%r45,%r50;
@ %r78 bra $L9;
.loc 1 70 13
add.u32 %r40,%r40,1;
$L9:
.loc 1 72 21
cvt.u64.u32 %r79,%r40;
.loc 1 72 41
shl.b64 %r41,%r79,%r51;
.loc 1 74 23
mov.u32 %r80,52;
sub.u32 %r37,%r80,%r43;
setp.eq.u32 %r81,%r37,32;
@ %r81 bra $L6;
shr.u32 %r82,%r45,%r37;
cvt.u64.u32 %r83,%r82;
.loc 1 72 18
or.b64 %r41,%r41,%r83;
bra $L6;
$L7:
.loc 1 79 12
cvt.rzi.s64.f64 %r53,%r54;
bra $L1;
$L6:
.loc 1 81 15
cvt.s64.s32 %r84,%r42;
mul.lo.u64 %r53,%r84,%r41;
bra $L1;
$L12:
.loc 1 41 20
mov.u64 %r53,0;
$L1:
.loc 1 82 1
mov.u64 %value,%r53;
st.param.u64 [%value_out],%value;
ret;
}

lib_a-s_log1p.o/1612277260  0     0     100666  8035      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log1p
.visible .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_log1p.c"
// BEGIN GLOBAL FUNCTION DECL: __math_divzero
.extern .func (.param .f64 %value_out) __math_divzero (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_invalid
.extern .func (.param .f64 %value_out) __math_invalid (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log1p
.visible .func (.param .f64 %value_out) log1p (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r33;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .f64 %r45;
.reg .f64 %r46;
.reg .f64 %r47;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .f64 %r60;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r68;
.reg .f64 %r69;
.reg .f64 %r76;
.reg .f64 %r77;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .u64 %r83;
.reg .u64 %r84;
.reg .pred %r85;
.reg .pred %r86;
.reg .pred %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .f64 %r90;
.reg .f64 %r92;
.reg .pred %r93;
.reg .f64 %r94;
.reg .u32 %r96;
.reg .u32 %r97;
.reg .u32 %r99;
.reg .u32 %r100;
.reg .u16 %r101;
.reg .u16 %r102;
.reg .u16 %r103;
.reg .u32 %r104;
.reg .u16 %r105;
.reg .pred %r106;
.reg .f64 %r107;
.reg .u32 %r109;
.reg .pred %r110;
.reg .f64 %r111;
.reg .pred %r112;
.reg .u64 %r113;
.reg .u64 %r114;
.reg .u32 %r115;
.reg .pred %r116;
.reg .f64 %r117;
.reg .f64 %r118;
.reg .f64 %r119;
.reg .f64 %r120;
.reg .u32 %r121;
.reg .pred %r122;
.reg .u32 %r123;
.reg .u64 %r124;
.reg .u64 %r125;
.reg .u64 %r126;
.reg .u64 %r127;
.reg .u32 %r128;
.reg .u64 %r129;
.reg .u64 %r130;
.reg .u64 %r131;
.reg .u64 %r132;
.reg .u32 %r133;
.reg .f64 %r134;
.reg .f64 %r135;
.reg .pred %r136;
.reg .pred %r137;
.reg .pred %r138;
.reg .pred %r140;
.reg .f64 %r141;
.reg .f64 %r142;
.reg .f64 %r143;
.reg .f64 %r144;
.reg .pred %r145;
.reg .f64 %r146;
.reg .f64 %r147;
.reg .f64 %r148;
.reg .f64 %r149;
.reg .f64 %r150;
mov.f64 %r82,%ar0;
mov.b64 %r83,%r82;
shr.u64 %r84,%r83,32;
cvt.u32.u64 %r63,%r84;
.loc 1 152 2
cvt.u32.u64 %r58,%r84;
.loc 1 156 5
setp.le.s32 %r85,%r58,1071284857;
@ %r85 bra $L2;
.loc 1 173 5
setp.gt.s32 %r86,%r58,2146435071;
@ ! %r86 bra $L22;
bra $L3;
$L2:
.loc 1 153 5
and.b32 %r62,%r63,2147483647;
.loc 1 157 8
setp.le.s32 %r87,%r62,1072693247;
@ %r87 bra $L5;
.loc 1 158 5
setp.neu.f64 %r88,%r82,0dbff0000000000000;
@ %r88 bra $L6;
.loc 1 159 14
mov.u32 %r89,1;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r89;
call (%value_in),__math_divzero,(%out_arg1);
ld.param.f64 %r90,[%value_in];
}
mov.f64 %r81,%r90;
bra $L1;
$L6:
.loc 1 161 14
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r82;
call (%value_in),__math_invalid,(%out_arg1);
ld.param.f64 %r92,[%value_in];
}
mov.f64 %r81,%r92;
bra $L1;
$L5:
.loc 1 163 8
setp.gt.s32 %r93,%r62,1042284543;
@ %r93 bra $L8;
.loc 1 164 11
add.f64 %r94,%r82,0d4350000000000000;
.loc 1 164 5
set.u32.gt.f64 %r96,%r94,0d0000000000000000;
neg.s32 %r97,%r96;
.loc 1 165 14
set.u32.le.s32 %r99,%r62,1016070143;
neg.s32 %r100,%r99;
cvt.u16.u32 %r102,%r97;
cvt.u16.u32 %r103,%r100;
and.b16 %r101,%r102,%r103;
cvt.u32.u16 %r104,%r101;
cvt.u16.u8 %r105,%r104;
setp.ne.u16 %r106,%r105,0;
@ %r106 bra $L20;
.loc 1 168 19
mul.f64 %r107,%r82,%r82;
.loc 1 168 16
fma.rn.f64 %r81,%r107,0dbfe0000000000000,%r82;
bra $L1;
$L8:
.loc 1 170 13
add.u32 %r109,%r63,1076707644;
.loc 1 170 8
setp.le.u32 %r110,%r109,1076707644;
@ %r110 bra $L9;
.loc 1 197 10
mul.f64 %r111,%r82,0d3fe0000000000000;
.loc 1 197 6
mul.f64 %r65,%r111,%r82;
.loc 1 171 4
mov.u32 %r57,0;
bra $L10;
$L3:
.loc 1 173 32
add.f64 %r81,%r82,%r82;
bra $L1;
$L22:
.loc 1 175 8
setp.gt.s32 %r112,%r58,1128267775;
@ %r112 bra $L11;
$L9:
.loc 1 176 6
add.f64 %r55,%r82,0d3ff0000000000000;
.loc 1 177 3
mov.b64 %r113,%r55;
shr.u64 %r114,%r113,32;
cvt.u32.u64 %r58,%r114;
.loc 1 178 18
shr.s32 %r115,%r58,20;
.loc 1 178 13
add.u32 %r57,%r115,-1023;
.loc 1 179 31
setp.le.s32 %r116,%r57,0;
@ %r116 bra $L12;
.loc 1 179 28
sub.f64 %r117,%r55,%r82;
.loc 1 179 31
mov.f64 %r118,0d3ff0000000000000;
sub.f64 %r60,%r118,%r117;
bra $L13;
$L12:
.loc 1 179 36
mov.f64 %r120,0d3ff0000000000000;
sub.f64 %r119,%r55,%r120;
.loc 1 179 31
sub.f64 %r60,%r82,%r119;
$L13:
.loc 1 180 5
div.rn.f64 %r54,%r60,%r55;
bra $L14;
$L11:
.loc 1 184 18
shr.s32 %r121,%r58,20;
.loc 1 184 13
add.u32 %r57,%r121,-1023;
.loc 1 182 6
mov.f64 %r55,%r82;
.loc 1 185 6
mov.f64 %r54,0d0000000000000000;
$L14:
.loc 1 187 9
and.b32 %r59,%r58,1048575;
.loc 1 188 8
setp.gt.s32 %r122,%r59,434333;
@ %r122 bra $L15;
.loc 1 189 10
mov.b64 %r79,%r55;
or.b32 %r123,%r59,1072693248;
cvt.u64.u32 %r124,%r123;
shl.b64 %r125,%r124,32;
and.b64 %r126,%r79,4294967295;
or.b64 %r127,%r126,%r125;
mov.b64 %r56,%r127;
bra $L16;
$L15:
.loc 1 191 12
add.u32 %r57,%r57,1;
.loc 1 192 3
mov.b64 %r80,%r55;
or.b32 %r128,%r59,1071644672;
cvt.u64.u32 %r129,%r128;
shl.b64 %r130,%r129,32;
and.b64 %r131,%r80,4294967295;
or.b64 %r132,%r131,%r130;
mov.b64 %r56,%r132;
.loc 1 193 26
mov.u32 %r133,1048576;
sub.u32 %r33,%r133,%r59;
.loc 1 193 13
shr.s32 %r59,%r33,2;
$L16:
.loc 1 195 8
mov.f64 %r134,0d3ff0000000000000;
sub.f64 %r82,%r56,%r134;
.loc 1 197 10
mul.f64 %r135,%r82,0d3fe0000000000000;
.loc 1 197 6
mul.f64 %r65,%r135,%r82;
.loc 1 198 4
setp.ne.u32 %r136,%r59,0;
@ %r136 bra $L10;
.loc 1 199 13
setp.neu.f64 %r137,%r82,0d0000000000000000;
@ %r137 bra $L17;
.loc 1 199 27
setp.eq.u32 %r138,%r57,0;
@ %r138 bra $L21;
.loc 1 200 35
cvt.rn.f64.s32 %r35,%r57;
.loc 1 200 31
fma.rn.f64 %r69,%r35,0d3dea39ef35793c76,%r54;
.loc 1 200 59
fma.rn.f64 %r81,%r35,0d3fe62e42fee00000,%r69;
bra $L1;
$L17:
.loc 1 201 19
fma.rn.f64 %r36,%r82,0dbfe5555555555555,0d3ff0000000000000;
.loc 1 201 8
mul.f64 %r68,%r36,%r65;
.loc 1 202 8
setp.ne.u32 %r140,%r57,0;
@ %r140 bra $L18;
.loc 1 202 23
sub.f64 %r81,%r82,%r68;
bra $L1;
$L18:
.loc 1 203 20
cvt.rn.f64.s32 %r37,%r57;
.loc 1 203 41
fma.rn.f64 %r38,%r37,0d3dea39ef35793c76,%r54;
.loc 1 203 31
sub.f64 %r141,%r68,%r38;
.loc 1 203 45
sub.f64 %r142,%r141,%r82;
.loc 1 203 27
neg.f64 %r143,%r142;
fma.rn.f64 %r81,%r37,0d3fe62e42fee00000,%r143;
bra $L1;
$L10:
.loc 1 205 13
add.f64 %r144,%r82,0d4000000000000000;
.loc 1 205 5
div.rn.f64 %r66,%r82,%r144;
.loc 1 206 4
mul.f64 %r67,%r66,%r66;
.loc 1 207 47
fma.rn.f64 %r42,%r67,0d3fc2f112df3e5244,0d3fc39a09d078c69f;
.loc 1 207 40
fma.rn.f64 %r43,%r42,%r67,0d3fc7466496cb03de;
.loc 1 207 33
fma.rn.f64 %r44,%r43,%r67,0d3fcc71c51d8e78af;
.loc 1 207 26
fma.rn.f64 %r45,%r44,%r67,0d3fd2492494229359;
.loc 1 207 19
fma.rn.f64 %r46,%r45,%r67,0d3fd999999997fa04;
.loc 1 207 12
fma.rn.f64 %r47,%r46,%r67,0d3fe5555555555593;
.loc 1 208 33
fma.rn.f64 %r76,%r47,%r67,%r65;
.loc 1 208 27
mul.f64 %r77,%r66,%r76;
.loc 1 208 4
setp.ne.u32 %r145,%r57,0;
@ %r145 bra $L19;
.loc 1 208 25
sub.f64 %r146,%r65,%r77;
.loc 1 208 19
sub.f64 %r81,%r82,%r146;
bra $L1;
$L19:
.loc 1 209 12
cvt.rn.f64.s32 %r49,%r57;
.loc 1 209 48
fma.rn.f64 %r50,%r49,0d3dea39ef35793c76,%r54;
.loc 1 209 38
add.f64 %r147,%r50,%r77;
.loc 1 209 26
sub.f64 %r148,%r65,%r147;
.loc 1 209 53
sub.f64 %r149,%r148,%r82;
.loc 1 209 19
neg.f64 %r150,%r149;
fma.rn.f64 %r81,%r49,0d3fe62e42fee00000,%r150;
bra $L1;
$L20:
.loc 1 166 14
mov.f64 %r81,%r82;
bra $L1;
$L21:
.loc 1 199 41
mov.f64 %r81,0d0000000000000000;
$L1:
.loc 1 210 1
mov.f64 %value,%r81;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_log2.o/ 1612277260  0     0     100666  855       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log2
.visible .func (.param .f64 %value_out) log2 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_log2.c"
// BEGIN GLOBAL FUNCTION DECL: log
.extern .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log2
.visible .func (.param .f64 %value_out) log2 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r26;
mov.f64 %r24,%ar0;
.loc 1 78 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),log,(%out_arg1);
ld.param.f64 %r26,[%value_in];
}
.loc 1 78 18
div.rn.f64 %value,%r26,0d3fe62e42fefa39ef;
.loc 1 79 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_logb.o/ 1612277260  0     0     100666  2892      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: logb
.visible .func (.param .f64 %value_out) logb (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_logb.c"
// BEGIN GLOBAL FUNCTION DEF: logb
.visible .func (.param .f64 %value_out) logb (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r29;
.reg .u32 %r30;
.reg .u32 %r32;
.reg .u32 %r33;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .u32 %r42;
.reg .pred %r43;
.reg .u32 %r44;
.reg .pred %r45;
.reg .f64 %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .pred %r50;
.reg .pred %r51;
.reg .pred %r53;
.reg .pred %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .u16 %r63;
.reg .u16 %r64;
.reg .u16 %r65;
.reg .u32 %r66;
.reg .u16 %r67;
.reg .pred %r68;
mov.f64 %r38,%ar0;
.loc 1 88 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r29,%r40;
cvt.u32.u64 %r36,%r39;
.loc 1 89 5
and.b32 %r30,%r29,2147483647;
.loc 1 90 4
and.b32 %r42,%r29,2146435072;
setp.ne.u32 %r43,%r42,0;
@ %r43 bra $L2;
.loc 1 91 12
or.b32 %r44,%r36,%r30;
.loc 1 91 8
setp.ne.u32 %r45,%r44,0;
@ %r45 bra $L3;
.loc 1 95 13
mov.f64 %r46,0dbff0000000000000;
div.rn.f64 %r37,%r46,0d0000000000000000;
bra $L1;
$L3:
.loc 1 98 5
setp.ne.u32 %r47,%r30,0;
@ %r47 bra $L5;
.loc 1 99 7
setp.le.s32 %r48,%r36,0;
@ %r48 bra $L10;
.loc 1 99 15
mov.u32 %r35,-1043;
$L7:
.loc 1 99 41
add.u32 %r35,%r35,-1;
.loc 1 99 32
add.u32 %r36,%r36,%r36;
.loc 1 99 7
setp.gt.s32 %r50,%r36,0;
@ %r50 bra $L7;
.loc 1 103 13
cvt.rn.f64.s32 %r37,%r35;
bra $L1;
$L5:
.loc 1 101 25
shl.b32 %r33,%r30,11;
.loc 1 101 7
setp.le.s32 %r51,%r33,0;
@ %r51 bra $L11;
.loc 1 101 15
mov.u32 %r32,-1022;
$L8:
.loc 1 101 49
add.u32 %r32,%r32,-1;
.loc 1 101 40
add.u32 %r33,%r33,%r33;
.loc 1 101 7
setp.gt.s32 %r53,%r33,0;
@ %r53 bra $L8;
.loc 1 103 13
cvt.rn.f64.s32 %r37,%r32;
bra $L1;
$L10:
.loc 1 99 7
mov.f64 %r37,0dc0904c0000000000;
bra $L1;
$L11:
.loc 1 101 7
mov.f64 %r37,0dc08ff00000000000;
.loc 1 103 13
bra $L1;
$L2:
.loc 1 105 10
setp.gt.s32 %r54,%r30,2146435071;
@ %r54 bra $L9;
.loc 1 105 36
shr.s32 %r55,%r30,20;
.loc 1 105 41
add.u32 %r56,%r55,-1023;
cvt.rn.f64.s32 %r37,%r56;
bra $L1;
$L9:
.loc 1 106 13
set.u32.gt.s32 %r58,%r30,2146435072;
neg.s32 %r59,%r58;
.loc 1 106 25
set.u32.ne.u32 %r61,%r36,0;
neg.s32 %r62,%r61;
cvt.u16.u32 %r64,%r59;
cvt.u16.u32 %r65,%r62;
or.b16 %r63,%r64,%r65;
.loc 1 106 10
cvt.u32.u16 %r66,%r63;
cvt.u16.u8 %r67,%r66;
setp.ne.u16 %r68,%r67,0;
.loc 1 107 15
selp.f64 %r37,%r38,0d7ff0000000000000,%r68;
$L1:
.loc 1 108 1
mov.f64 %value,%r37;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_lrint.o/1612277260  0     0     100666  4647      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lrint
.visible .func (.param .u64 %value_out) lrint (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_lrint.c"
// BEGIN VAR DEF: TWO52
.const .align 8 .u64 TWO52[2] =
{4841369599423283200,-4382002437431492608 };
// BEGIN GLOBAL FUNCTION DEF: lrint
.visible .func (.param .u64 %value_out) lrint (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r24;
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r42;
.reg .f64 %r43;
.reg .f64 %r44;
.reg .u32 %r46;
.reg .u32 %r49;
.reg .u32 %r54;
.reg .f64 %r55;
.reg .u32 %r56;
.reg .u32 %r58;
.reg .u32 %r62;
.reg .u32 %r64;
.reg .u32 %r66;
.reg .u64 %r71;
.reg .f64 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .u32 %r75;
.reg .pred %r76;
.reg .pred %r77;
.reg .u64 %r78;
.reg .u64 %r79;
.reg .u64 %r80;
.reg .u64 %r81;
.reg .f64 %r82;
.reg .u64 %r83;
.reg .u64 %r84;
.reg .u64 %r85;
.reg .u64 %r86;
.reg .pred %r87;
.reg .u32 %r88;
.reg .u32 %r89;
.reg .u32 %r90;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .pred %r95;
.reg .pred %r96;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .u64 %r99;
.reg .u32 %r100;
.reg .u64 %r101;
.reg .u64 %r103;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .u64 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u64 %r109;
.reg .u64 %r110;
.reg .u64 %r111;
.reg .u64 %r112;
.reg .u32 %r113;
.reg .u32 %r114;
.reg .u64 %r115;
.reg .u32 %r116;
.reg .u32 %r118;
.reg .pred %r119;
.reg .u32 %r121;
.reg .u32 %r122;
.reg .u64 %r123;
.reg .pred %r124;
mov.f64 %r72,%ar0;
mov.b64 %r73,%r72;
shr.u64 %r74,%r73,32;
cvt.u32.u64 %r66,%r74;
.loc 1 97 16
shr.u32 %r22,%r66,31;
.loc 1 100 27
shr.s32 %r75,%r66,20;
and.b32 %r24,%r75,2047;
.loc 1 100 6
add.u32 %r54,%r24,-1023;
.loc 1 103 5
setp.gt.s32 %r76,%r54,19;
@ %r76 bra $L2;
.loc 1 106 9
setp.ge.s32 %r77,%r54,-1;
@ %r77 bra $L3;
$L5:
.loc 1 107 16
mov.u64 %r71,0;
bra $L1;
$L3:
.loc 1 112 20
cvta.const.u64 %r78,TWO52;
cvt.s64.s32 %r79,%r22;
shl.b64 %r80,%r79,3;
add.u64 %r81,%r78,%r80;
ld.f64 %r25,[%r81];
.loc 1 112 25
add.f64 %r26,%r25,%r72;
.loc 1 112 13
st.f64 [%frame],%r26;
.loc 1 113 17
ld.f64 %r27,[%frame];
.loc 1 113 13
sub.f64 %r82,%r27,%r25;
.loc 1 114 11
mov.b64 %r83,%r82;
shr.u64 %r84,%r83,32;
cvt.u32.u64 %r62,%r84;
.loc 1 117 19
cvt.s64.s32 %r85,%r62;
and.b64 %r86,%r85,-2147483649;
.loc 1 117 14
setp.eq.u64 %r87,%r86,0;
@ %r87 bra $L5;
.loc 1 121 14
and.b32 %r64,%r62,1048575;
.loc 1 122 14
or.b32 %r88,%r64,1048576;
.loc 1 120 35
shr.s32 %r89,%r62,20;
and.b32 %r90,%r89,2047;
.loc 1 124 30
mov.u32 %r93,1043;
sub.u32 %r92,%r93,%r90;
.loc 1 124 23
shr.s32 %r94,%r88,%r92;
.loc 1 124 18
cvt.s64.s32 %r71,%r94;
bra $L6;
$L2:
.loc 1 127 11
setp.gt.s32 %r95,%r54,62;
@ %r95 bra $L7;
.loc 1 131 10
setp.le.s32 %r96,%r54,51;
@ %r96 bra $L8;
.loc 1 134 35
and.b32 %r97,%r66,1048575;
.loc 1 134 49
or.b32 %r98,%r97,1048576;
.loc 1 134 19
cvt.s64.s32 %r99,%r98;
.loc 1 134 70
add.u32 %r100,%r24,-1043;
.loc 1 134 63
shl.b64 %r101,%r99,%r100;
.loc 1 136 21
cvt.u32.u64 %r104,%r73;
cvt.u64.u32 %r103,%r104;
.loc 1 136 42
add.u32 %r105,%r24,-1075;
.loc 1 136 35
shl.b64 %r106,%r103,%r105;
.loc 1 134 16
or.b64 %r71,%r101,%r106;
bra $L6;
$L8:
.loc 1 141 20
cvta.const.u64 %r107,TWO52;
cvt.s64.s32 %r108,%r22;
shl.b64 %r109,%r108,3;
add.u64 %r110,%r107,%r109;
ld.f64 %r42,[%r110];
.loc 1 141 25
add.f64 %r43,%r42,%r72;
.loc 1 141 13
st.f64 [%frame],%r43;
.loc 1 142 17
ld.f64 %r44,[%frame];
.loc 1 142 13
sub.f64 %r55,%r44,%r42;
.loc 1 143 11
mov.b64 %r111,%r55;
shr.u64 %r112,%r111,32;
cvt.u32.u64 %r56,%r112;
.loc 1 144 35
shr.s32 %r113,%r56,20;
and.b32 %r46,%r113,2047;
.loc 1 145 14
and.b32 %r58,%r56,1048575;
.loc 1 146 14
or.b32 %r114,%r58,1048576;
.loc 1 154 21
cvt.s64.s32 %r115,%r114;
.loc 1 154 42
add.u32 %r116,%r46,-1043;
.loc 1 154 35
shl.b64 %r71,%r115,%r116;
.loc 1 155 6
mov.u32 %r118,1075;
sub.u32 %r49,%r118,%r46;
setp.gt.u32 %r119,%r49,31;
@ %r119 bra $L6;
cvt.u32.u64 %r122,%r111;
shr.u32 %r121,%r122,%r49;
cvt.u64.u32 %r123,%r121;
.loc 1 154 18
or.b64 %r71,%r71,%r123;
bra $L6;
$L7:
.loc 1 160 14
cvt.rzi.s64.f64 %r71,%r72;
bra $L1;
$L6:
.loc 1 163 23
setp.eq.u32 %r124,%r22,0;
@ %r124 bra $L1;
neg.s64 %r71,%r71;
$L1:
.loc 1 164 1
mov.u64 %value,%r71;
st.param.u64 [%value_out],%value;
ret;
}

/1095           1612277260  0     0     100666  3137      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lround
.visible .func (.param .u64 %value_out) lround (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_lround.c"
// BEGIN GLOBAL FUNCTION DEF: lround
.visible .func (.param .u64 %value_out) lround (.param .f64 %in_ar0)
{
.reg .u64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r24;
.reg .u32 %r37;
.reg .u32 %r40;
.reg .u64 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u64 %r53;
.reg .f64 %r54;
.reg .u64 %r55;
.reg .u64 %r56;
.reg .pred %r57;
.reg .u32 %r58;
.reg .pred %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .pred %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .u64 %r75;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .pred %r78;
.reg .u64 %r79;
.reg .u32 %r80;
.reg .pred %r81;
.reg .u32 %r82;
.reg .u64 %r83;
.reg .u64 %r84;
mov.f64 %r54,%ar0;
mov.b64 %r55,%r54;
shr.u64 %r56,%r55,32;
cvt.u32.u64 %r49,%r56;
.loc 1 69 35
setp.lt.s32 %r57,%r49,0;
selp.u32 %r42,-1,1,%r57;
.loc 1 71 44
shr.u32 %r58,%r49,20;
and.b32 %r24,%r58,2047;
.loc 1 71 51
add.u32 %r43,%r24,-1023;
.loc 1 72 7
and.b32 %r44,%r49,1048575;
.loc 1 73 7
or.b32 %r40,%r44,1048576;
.loc 1 75 6
setp.gt.s32 %r59,%r43,19;
@ %r59 bra $L3;
.loc 1 78 10
setp.ge.s32 %r60,%r43,0;
@ %r60 bra $L4;
.loc 1 80 14
setp.ne.u32 %r61,%r43,-1;
@ %r61 bra $L12;
.loc 1 83 20
cvt.s64.s32 %r53,%r42;
bra $L1;
$L4:
.loc 1 89 26
mov.u32 %r63,524288;
shr.s32 %r62,%r63,%r43;
.loc 1 89 15
add.u32 %r64,%r62,%r40;
.loc 1 91 31
mov.u32 %r66,20;
sub.u32 %r65,%r66,%r43;
.loc 1 91 24
shr.u32 %r67,%r64,%r65;
.loc 1 91 18
cvt.u64.u32 %r41,%r67;
bra $L6;
$L3:
.loc 1 94 11
setp.gt.u32 %r68,%r43,62;
@ %r68 bra $L7;
cvt.u32.u64 %r50,%r55;
.loc 1 101 57
add.u32 %r51,%r24,-1043;
.loc 1 98 10
setp.le.s32 %r70,%r43,51;
@ %r70 bra $L8;
.loc 1 103 47
add.u32 %r71,%r24,-1075;
.loc 1 103 24
shl.b32 %r72,%r50,%r71;
cvt.u64.u32 %r73,%r72;
.loc 1 101 19
cvt.u64.u32 %r74,%r40;
.loc 1 101 34
shl.b64 %r75,%r74,%r51;
.loc 1 101 16
or.b64 %r41,%r73,%r75;
bra $L6;
$L8:
.loc 1 111 35
mov.u32 %r77,-2147483648;
shr.u32 %r76,%r77,%r51;
.loc 1 108 24
add.u32 %r45,%r76,%r50;
.loc 1 112 14
setp.ge.u32 %r78,%r45,%r50;
@ %r78 bra $L9;
.loc 1 113 13
add.u32 %r40,%r40,1;
$L9:
.loc 1 116 21
cvt.u64.u32 %r79,%r40;
.loc 1 116 36
shl.b64 %r41,%r79,%r51;
.loc 1 119 23
mov.u32 %r80,52;
sub.u32 %r37,%r80,%r43;
setp.eq.u32 %r81,%r37,32;
@ %r81 bra $L6;
shr.u32 %r82,%r45,%r37;
cvt.u64.u32 %r83,%r82;
.loc 1 116 18
or.b64 %r41,%r41,%r83;
bra $L6;
$L7:
.loc 1 124 12
cvt.rzi.s64.f64 %r53,%r54;
bra $L1;
$L6:
.loc 1 126 15
cvt.s64.s32 %r84,%r42;
mul.lo.u64 %r53,%r84,%r41;
bra $L1;
$L12:
.loc 1 81 20
mov.u64 %r53,0;
$L1:
.loc 1 127 1
mov.u64 %value,%r53;
st.param.u64 [%value_out],%value;
ret;
}

lib_a-s_modf.o/ 1612277259  0     0     100666  3877      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: modf
.visible .func (.param .f64 %value_out) modf (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_modf.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyd
.extern .func (.param .u32 %value_out) __fpclassifyd (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: modf
.visible .func (.param .f64 %value_out) modf (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %r23;
.reg .f64 %r32;
.reg .u32 %r37;
.reg .u32 %r40;
.reg .f64 %r42;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .u64 %r55;
.reg .u64 %r56;
.reg .u64 %r57;
.reg .u32 %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .u64 %r63;
.reg .u64 %r67;
.reg .f64 %r68;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .pred %r72;
.reg .u32 %r73;
.reg .u64 %r74;
.reg .u64 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u64 %r81;
.reg .u64 %r85;
.reg .pred %r86;
.reg .u32 %r88;
.reg .pred %r89;
.reg .u32 %r90;
.reg .u64 %r91;
.reg .u64 %r95;
.reg .u32 %r96;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .pred %r99;
.reg .u32 %r100;
.reg .u64 %r101;
.reg .u64 %r105;
.reg .u64 %r106;
.reg .u32 %r110;
.reg .u32 %r111;
.reg .u64 %r112;
.reg .u64 %r113;
.reg .u64 %r114;
mov.f64 %r54,%ar0;
mov.u64 %r55,%ar1;
mov.b64 %r56,%r54;
shr.u64 %r57,%r56,32;
cvt.u32.u64 %r40,%r57;
cvt.u32.u64 %r37,%r56;
.loc 1 76 11
shr.s32 %r59,%r40,20;
.loc 1 76 16
and.b32 %r23,%r59,2047;
.loc 1 76 5
add.u32 %r44,%r23,-1023;
.loc 1 77 4
setp.gt.s32 %r60,%r44,19;
@ %r60 bra $L2;
.loc 1 78 8
setp.ge.s32 %r61,%r44,0;
@ %r61 bra $L3;
.loc 1 79 10
and.b32 %r62,%r40,-2147483648;
cvt.u64.u32 %r63,%r62;
shl.b64 %r67,%r63,32;
mov.b64 %r68,%r67;
st.f64 [%r55],%r68;
.loc 1 80 10
mov.f64 %r53,%r54;
bra $L1;
$L3:
.loc 1 82 19
mov.u32 %r69,1048575;
shr.s32 %r46,%r69,%r44;
.loc 1 83 10
and.b32 %r70,%r40,%r46;
.loc 1 83 13
or.b32 %r71,%r70,%r37;
.loc 1 83 5
setp.ne.u32 %r72,%r71,0;
@ %r72 bra $L5;
.loc 1 84 13
st.f64 [%r55],%r54;
.loc 1 85 7
and.b32 %r73,%r40,-2147483648;
cvt.u64.u32 %r74,%r73;
shl.b64 %r78,%r74,32;
mov.b64 %r53,%r78;
.loc 1 86 14
bra $L1;
$L5:
.loc 1 88 7
not.b32 %r79,%r46;
and.b32 %r80,%r79,%r40;
cvt.u64.u32 %r81,%r80;
shl.b64 %r85,%r81,32;
mov.b64 %r32,%r85;
st.f64 [%r55],%r32;
.loc 1 89 16
sub.f64 %r53,%r54,%r32;
bra $L1;
$L2:
.loc 1 92 12
setp.le.s32 %r86,%r44,51;
@ %r86 bra $L6;
.loc 1 93 12
st.f64 [%r55],%r54;
.loc 1 94 10
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r54;
call (%value_in),__fpclassifyd,(%out_arg1);
ld.param.u32 %r88,[%value_in];
}
.loc 1 94 9
setp.ne.u32 %r89,%r88,0;
@ %r89 bra $L7;
.loc 1 94 54
add.f64 %r53,%r54,%r54;
.loc 1 94 51
st.f64 [%r55],%r53;
bra $L1;
$L7:
.loc 1 95 6
and.b32 %r90,%r40,-2147483648;
cvt.u64.u32 %r91,%r90;
shl.b64 %r95,%r91,32;
mov.b64 %r53,%r95;
.loc 1 96 13
bra $L1;
$L6:
.loc 1 98 41
add.u32 %r96,%r23,-1043;
.loc 1 98 8
mov.u32 %r97,-1;
shr.u32 %r45,%r97,%r96;
.loc 1 99 12
and.b32 %r98,%r37,%r45;
.loc 1 99 8
setp.ne.u32 %r99,%r98,0;
@ %r99 bra $L8;
.loc 1 100 9
st.f64 [%r55],%r54;
.loc 1 101 3
and.b32 %r100,%r40,-2147483648;
cvt.u64.u32 %r101,%r100;
shl.b64 %r105,%r101,32;
mov.b64 %r53,%r105;
.loc 1 102 10
bra $L1;
$L8:
.loc 1 104 10
cvt.u64.u32 %r106,%r40;
not.b32 %r110,%r45;
and.b32 %r111,%r110,%r37;
cvt.u64.u32 %r112,%r111;
shl.b64 %r113,%r106,32;
or.b64 %r114,%r113,%r112;
mov.b64 %r42,%r114;
st.f64 [%r55],%r42;
.loc 1 105 12
sub.f64 %r53,%r54,%r42;
$L1:
.loc 1 108 1
mov.f64 %value,%r53;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_nan.o/  1612277260  0     0     100666  517       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nan
.visible .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_nan.c"
// BEGIN GLOBAL FUNCTION DEF: nan
.visible .func (.param .f64 %value_out) nan (.param .u64 %in_ar0)
{
.reg .f64 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 44 9
mov.f64 %value,0d7ff8000000000000;
.loc 1 45 1
st.param.f64 [%value_out],%value;
ret;
}

/1113           1612277260  0     0     100666  847       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nearbyint
.visible .func (.param .f64 %value_out) nearbyint (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_nearbyint.c"
// BEGIN GLOBAL FUNCTION DECL: rint
.extern .func (.param .f64 %value_out) rint (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: nearbyint
.visible .func (.param .f64 %value_out) nearbyint (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 61 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),rint,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 62 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

/1134           1612277260  0     0     100666  5744      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nextafter
.visible .func (.param .f64 %value_out) nextafter (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_nextafter.c"
// BEGIN GLOBAL FUNCTION DEF: nextafter
.visible .func (.param .f64 %value_out) nextafter (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .f64 %r47;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .u64 %r62;
.reg .u64 %r63;
.reg .pred %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .pred %r69;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .pred %r72;
.reg .pred %r73;
.reg .u32 %r74;
.reg .pred %r75;
.reg .u32 %r76;
.reg .u64 %r77;
.reg .u64 %r81;
.reg .u64 %r82;
.reg .pred %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .u32 %r87;
.reg .u32 %r88;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .u16 %r92;
.reg .u16 %r93;
.reg .u16 %r94;
.reg .u32 %r95;
.reg .u16 %r96;
.reg .pred %r97;
.reg .pred %r98;
.reg .pred %r99;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .u16 %r107;
.reg .u16 %r108;
.reg .u16 %r109;
.reg .u32 %r110;
.reg .u16 %r111;
.reg .pred %r112;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .u32 %r117;
.reg .u32 %r118;
.reg .u16 %r119;
.reg .u16 %r120;
.reg .u16 %r121;
.reg .u32 %r122;
.reg .u16 %r123;
.reg .pred %r124;
.reg .pred %r125;
.reg .pred %r126;
.reg .pred %r127;
.reg .pred %r128;
.reg .f64 %r129;
.reg .pred %r130;
.reg .u64 %r131;
.reg .u64 %r135;
.reg .u64 %r136;
.reg .u64 %r137;
.reg .u64 %r138;
.reg .u64 %r142;
.reg .u64 %r143;
.reg .u64 %r144;
mov.f64 %r57,%ar0;
mov.f64 %r58,%ar1;
.loc 1 65 2
mov.b64 %r59,%r57;
shr.u64 %r60,%r59,32;
cvt.u32.u64 %r40,%r60;
cvt.u32.u64 %r49,%r59;
mov.b64 %r62,%r58;
shr.u64 %r63,%r62,32;
cvt.u32.u64 %r50,%r63;
.loc 1 66 2
cvt.u32.u64 %r42,%r63;
cvt.u32.u64 %r51,%r62;
.loc 1 67 5
and.b32 %r43,%r40,2147483647;
.loc 1 68 5
and.b32 %r44,%r50,2147483647;
.loc 1 70 4
setp.le.s32 %r65,%r43,2146435071;
@ %r65 bra $L2;
.loc 1 70 28
add.u32 %r66,%r43,-2146435072;
.loc 1 70 40
or.b32 %r67,%r66,%r49;
.loc 1 70 22
setp.ne.u32 %r68,%r67,0;
@ %r68 bra $L3;
$L2:
.loc 1 70 49
setp.le.s32 %r69,%r44,2146435071;
@ %r69 bra $L4;
.loc 1 71 28
add.u32 %r70,%r44,-2146435072;
.loc 1 71 40
or.b32 %r71,%r70,%r51;
.loc 1 71 22
setp.eq.u32 %r72,%r71,0;
@ %r72 bra $L4;
$L3:
.loc 1 72 13
add.f64 %r56,%r57,%r58;
bra $L1;
$L4:
.loc 1 73 4
setp.eq.f64 %r73,%r57,%r58;
@ %r73 bra $L17;
.loc 1 74 8
or.b32 %r74,%r43,%r49;
.loc 1 74 4
setp.ne.u32 %r75,%r74,0;
@ %r75 bra $L6;
.loc 1 75 6
and.b32 %r76,%r50,-2147483648;
cvt.u64.u32 %r77,%r76;
shl.b64 %r81,%r77,32;
or.b64 %r82,%r81,1;
mov.b64 %r47,%r82;
.loc 1 76 8
mul.f64 %r56,%r47,%r47;
.loc 1 77 8
setp.eq.f64 %r83,%r47,%r56;
.loc 1 77 37
selp.f64 %r56,%r56,%r47,%r83;
bra $L1;
$L6:
.loc 1 79 4
setp.lt.s32 %r84,%r40,0;
@ %r84 bra $L7;
.loc 1 80 8
setp.gt.s32 %r85,%r40,%r42;
@ %r85 bra $L8;
.loc 1 80 20
set.u32.eq.u32 %r87,%r40,%r42;
neg.s32 %r88,%r87;
.loc 1 80 30
set.u32.gt.u32 %r90,%r49,%r51;
neg.s32 %r91,%r90;
.loc 1 80 25
cvt.u16.u32 %r93,%r88;
cvt.u16.u32 %r94,%r91;
and.b16 %r92,%r93,%r94;
.loc 1 80 14
cvt.u32.u16 %r95,%r92;
cvt.u16.u8 %r96,%r95;
setp.eq.u16 %r97,%r96,0;
@ %r97 bra $L9;
$L8:
.loc 1 81 5
setp.ne.u32 %r98,%r49,0;
@ %r98 bra $L10;
.loc 1 81 16
add.u32 %r40,%r40,-1;
$L10:
.loc 1 82 6
add.u32 %r41,%r49,-1;
bra $L11;
$L9:
.loc 1 84 6
add.u32 %r41,%r49,1;
.loc 1 85 5
setp.ne.u32 %r99,%r49,-1;
@ %r99 bra $L11;
.loc 1 85 16
add.u32 %r40,%r40,1;
bra $L11;
$L7:
.loc 1 88 11
not.b32 %r101,%r42;
shr.u32 %r102,%r101,31;
.loc 1 88 18
set.u32.gt.s32 %r104,%r40,%r42;
neg.s32 %r105,%r104;
.loc 1 88 14
cvt.u16.u32 %r108,%r102;
cvt.u16.u32 %r109,%r105;
or.b16 %r107,%r108,%r109;
.loc 1 88 8
cvt.u32.u16 %r110,%r107;
cvt.u16.u8 %r111,%r110;
setp.ne.u16 %r112,%r111,0;
@ %r112 bra $L12;
.loc 1 88 27
set.u32.eq.u32 %r114,%r40,%r42;
neg.s32 %r115,%r114;
.loc 1 88 37
set.u32.gt.u32 %r117,%r49,%r51;
neg.s32 %r118,%r117;
.loc 1 88 32
cvt.u16.u32 %r120,%r115;
cvt.u16.u32 %r121,%r118;
and.b16 %r119,%r120,%r121;
.loc 1 88 21
cvt.u32.u16 %r122,%r119;
cvt.u16.u8 %r123,%r122;
setp.eq.u16 %r124,%r123,0;
@ %r124 bra $L13;
$L12:
.loc 1 89 5
setp.ne.u32 %r125,%r49,0;
@ %r125 bra $L14;
.loc 1 89 16
add.u32 %r40,%r40,-1;
$L14:
.loc 1 90 6
add.u32 %r41,%r49,-1;
bra $L11;
$L13:
.loc 1 92 6
add.u32 %r41,%r49,1;
.loc 1 93 5
setp.ne.u32 %r126,%r49,-1;
@ %r126 bra $L11;
.loc 1 93 16
add.u32 %r40,%r40,1;
$L11:
.loc 1 96 5
and.b32 %r45,%r40,2146435072;
.loc 1 97 4
setp.ne.u32 %r127,%r45,2146435072;
@ %r127 bra $L15;
.loc 1 97 29
add.f64 %r56,%r57,%r57;
bra $L1;
$L15:
.loc 1 98 4
setp.gt.s32 %r128,%r45,1048575;
@ %r128 bra $L16;
.loc 1 99 8
mul.f64 %r129,%r57,%r57;
.loc 1 100 8
setp.eq.f64 %r130,%r57,%r129;
@ %r130 bra $L16;
.loc 1 101 10
cvt.u64.u32 %r131,%r40;
cvt.u64.u32 %r135,%r41;
shl.b64 %r136,%r131,32;
or.b64 %r137,%r136,%r135;
mov.b64 %r56,%r137;
.loc 1 102 10
bra $L1;
$L16:
.loc 1 105 2
cvt.u64.u32 %r138,%r40;
cvt.u64.u32 %r142,%r41;
shl.b64 %r143,%r138,32;
or.b64 %r144,%r143,%r142;
mov.b64 %r56,%r144;
.loc 1 106 9
bra $L1;
$L17:
.loc 1 73 18
mov.f64 %r56,%r57;
$L1:
.loc 1 107 1
mov.f64 %value,%r56;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_pow10.o/1612277260  0     0     100666  962       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: pow10
.visible .func (.param .f64 %value_out) pow10 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_pow10.c"
// BEGIN GLOBAL FUNCTION DECL: pow
.extern .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: pow10
.visible .func (.param .f64 %value_out) pow10 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r26;
mov.f64 %r23,%ar0;
.loc 1 65 10
mov.f64 %r24,0d4024000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r23;
call (%value_in),pow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 66 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
/1155           1612277260  0     0     100666  14443     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remquo
.visible .func (.param .f64 %value_out) remquo (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/common/s_remquo.c"
// BEGIN VAR DEF: Zero
.const .align 8 .u64 Zero[2] =
{0,-9223372036854775808 };
// BEGIN GLOBAL FUNCTION DEF: remquo
.visible .func (.param .f64 %value_out) remquo (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .u32 %r22;
.reg .f64 %r29;
.reg .u32 %r37;
.reg .u32 %r45;
.reg .u32 %r71;
.reg .u32 %r74;
.reg .u32 %r81;
.reg .f64 %r85;
.reg .f64 %r87;
.reg .f64 %r92;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u32 %r96;
.reg .u32 %r97;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .u32 %r100;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .u32 %r104;
.reg .u32 %r105;
.reg .u32 %r106;
.reg .u32 %r107;
.reg .u32 %r108;
.reg .u32 %r111;
.reg .u32 %r113;
.reg .u32 %r114;
.reg .u32 %r116;
.reg .u32 %r117;
.reg .u32 %r118;
.reg .u32 %r120;
.reg .u32 %r121;
.reg .u32 %r122;
.reg .u32 %r125;
.reg .u32 %r126;
.reg .u32 %r127;
.reg .f64 %r128;
.reg .u32 %r130;
.reg .u32 %r131;
.reg .u32 %r132;
.reg .u64 %r134;
.reg .f64 %r135;
.reg .f64 %r136;
.reg .f64 %r137;
.reg .u64 %r138;
.reg .u64 %r139;
.reg .u64 %r140;
.reg .u64 %r141;
.reg .u64 %r142;
.reg .u32 %r144;
.reg .u32 %r146;
.reg .u32 %r147;
.reg .u32 %r149;
.reg .u32 %r150;
.reg .u16 %r151;
.reg .u16 %r152;
.reg .u16 %r153;
.reg .u32 %r154;
.reg .u16 %r155;
.reg .pred %r156;
.reg .u32 %r157;
.reg .u32 %r158;
.reg .u32 %r159;
.reg .u32 %r160;
.reg .pred %r161;
.reg .u32 %r162;
.reg .pred %r164;
.reg .u32 %r166;
.reg .u32 %r167;
.reg .u32 %r169;
.reg .u32 %r170;
.reg .u16 %r171;
.reg .u16 %r172;
.reg .u16 %r173;
.reg .u32 %r174;
.reg .u16 %r175;
.reg .pred %r176;
.reg .pred %r177;
.reg .pred %r178;
.reg .u64 %r179;
.reg .u32 %r180;
.reg .u64 %r181;
.reg .u64 %r182;
.reg .u64 %r183;
.reg .u32 %r184;
.reg .pred %r185;
.reg .pred %r186;
.reg .pred %r187;
.reg .pred %r189;
.reg .pred %r190;
.reg .pred %r192;
.reg .u32 %r193;
.reg .u32 %r194;
.reg .pred %r195;
.reg .pred %r196;
.reg .pred %r197;
.reg .pred %r199;
.reg .pred %r200;
.reg .pred %r202;
.reg .u32 %r203;
.reg .pred %r204;
.reg .u32 %r205;
.reg .pred %r206;
.reg .u32 %r207;
.reg .u32 %r208;
.reg .u32 %r209;
.reg .u32 %r210;
.reg .u32 %r211;
.reg .u32 %r213;
.reg .pred %r214;
.reg .u32 %r215;
.reg .u32 %r216;
.reg .u32 %r217;
.reg .u32 %r218;
.reg .u32 %r219;
.reg .pred %r220;
.reg .pred %r221;
.reg .pred %r222;
.reg .pred %r223;
.reg .u32 %r224;
.reg .u32 %r225;
.reg .u32 %r227;
.reg .u32 %r228;
.reg .pred %r231;
.reg .pred %r232;
.reg .pred %r233;
.reg .u32 %r234;
.reg .pred %r235;
.reg .pred %r236;
.reg .pred %r237;
.reg .u64 %r238;
.reg .u32 %r239;
.reg .u64 %r240;
.reg .u64 %r241;
.reg .u64 %r242;
.reg .u32 %r243;
.reg .u32 %r244;
.reg .pred %r246;
.reg .u32 %r248;
.reg .u32 %r249;
.reg .u32 %r250;
.reg .pred %r251;
.reg .u32 %r252;
.reg .u32 %r253;
.reg .pred %r254;
.reg .u32 %r255;
.reg .u32 %r256;
.reg .u32 %r257;
.reg .u32 %r258;
.reg .u64 %r259;
.reg .u64 %r263;
.reg .u64 %r264;
.reg .u64 %r265;
.reg .pred %r266;
.reg .pred %r267;
.reg .pred %r268;
.reg .u32 %r269;
.reg .pred %r270;
.reg .pred %r271;
.reg .pred %r272;
.reg .u32 %r273;
.reg .pred %r274;
.reg .u64 %r276;
.reg .u32 %r277;
.reg .u32 %r278;
.reg .u64 %r279;
.reg .u64 %r280;
.reg .u64 %r281;
.reg .u64 %r282;
.reg .pred %r283;
.reg .pred %r285;
mov.f64 %r136,%ar0;
mov.f64 %r137,%ar1;
mov.u64 %r138,%ar2;
.loc 1 88 2
mov.b64 %r139,%r136;
shr.u64 %r140,%r139,32;
cvt.u32.u64 %r105,%r140;
.loc 1 89 2
mov.b64 %r141,%r137;
shr.u64 %r142,%r141,32;
cvt.u32.u64 %r106,%r142;
cvt.u32.u64 %r100,%r141;
.loc 1 92 5
and.b32 %r94,%r105,2147483647;
.loc 1 93 5
and.b32 %r108,%r106,2147483647;
.loc 1 96 8
or.b32 %r144,%r108,%r100;
.loc 1 96 4
set.u32.eq.u32 %r146,%r144,0;
neg.s32 %r147,%r146;
.loc 1 96 15
set.u32.gt.s32 %r149,%r94,2146435071;
neg.s32 %r150,%r149;
cvt.u16.u32 %r152,%r147;
cvt.u16.u32 %r153,%r150;
or.b16 %r151,%r152,%r153;
cvt.u32.u16 %r154,%r151;
cvt.u16.u8 %r155,%r154;
setp.ne.u16 %r156,%r155,0;
@ %r156 bra $L2;
.loc 1 97 14
neg.s32 %r157,%r100;
.loc 1 97 13
or.b32 %r158,%r157,%r100;
.loc 1 97 18
shr.u32 %r159,%r158,31;
.loc 1 97 8
or.b32 %r160,%r159,%r108;
.loc 1 96 33
setp.le.u32 %r161,%r160,2146435072;
@ %r161 bra $L3;
$L2:
.loc 1 98 11
mov.u32 %r162,0;
st.u32 [%r138],%r162;
.loc 1 99 15
mul.f64 %r29,%r136,%r137;
.loc 1 99 18
div.rn.f64 %r135,%r29,%r29;
bra $L1;
$L3:
cvt.u32.u64 %r99,%r139;
.loc 1 90 12
xor.b32 %r22,%r105,%r106;
.loc 1 91 5
and.b32 %r107,%r105,-2147483648;
.loc 1 101 4
setp.gt.s32 %r164,%r94,%r108;
@ %r164 bra $L5;
.loc 1 102 12
set.u32.lt.s32 %r166,%r94,%r108;
neg.s32 %r167,%r166;
.loc 1 102 21
set.u32.lt.u32 %r169,%r99,%r100;
neg.s32 %r170,%r169;
.loc 1 102 16
cvt.u16.u32 %r172,%r167;
cvt.u16.u32 %r173,%r170;
or.b16 %r171,%r172,%r173;
.loc 1 102 8
cvt.u32.u16 %r174,%r171;
cvt.u16.u8 %r175,%r174;
setp.ne.u16 %r176,%r175,0;
@ %r176 bra $L50;
.loc 1 106 8
setp.ne.u32 %r177,%r99,%r100;
@ %r177 bra $L5;
.loc 1 107 20
setp.lt.s32 %r178,%r22,0;
selp.u32 %r102,-1,1,%r178;
.loc 1 107 8
st.u32 [%r138],%r102;
.loc 1 108 14
cvta.const.u64 %r179,Zero;
.loc 1 108 29
shr.u32 %r180,%r107,31;
.loc 1 108 14
cvt.u64.u32 %r181,%r180;
shl.b64 %r182,%r181,3;
add.u64 %r183,%r179,%r182;
ld.f64 %r135,[%r183];
bra $L1;
$L5:
.loc 1 113 4
and.b32 %r184,%r105,2146435072;
setp.ne.u32 %r185,%r184,0;
@ %r185 bra $L8;
.loc 1 114 8
setp.ne.u32 %r186,%r94,0;
@ %r186 bra $L9;
.loc 1 115 21
mov.u32 %r113,%r99;
.loc 1 115 3
setp.le.s32 %r187,%r99,0;
@ %r187 bra $L52;
.loc 1 115 11
mov.u32 %r98,-1043;
$L11:
.loc 1 115 41
add.u32 %r98,%r98,-1;
.loc 1 115 32
add.u32 %r113,%r113,%r113;
.loc 1 115 3
setp.gt.s32 %r189,%r113,0;
@ %r189 bra $L11;
bra $L10;
$L9:
.loc 1 117 20
shl.b32 %r111,%r94,11;
.loc 1 117 3
setp.le.s32 %r190,%r111,0;
@ %r190 bra $L53;
.loc 1 117 11
mov.u32 %r98,-1022;
$L12:
.loc 1 117 46
add.u32 %r98,%r98,-1;
.loc 1 117 37
add.u32 %r111,%r111,%r111;
.loc 1 117 3
setp.gt.s32 %r192,%r111,0;
@ %r192 bra $L12;
bra $L10;
$L8:
.loc 1 119 17
shr.s32 %r193,%r94,20;
.loc 1 119 12
add.u32 %r98,%r193,-1023;
bra $L10;
$L52:
.loc 1 115 11
mov.u32 %r98,-1043;
bra $L10;
$L53:
.loc 1 117 11
mov.u32 %r98,-1022;
$L10:
.loc 1 122 4
and.b32 %r194,%r106,2146435072;
setp.ne.u32 %r195,%r194,0;
@ %r195 bra $L13;
.loc 1 123 8
setp.ne.u32 %r196,%r108,0;
@ %r196 bra $L14;
.loc 1 124 21
mov.u32 %r116,%r100;
.loc 1 124 3
setp.le.s32 %r197,%r100,0;
@ %r197 bra $L54;
.loc 1 124 11
mov.u32 %r125,-1043;
$L16:
.loc 1 124 41
add.u32 %r125,%r125,-1;
.loc 1 124 32
add.u32 %r116,%r116,%r116;
.loc 1 124 3
setp.gt.s32 %r199,%r116,0;
@ %r199 bra $L16;
bra $L15;
$L14:
.loc 1 126 20
shl.b32 %r114,%r108,11;
.loc 1 126 3
setp.le.s32 %r200,%r114,0;
@ %r200 bra $L55;
.loc 1 126 11
mov.u32 %r125,-1022;
$L17:
.loc 1 126 46
add.u32 %r125,%r125,-1;
.loc 1 126 37
add.u32 %r114,%r114,%r114;
.loc 1 126 3
setp.gt.s32 %r202,%r114,0;
@ %r202 bra $L17;
bra $L15;
$L13:
.loc 1 128 17
shr.s32 %r203,%r108,20;
.loc 1 128 12
add.u32 %r125,%r203,-1023;
bra $L15;
$L54:
.loc 1 124 11
mov.u32 %r125,-1043;
bra $L15;
$L55:
.loc 1 126 11
mov.u32 %r125,-1022;
$L15:
.loc 1 131 4
setp.lt.s32 %r204,%r98,-1022;
@ %r204 bra $L18;
.loc 1 132 33
and.b32 %r37,%r105,1048575;
.loc 1 132 9
or.b32 %r93,%r37,1048576;
bra $L19;
$L18:
.loc 1 134 8
mov.u32 %r205,-1022;
sub.u32 %r117,%r205,%r98;
.loc 1 135 8
setp.gt.s32 %r206,%r117,31;
@ %r206 bra $L20;
.loc 1 136 31
add.u32 %r207,%r98,1054;
.loc 1 136 26
shr.u32 %r208,%r99,%r207;
.loc 1 136 18
shl.b32 %r209,%r94,%r117;
.loc 1 136 22
or.b32 %r93,%r208,%r209;
.loc 1 137 13
shl.b32 %r99,%r99,%r117;
bra $L19;
$L20:
.loc 1 139 14
mov.u32 %r211,-1054;
sub.u32 %r210,%r211,%r98;
.loc 1 139 10
shl.b32 %r93,%r99,%r210;
.loc 1 140 6
mov.u32 %r99,0;
$L19:
.loc 1 143 4
setp.lt.s32 %r285,%r125,-1022;
@ %r285 bra $L21;
.loc 1 144 33
and.b32 %r45,%r106,1048575;
.loc 1 144 9
or.b32 %r95,%r45,1048576;
.loc 1 160 17
sub.u32 %r131,%r99,%r100;
bra $L22;
$L21:
.loc 1 146 8
mov.u32 %r213,-1022;
sub.u32 %r118,%r213,%r125;
.loc 1 147 8
setp.gt.s32 %r214,%r118,31;
@ %r214 bra $L23;
.loc 1 148 31
add.u32 %r215,%r125,1054;
.loc 1 148 26
shr.u32 %r216,%r100,%r215;
.loc 1 148 18
shl.b32 %r217,%r108,%r118;
.loc 1 148 22
or.b32 %r95,%r216,%r217;
.loc 1 149 13
shl.b32 %r100,%r100,%r118;
.loc 1 160 17
sub.u32 %r131,%r99,%r100;
bra $L22;
$L23:
.loc 1 151 14
mov.u32 %r219,-1054;
sub.u32 %r218,%r219,%r125;
.loc 1 151 10
shl.b32 %r95,%r100,%r218;
.loc 1 157 4
sub.u32 %r132,%r98,%r125;
.loc 1 159 9
add.u32 %r121,%r132,-1;
.loc 1 159 7
setp.ne.u32 %r220,%r132,0;
@ %r220 bra $L56;
bra $L72;
$L22:
.loc 1 157 4
sub.u32 %r120,%r98,%r125;
.loc 1 159 9
add.u32 %r121,%r120,-1;
.loc 1 159 7
setp.eq.u32 %r221,%r120,0;
@ ! %r221 bra $L24;
bra $L57;
$L56:
.loc 1 152 6
mov.u32 %r100,0;
$L24:
.loc 1 158 4
mov.u32 %r101,0;
$L30:
.loc 1 160 8
sub.u32 %r96,%r93,%r95;
.loc 1 160 27
setp.ge.u32 %r222,%r99,%r100;
@ %r222 bra $L27;
.loc 1 160 38
add.u32 %r96,%r96,-1;
$L27:
.loc 1 161 8
setp.ge.s32 %r223,%r96,0;
@ %r223 bra $L28;
.loc 1 161 22
add.u32 %r224,%r93,%r93;
.loc 1 161 29
shr.u32 %r225,%r99,31;
.loc 1 161 25
add.u32 %r93,%r224,%r225;
.loc 1 161 39
add.u32 %r99,%r99,%r99;
bra $L29;
$L28:
.loc 1 160 17
sub.u32 %r127,%r99,%r100;
.loc 1 162 19
add.u32 %r227,%r96,%r96;
.loc 1 162 26
shr.u32 %r228,%r127,31;
.loc 1 162 22
add.u32 %r93,%r227,%r228;
.loc 1 162 36
add.u32 %r99,%r127,%r127;
.loc 1 162 46
add.u32 %r101,%r101,1;
$L29:
.loc 1 163 8
add.u32 %r101,%r101,%r101;
.loc 1 159 9
add.u32 %r121,%r121,-1;
.loc 1 159 7
setp.ne.u32 %r231,%r121,-1;
@ %r231 bra $L30;
.loc 1 165 13
sub.u32 %r131,%r99,%r100;
bra $L26;
$L57:
.loc 1 158 4
mov.u32 %r101,%r120;
$L26:
.loc 1 165 4
sub.u32 %r97,%r93,%r95;
.loc 1 165 23
setp.lt.u32 %r232,%r99,%r100;
@ ! %r232 bra $L32;
.loc 1 165 34
add.u32 %r97,%r97,-1;
$L32:
.loc 1 166 4
setp.lt.s32 %r233,%r97,0;
@ %r233 bra $L33;
.loc 1 166 26
add.u32 %r101,%r101,1;
mov.u32 %r99,%r131;
mov.u32 %r93,%r97;
$L33:
.loc 1 169 8
or.b32 %r234,%r93,%r99;
.loc 1 169 4
setp.eq.u32 %r235,%r234,0;
@ %r235 bra $L34;
.loc 1 174 7
setp.le.s32 %r236,%r93,1048575;
@ %r236 bra $L35;
bra $L36;
$L34:
.loc 1 170 8
and.b32 %r126,%r101,2147483647;
.loc 1 171 23
setp.ge.s32 %r237,%r22,0;
@ %r237 bra $L37;
.loc 1 171 20
neg.s32 %r103,%r126;
bra $L38;
$L37:
.loc 1 171 23
mov.u32 %r103,%r126;
$L38:
.loc 1 171 11
st.u32 [%r138],%r103;
.loc 1 172 17
cvta.const.u64 %r238,Zero;
.loc 1 172 32
shr.u32 %r239,%r107,31;
.loc 1 172 17
cvt.u64.u32 %r240,%r239;
shl.b64 %r241,%r240,3;
add.u64 %r242,%r238,%r241;
ld.f64 %r135,[%r242];
bra $L1;
$L35:
.loc 1 175 13
add.u32 %r243,%r93,%r93;
.loc 1 175 20
shr.u32 %r244,%r99,31;
.loc 1 175 16
add.u32 %r93,%r243,%r244;
.loc 1 175 30
add.u32 %r99,%r99,%r99;
.loc 1 176 9
add.u32 %r125,%r125,-1;
.loc 1 174 7
setp.le.s32 %r246,%r93,1048575;
@ %r246 bra $L35;
setp.lt.s32 %r285,%r125,-1022;
$L36:
.loc 1 178 4
@ %r285 bra $L39;
.loc 1 179 15
add.u32 %r71,%r93,-1048576;
.loc 1 179 32
add.u32 %r248,%r125,1023;
.loc 1 179 38
shl.b32 %r249,%r248,20;
.loc 1 179 9
or.b32 %r94,%r249,%r71;
bra $L6;
$L39:
.loc 1 181 8
mov.u32 %r250,-1022;
sub.u32 %r122,%r250,%r125;
.loc 1 182 8
setp.gt.s32 %r251,%r122,20;
@ %r251 bra $L40;
.loc 1 183 11
shr.u32 %r74,%r99,%r122;
.loc 1 183 36
add.u32 %r252,%r125,1054;
.loc 1 183 31
shl.b32 %r253,%r93,%r252;
.loc 1 183 6
or.b32 %r99,%r253,%r74;
.loc 1 184 6
shr.s32 %r94,%r93,%r122;
bra $L6;
$L40:
.loc 1 185 16
setp.gt.s32 %r254,%r122,31;
@ %r254 bra $L41;
.loc 1 186 24
shr.u32 %r81,%r99,%r122;
.loc 1 186 16
add.u32 %r255,%r125,1054;
.loc 1 186 11
shl.b32 %r256,%r93,%r255;
.loc 1 186 6
or.b32 %r99,%r256,%r81;
.loc 1 186 33
mov.u32 %r94,%r107;
bra $L6;
$L41:
.loc 1 188 14
mov.u32 %r258,-1054;
sub.u32 %r257,%r258,%r125;
.loc 1 188 10
shr.s32 %r99,%r93,%r257;
.loc 1 188 23
mov.u32 %r94,%r107;
bra $L6;
$L50:
.loc 1 103 5
mov.u32 %r101,0;
$L6:
.loc 1 192 2
cvt.u64.u32 %r259,%r94;
cvt.u64.u32 %r263,%r99;
shl.b64 %r264,%r259,32;
or.b64 %r265,%r264,%r263;
mov.b64 %r92,%r265;
.loc 1 193 4
abs.f64 %r128,%r137;
.loc 1 194 5
setp.lt.f64 %r266,%r128,0d0020000000000000;
@ ! %r266 bra $L73;
.loc 1 195 11
add.f64 %r85,%r92,%r92;
.loc 1 195 9
setp.gt.f64 %r267,%r85,%r128;
@ %r267 bra $L44;
.loc 1 195 16
setp.neu.f64 %r268,%r85,%r128;
@ %r268 bra $L45;
.loc 1 195 33
and.b32 %r269,%r101,1;
.loc 1 195 27
setp.eq.u32 %r270,%r269,0;
@ %r270 bra $L45;
$L44:
.loc 1 196 4
add.u32 %r101,%r101,1;
.loc 1 197 4
sub.f64 %r92,%r92,%r128;
bra $L45;
$L73:
.loc 1 199 18
mul.f64 %r87,%r128,0d3fe0000000000000;
.loc 1 199 12
setp.lt.f64 %r271,%r87,%r92;
@ %r271 bra $L46;
.loc 1 199 21
setp.neu.f64 %r272,%r87,%r92;
@ %r272 bra $L45;
.loc 1 199 40
and.b32 %r273,%r101,1;
.loc 1 199 34
setp.eq.u32 %r274,%r273,0;
@ %r274 bra $L45;
$L46:
.loc 1 200 7
add.u32 %r101,%r101,1;
.loc 1 201 7
sub.f64 %r92,%r92,%r128;
$L45:
.loc 1 204 2
mov.b64 %r134,%r92;
.loc 1 203 2
shr.u64 %r276,%r134,32;
.loc 1 204 2
cvt.u32.u64 %r278,%r276;
xor.b32 %r277,%r107,%r278;
cvt.u64.u32 %r279,%r277;
shl.b64 %r280,%r279,32;
and.b64 %r281,%r134,4294967295;
or.b64 %r282,%r281,%r280;
mov.b64 %r135,%r282;
.loc 1 205 4
and.b32 %r130,%r101,2147483647;
.loc 1 206 19
setp.ge.s32 %r283,%r22,0;
@ %r283 bra $L47;
.loc 1 206 16
neg.s32 %r104,%r130;
bra $L48;
$L47:
.loc 1 206 19
mov.u32 %r104,%r130;
$L48:
.loc 1 206 7
st.u32 [%r138],%r104;
.loc 1 207 9
bra $L1;
$L72:
.loc 1 165 4
sub.u32 %r97,%r93,%r95;
mov.u32 %r131,%r99;
.loc 1 158 4
mov.u32 %r101,%r132;
bra $L32;
$L1:
.loc 1 208 1
mov.f64 %value,%r135;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_rint.o/ 1612277260  0     0     100666  5793      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: rint
.visible .func (.param .f64 %value_out) rint (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_rint.c"
// BEGIN VAR DEF: TWO52
.const .align 8 .u64 TWO52[2] =
{4841369599423283200,-4382002437431492608 };
// BEGIN GLOBAL FUNCTION DEF: rint
.visible .func (.param .f64 %value_out) rint (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r24;
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .u32 %r42;
.reg .u32 %r46;
.reg .u32 %r51;
.reg .f64 %r58;
.reg .f64 %r59;
.reg .f64 %r60;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u32 %r69;
.reg .f64 %r71;
.reg .f64 %r72;
.reg .f64 %r74;
.reg .u64 %r76;
.reg .f64 %r78;
.reg .f64 %r79;
.reg .u64 %r80;
.reg .u64 %r81;
.reg .u32 %r83;
.reg .pred %r84;
.reg .pred %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .pred %r88;
.reg .u32 %r89;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .u32 %r95;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .u64 %r98;
.reg .u64 %r99;
.reg .u64 %r100;
.reg .u64 %r101;
.reg .u64 %r102;
.reg .u64 %r103;
.reg .u64 %r105;
.reg .u32 %r106;
.reg .u32 %r107;
.reg .u32 %r108;
.reg .u32 %r109;
.reg .u64 %r110;
.reg .u64 %r111;
.reg .u64 %r112;
.reg .u64 %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .u32 %r116;
.reg .pred %r117;
.reg .u32 %r118;
.reg .pred %r119;
.reg .pred %r120;
.reg .u32 %r121;
.reg .u32 %r122;
.reg .u32 %r123;
.reg .u32 %r124;
.reg .pred %r125;
.reg .pred %r126;
.reg .u32 %r127;
.reg .u32 %r128;
.reg .pred %r129;
.reg .u32 %r130;
.reg .pred %r131;
.reg .u32 %r132;
.reg .u32 %r133;
.reg .u32 %r134;
.reg .u32 %r135;
.reg .u64 %r136;
.reg .u64 %r140;
.reg .u64 %r141;
.reg .u64 %r142;
.reg .u64 %r143;
.reg .u64 %r144;
.reg .u64 %r145;
.reg .u64 %r146;
mov.f64 %r79,%ar0;
mov.b64 %r80,%r79;
shr.u64 %r81,%r80,32;
cvt.u32.u64 %r42,%r81;
cvt.u32.u64 %r46,%r80;
.loc 1 94 15
shr.u32 %r62,%r42,31;
.loc 1 95 11
shr.s32 %r83,%r42,20;
.loc 1 95 16
and.b32 %r24,%r83,2047;
.loc 1 95 5
add.u32 %r63,%r24,-1023;
.loc 1 96 4
setp.gt.s32 %r84,%r63,19;
@ %r84 bra $L2;
.loc 1 97 8
setp.ge.s32 %r85,%r63,0;
@ %r85 bra $L3;
.loc 1 98 10
and.b32 %r86,%r42,2147483647;
.loc 1 98 22
or.b32 %r87,%r86,%r46;
.loc 1 98 5
setp.eq.u32 %r88,%r87,0;
@ %r88 bra $L8;
.loc 1 99 12
and.b32 %r89,%r42,1048575;
.loc 1 99 6
or.b32 %r69,%r89,%r46;
.loc 1 101 14
neg.s32 %r90,%r69;
.loc 1 101 13
or.b32 %r91,%r90,%r69;
.loc 1 101 18
shr.u32 %r92,%r91,12;
.loc 1 101 23
and.b32 %r93,%r92,524288;
.loc 1 100 6
and.b32 %r94,%r42,-131072;
.loc 1 101 6
or.b32 %r95,%r93,%r94;
.loc 1 102 3
cvt.u64.u32 %r96,%r95;
shl.b64 %r97,%r96,32;
and.b64 %r98,%r80,4294967295;
or.b64 %r99,%r98,%r97;
mov.b64 %r71,%r99;
.loc 1 103 19
cvta.const.u64 %r100,TWO52;
cvt.s64.s32 %r101,%r62;
shl.b64 %r102,%r101,3;
add.u64 %r103,%r100,%r102;
ld.f64 %r34,[%r103];
.loc 1 103 23
add.f64 %r35,%r34,%r71;
.loc 1 103 12
st.f64 [%frame],%r35;
.loc 1 104 16
ld.f64 %r36,[%frame];
.loc 1 104 12
sub.f64 %r72,%r36,%r34;
.loc 1 106 3
mov.b64 %r76,%r72;
.loc 1 105 3
shr.u64 %r105,%r76,32;
.loc 1 106 3
cvt.u32.u64 %r107,%r105;
and.b32 %r106,%r107,2147483647;
and.b32 %r108,%r42,-2147483648;
or.b32 %r109,%r106,%r108;
cvt.u64.u32 %r110,%r109;
shl.b64 %r111,%r110,32;
and.b64 %r112,%r76,4294967295;
or.b64 %r113,%r112,%r111;
mov.b64 %r78,%r113;
.loc 1 107 17
bra $L1;
$L3:
.loc 1 109 19
mov.u32 %r114,1048575;
shr.s32 %r66,%r114,%r63;
.loc 1 110 10
and.b32 %r115,%r42,%r66;
.loc 1 110 13
or.b32 %r116,%r115,%r46;
.loc 1 110 5
setp.eq.u32 %r117,%r116,0;
@ %r117 bra $L9;
.loc 1 111 4
shr.u32 %r67,%r66,1;
.loc 1 112 10
and.b32 %r118,%r42,%r67;
.loc 1 112 13
or.b32 %r46,%r46,%r118;
.loc 1 112 5
setp.eq.u32 %r119,%r46,0;
@ %r119 bra $L5;
.loc 1 114 9
setp.eq.u32 %r120,%r63,19;
.loc 1 114 43
selp.u32 %r46,-2147483648,0,%r120;
.loc 1 115 17
not.b32 %r121,%r67;
.loc 1 115 15
and.b32 %r122,%r121,%r42;
.loc 1 115 32
mov.u32 %r124,262144;
shr.s32 %r123,%r124,%r63;
.loc 1 115 21
or.b32 %r42,%r122,%r123;
bra $L5;
$L2:
.loc 1 118 12
setp.le.s32 %r125,%r63,51;
@ %r125 bra $L7;
.loc 1 119 8
setp.ne.u32 %r126,%r63,1024;
@ %r126 bra $L11;
.loc 1 119 28
add.f64 %r78,%r79,%r79;
bra $L1;
$L7:
.loc 1 122 41
add.u32 %r51,%r24,-1043;
.loc 1 122 8
mov.u32 %r127,-1;
shr.u32 %r64,%r127,%r51;
.loc 1 123 12
and.b32 %r128,%r46,%r64;
.loc 1 123 8
setp.eq.u32 %r129,%r128,0;
@ %r129 bra $L12;
.loc 1 124 7
shr.u32 %r65,%r64,1;
.loc 1 125 12
and.b32 %r130,%r46,%r65;
.loc 1 125 8
setp.eq.u32 %r131,%r130,0;
@ %r131 bra $L5;
.loc 1 125 30
not.b32 %r132,%r65;
.loc 1 125 28
and.b32 %r133,%r132,%r46;
.loc 1 125 48
mov.u32 %r135,1073741824;
shr.s32 %r134,%r135,%r51;
.loc 1 125 23
or.b32 %r46,%r133,%r134;
$L5:
.loc 1 127 2
cvt.u64.u32 %r136,%r42;
cvt.u64.u32 %r140,%r46;
shl.b64 %r141,%r136,32;
or.b64 %r142,%r141,%r140;
mov.b64 %r74,%r142;
.loc 1 128 11
cvta.const.u64 %r143,TWO52;
cvt.s64.s32 %r144,%r62;
shl.b64 %r145,%r144,3;
add.u64 %r146,%r143,%r145;
ld.f64 %r58,[%r146];
.loc 1 128 15
add.f64 %r59,%r58,%r74;
.loc 1 128 4
st.f64 [%frame],%r59;
.loc 1 129 10
ld.f64 %r60,[%frame];
sub.f64 %r78,%r60,%r58;
bra $L1;
$L8:
.loc 1 98 38
mov.f64 %r78,%r79;
bra $L1;
$L9:
mov.f64 %r78,%r79;
bra $L1;
$L11:
mov.f64 %r78,%r79;
bra $L1;
$L12:
mov.f64 %r78,%r79;
$L1:
.loc 1 130 1
mov.f64 %value,%r78;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_round.o/1612277260  0     0     100666  3207      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: round
.visible .func (.param .f64 %value_out) round (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_round.c"
// BEGIN GLOBAL FUNCTION DEF: round
.visible .func (.param .f64 %value_out) round (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u32 %r25;
.reg .u32 %r31;
.reg .u32 %r38;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r44;
.reg .u32 %r46;
.reg .f64 %r49;
.reg .f64 %r50;
.reg .u64 %r51;
.reg .u64 %r52;
.reg .u32 %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .pred %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .pred %r66;
.reg .pred %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .pred %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .pred %r76;
.reg .u32 %r77;
.reg .u64 %r78;
.reg .u64 %r82;
.reg .u64 %r83;
.reg .u64 %r84;
mov.f64 %r50,%ar0;
mov.b64 %r51,%r50;
shr.u64 %r52,%r51,32;
cvt.u32.u64 %r31,%r52;
cvt.u32.u64 %r25,%r51;
.loc 1 62 44
shr.s32 %r54,%r31,20;
and.b32 %r23,%r54,2047;
.loc 1 62 22
add.u32 %r40,%r23,-1023;
.loc 1 64 6
setp.gt.s32 %r55,%r40,19;
@ %r55 bra $L2;
.loc 1 66 10
setp.ge.s32 %r56,%r40,0;
@ %r56 bra $L3;
.loc 1 68 15
and.b32 %r46,%r31,-2147483648;
.loc 1 69 14
setp.eq.u32 %r57,%r40,-1;
@ %r57 bra $L4;
.loc 1 110 3
mov.u32 %r31,%r46;
.loc 1 72 15
mov.u32 %r38,0;
bra $L5;
$L4:
.loc 1 71 17
or.b32 %r31,%r46,1072693248;
.loc 1 72 15
mov.u32 %r38,0;
bra $L5;
$L3:
.loc 1 76 49
mov.u32 %r58,1048575;
shr.s32 %r44,%r58,%r40;
.loc 1 77 20
and.b32 %r59,%r31,%r44;
.loc 1 77 42
or.b32 %r60,%r59,%r25;
.loc 1 77 14
setp.eq.u32 %r61,%r60,0;
@ %r61 bra $L9;
.loc 1 81 29
mov.u32 %r63,524288;
shr.s32 %r62,%r63,%r40;
.loc 1 81 15
add.u32 %r64,%r62,%r31;
.loc 1 82 18
not.b32 %r65,%r44;
.loc 1 82 15
and.b32 %r31,%r64,%r65;
.loc 1 83 15
mov.u32 %r38,0;
bra $L5;
$L2:
.loc 1 86 11
setp.le.s32 %r66,%r40,51;
@ %r66 bra $L7;
.loc 1 88 10
setp.ne.u32 %r67,%r40,1024;
@ %r67 bra $L10;
.loc 1 90 18
add.f64 %r49,%r50,%r50;
bra $L1;
$L7:
.loc 1 96 68
add.u32 %r68,%r23,-1043;
.loc 1 96 18
mov.u32 %r69,-1;
shr.u32 %r41,%r69,%r68;
.loc 1 99 16
and.b32 %r70,%r25,%r41;
.loc 1 99 10
setp.eq.u32 %r71,%r70,0;
@ %r71 bra $L11;
.loc 1 103 29
mov.u32 %r73,51;
sub.u32 %r72,%r73,%r40;
.loc 1 103 22
mov.u32 %r75,1;
shl.b32 %r74,%r75,%r72;
.loc 1 103 11
add.u32 %r42,%r74,%r25;
.loc 1 104 10
setp.le.u32 %r76,%r25,%r42;
@ %r76 bra $L8;
.loc 1 105 13
add.u32 %r31,%r31,1;
$L8:
.loc 1 108 14
not.b32 %r77,%r41;
.loc 1 108 11
and.b32 %r38,%r77,%r42;
$L5:
.loc 1 110 3
cvt.u64.u32 %r78,%r31;
cvt.u64.u32 %r82,%r38;
shl.b64 %r83,%r78,32;
or.b64 %r84,%r83,%r82;
mov.b64 %r49,%r84;
.loc 1 112 10
bra $L1;
$L9:
.loc 1 79 20
mov.f64 %r49,%r50;
bra $L1;
$L10:
mov.f64 %r49,%r50;
bra $L1;
$L11:
mov.f64 %r49,%r50;
$L1:
.loc 1 113 1
mov.f64 %value,%r49;
st.param.f64 [%value_out],%value;
ret;
}

/1173           1612277260  0     0     100666  4039      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalbln
.visible .func (.param .f64 %value_out) scalbln (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_scalbln.c"
// BEGIN GLOBAL FUNCTION DEF: scalbln
.visible .func (.param .f64 %value_out) scalbln (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %r29;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r40;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .f64 %r51;
.reg .u64 %r55;
.reg .u64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .u64 %r61;
.reg .u32 %r62;
.reg .pred %r63;
.reg .u32 %r64;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .pred %r68;
.reg .u64 %r69;
.reg .u64 %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .pred %r73;
.reg .u32 %r74;
.reg .u32 %r76;
.reg .u32 %r77;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u16 %r81;
.reg .u16 %r82;
.reg .u16 %r83;
.reg .u32 %r84;
.reg .u16 %r85;
.reg .pred %r86;
.reg .f64 %r87;
.reg .pred %r88;
.reg .f64 %r89;
.reg .pred %r90;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u32 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u64 %r96;
.reg .u64 %r97;
.reg .pred %r98;
.reg .f64 %r99;
.reg .u32 %r100;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .u32 %r103;
.reg .u64 %r104;
.reg .u64 %r105;
.reg .u64 %r106;
.reg .u64 %r107;
mov.f64 %r58,%ar0;
mov.u64 %r59,%ar1;
.loc 1 42 2
mov.b64 %r60,%r58;
shr.u64 %r61,%r60,32;
cvt.u32.u64 %r46,%r61;
.loc 1 43 28
shr.s32 %r62,%r46,20;
.loc 1 43 11
and.b32 %r48,%r62,2047;
.loc 1 44 12
setp.ne.u32 %r63,%r48,0;
@ %r63 bra $L2;
.loc 1 45 24
and.b32 %r64,%r46,2147483647;
.loc 1 45 20
cvt.u32.u64 %r67,%r60;
or.b32 %r66,%r64,%r67;
.loc 1 45 16
setp.eq.u32 %r68,%r66,0;
@ %r68 bra $L9;
.loc 1 46 8
mul.f64 %r58,%r58,0d4350000000000000;
.loc 1 47 6
mov.b64 %r69,%r58;
shr.u64 %r70,%r69,32;
cvt.u32.u64 %r46,%r70;
.loc 1 48 26
shr.s32 %r71,%r46,20;
and.b32 %r72,%r71,2047;
.loc 1 48 8
add.u32 %r48,%r72,-54;
bra $L4;
$L2:
.loc 1 50 12
setp.ne.u32 %r73,%r48,2047;
@ %r73 bra $L4;
.loc 1 50 31
add.f64 %r57,%r58,%r58;
bra $L1;
$L4:
.loc 1 51 14
cvt.u32.u64 %r74,%r59;
add.u32 %r29,%r48,%r74;
.loc 1 52 14
set.u32.gt.s64 %r76,%r59,50000;
neg.s32 %r77,%r76;
.loc 1 52 27
set.u32.gt.s32 %r79,%r29,2046;
neg.s32 %r80,%r79;
.loc 1 52 22
cvt.u16.u32 %r82,%r77;
cvt.u16.u32 %r83,%r80;
or.b16 %r81,%r82,%r83;
.loc 1 52 12
cvt.u32.u16 %r84,%r81;
cvt.u16.u8 %r85,%r84;
setp.eq.u16 %r86,%r85,0;
@ %r86 bra $L5;
.loc 1 53 16
mov.f64 %r87,0d7e37e43c8800759c;
copysign.f64 %r33,%r58,%r87;
.loc 1 53 15
mul.f64 %r57,%r33,0d7e37e43c8800759c;
bra $L1;
$L5:
.loc 1 54 5
setp.ge.s64 %r88,%r59,-50000;
@ %r88 bra $L6;
.loc 1 54 29
mov.f64 %r89,0d01a56e1fc2f8f359;
copysign.f64 %r34,%r58,%r89;
.loc 1 54 28
mul.f64 %r57,%r34,0d01a56e1fc2f8f359;
bra $L1;
$L6:
.loc 1 55 12
setp.le.s32 %r90,%r29,0;
@ %r90 bra $L7;
.loc 1 56 7
mov.b64 %r55,%r58;
and.b32 %r91,%r46,-2146435073;
shl.b32 %r92,%r29,20;
or.b32 %r93,%r91,%r92;
cvt.u64.u32 %r94,%r93;
shl.b64 %r95,%r94,32;
and.b64 %r96,%r55,4294967295;
or.b64 %r97,%r96,%r95;
mov.b64 %r57,%r97;
.loc 1 56 56
bra $L1;
$L7:
.loc 1 57 12
setp.ge.s32 %r98,%r29,-53;
@ %r98 bra $L8;
.loc 1 58 16
mov.f64 %r99,0d01a56e1fc2f8f359;
copysign.f64 %r40,%r58,%r99;
.loc 1 58 15
mul.f64 %r57,%r40,0d01a56e1fc2f8f359;
bra $L1;
$L8:
.loc 1 60 2
mov.b64 %r56,%r58;
.loc 1 59 11
add.u32 %r100,%r29,54;
.loc 1 60 2
shl.b32 %r101,%r100,20;
and.b32 %r102,%r46,-2146435073;
or.b32 %r103,%r101,%r102;
cvt.u64.u32 %r104,%r103;
shl.b64 %r105,%r104,32;
and.b64 %r106,%r56,4294967295;
or.b64 %r107,%r106,%r105;
mov.b64 %r51,%r107;
.loc 1 61 17
mul.f64 %r57,%r51,0d3c90000000000000;
bra $L1;
$L9:
.loc 1 45 49
mov.f64 %r57,%r58;
$L1:
.loc 1 62 1
mov.f64 %value,%r57;
st.param.f64 [%value_out],%value;
ret;
}

/1192           1612277259  0     0     100666  3705      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalbn
.visible .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/s_scalbn.c"
// BEGIN GLOBAL FUNCTION DEF: scalbn
.visible .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f64 %r27;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .u32 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .f64 %r45;
.reg .u64 %r49;
.reg .u64 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
.reg .u32 %r53;
.reg .u64 %r54;
.reg .u64 %r55;
.reg .u32 %r56;
.reg .pred %r57;
.reg .u32 %r58;
.reg .u32 %r60;
.reg .u32 %r61;
.reg .pred %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .u64 %r65;
.reg .u64 %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .pred %r69;
.reg .f64 %r70;
.reg .pred %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .u32 %r74;
.reg .u64 %r75;
.reg .u64 %r76;
.reg .u64 %r77;
.reg .u64 %r78;
.reg .pred %r79;
.reg .pred %r80;
.reg .f64 %r81;
.reg .f64 %r82;
.reg .u32 %r83;
.reg .u32 %r84;
.reg .u32 %r85;
.reg .u32 %r86;
.reg .u64 %r87;
.reg .u64 %r88;
.reg .u64 %r89;
.reg .u64 %r90;
mov.f64 %r52,%ar0;
mov.u32 %r53,%ar1;
.loc 1 86 2
mov.b64 %r54,%r52;
shr.u64 %r55,%r54,32;
cvt.u32.u64 %r40,%r55;
.loc 1 87 28
shr.s32 %r56,%r40,20;
.loc 1 87 11
and.b32 %r42,%r56,2047;
.loc 1 88 12
setp.ne.u32 %r57,%r42,0;
@ %r57 bra $L2;
.loc 1 89 24
and.b32 %r58,%r40,2147483647;
.loc 1 89 20
cvt.u32.u64 %r61,%r54;
or.b32 %r60,%r58,%r61;
.loc 1 89 16
setp.eq.u32 %r62,%r60,0;
@ %r62 bra $L10;
.loc 1 90 8
mul.f64 %r52,%r52,0d4350000000000000;
.loc 1 93 16
setp.ge.s32 %r63,%r53,-50000;
@ %r63 bra $L4;
.loc 1 93 39
mul.f64 %r51,%r52,0d01a56e1fc2f8f359;
bra $L1;
$L2:
.loc 1 95 12
setp.ne.u32 %r64,%r42,2047;
@ %r64 bra $L5;
.loc 1 95 31
add.f64 %r51,%r52,%r52;
bra $L1;
$L4:
.loc 1 91 6
mov.b64 %r65,%r52;
shr.u64 %r66,%r65,32;
cvt.u32.u64 %r40,%r66;
.loc 1 92 26
shr.s32 %r67,%r40,20;
and.b32 %r68,%r67,2047;
.loc 1 92 8
add.u32 %r42,%r68,-54;
$L5:
.loc 1 96 11
add.u32 %r43,%r53,%r42;
.loc 1 97 12
setp.le.s32 %r69,%r43,2046;
@ %r69 bra $L6;
.loc 1 97 37
mov.f64 %r70,0d7e37e43c8800759c;
copysign.f64 %r27,%r52,%r70;
.loc 1 97 36
mul.f64 %r51,%r27,0d7e37e43c8800759c;
bra $L1;
$L6:
.loc 1 98 12
setp.le.s32 %r71,%r43,0;
@ %r71 bra $L7;
.loc 1 99 7
mov.b64 %r49,%r52;
and.b32 %r72,%r40,-2146435073;
shl.b32 %r73,%r43,20;
or.b32 %r74,%r72,%r73;
cvt.u64.u32 %r75,%r74;
shl.b64 %r76,%r75,32;
and.b64 %r77,%r49,4294967295;
or.b64 %r78,%r77,%r76;
mov.b64 %r51,%r78;
.loc 1 99 56
bra $L1;
$L7:
.loc 1 100 12
setp.ge.s32 %r79,%r43,-53;
@ %r79 bra $L8;
.loc 1 101 16
setp.le.s32 %r80,%r53,50000;
@ %r80 bra $L9;
.loc 1 102 15
mov.f64 %r81,0d7e37e43c8800759c;
copysign.f64 %r33,%r52,%r81;
.loc 1 102 14
mul.f64 %r51,%r33,0d7e37e43c8800759c;
bra $L1;
$L9:
.loc 1 103 23
mov.f64 %r82,0d01a56e1fc2f8f359;
copysign.f64 %r34,%r52,%r82;
.loc 1 103 22
mul.f64 %r51,%r34,0d01a56e1fc2f8f359;
bra $L1;
$L8:
.loc 1 106 2
mov.b64 %r50,%r52;
.loc 1 105 11
add.u32 %r83,%r43,54;
.loc 1 106 2
shl.b32 %r84,%r83,20;
and.b32 %r85,%r40,-2146435073;
or.b32 %r86,%r84,%r85;
cvt.u64.u32 %r87,%r86;
shl.b64 %r88,%r87,32;
and.b64 %r89,%r50,4294967295;
or.b64 %r90,%r89,%r88;
mov.b64 %r45,%r90;
.loc 1 107 17
mul.f64 %r51,%r45,0d3c90000000000000;
bra $L1;
$L10:
.loc 1 89 49
mov.f64 %r51,%r52;
$L1:
.loc 1 108 1
mov.f64 %value,%r51;
st.param.f64 [%value_out],%value;
ret;
}

/1210           1612277260  0     0     100666  1167      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __signbitf
.visible .func (.param .u32 %value_out) __signbitf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_signbit.c"
// BEGIN GLOBAL FUNCTION DECL: __signbitd
.visible .func (.param .u32 %value_out) __signbitd (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: __signbitf
.visible .func (.param .u32 %value_out) __signbitf (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r26;
.reg .u32 %r29;
mov.f32 %r26,%ar0;
.loc 1 48 27
mov.b32 %r29,%r26;
shr.u32 %value,%r29,31;
.loc 1 49 1
st.param.u32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: __signbitd
.visible .func (.param .u32 %value_out) __signbitd (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .u64 %r28;
.reg .u64 %r29;
.reg .u32 %r31;
mov.f64 %r26,%ar0;
.loc 1 58 29
mov.b64 %r28,%r26;
shr.u64 %r29,%r28,32;
cvt.u32.u64 %r31,%r29;
shr.u32 %value,%r31,31;
.loc 1 59 1
st.param.u32 [%value_out],%value;
ret;
}

/1229           1612277259  0     0     100666  1357      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: significand
.visible .func (.param .f64 %value_out) significand (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_signif.c"
// BEGIN GLOBAL FUNCTION DECL: ilogb
.extern .func (.param .u32 %value_out) ilogb (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalb
.extern .func (.param .f64 %value_out) __ieee754_scalb (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: significand
.visible .func (.param .f64 %value_out) significand (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .u32 %r28;
.reg .u32 %r31;
.reg .f64 %r32;
.reg .f64 %r33;
mov.f64 %r26,%ar0;
.loc 1 31 37
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),ilogb,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 31 36
neg.s32 %r31,%r28;
.loc 1 31 9
cvt.rn.f64.s32 %r32,%r31;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r32;
call (%value_in),__ieee754_scalb,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
.loc 1 32 1
mov.f64 %value,%r33;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_sin.o/  1612277259  0     0     100666  4208      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sin
.visible .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_sin.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_sin
.extern .func (.param .f64 %value_out) __kernel_sin (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2 (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __kernel_cos
.extern .func (.param .f64 %value_out) __kernel_cos (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: sin
.visible .func (.param .f64 %value_out) sin (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .pred %r41;
.reg .f64 %r43;
.reg .u32 %r44;
.reg .f64 %r45;
.reg .pred %r46;
.reg .u32 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .pred %r52;
.reg .f64 %r53;
.reg .u32 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r58;
.reg .f64 %r60;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .u32 %r64;
.reg .f64 %r65;
.reg .f64 %r66;
.reg .f64 %r67;
.reg .f64 %r69;
.reg .f64 %r70;
mov.f64 %r38,%ar0;
.loc 1 98 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r33,%r40;
.loc 1 101 5
and.b32 %r34,%r33,2147483647;
.loc 1 102 4
setp.gt.s32 %r41,%r34,1072243195;
@ %r41 bra $L2;
.loc 1 102 30
mov.u32 %r44,0;
mov.f64 %r43,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r43;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r44;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r45,[%value_in];
}
mov.f64 %r37,%r45;
bra $L1;
$L2:
.loc 1 105 10
setp.le.s32 %r46,%r34,2146435071;
@ %r46 bra $L4;
.loc 1 105 35
sub.f64 %r37,%r38,%r38;
bra $L1;
$L4:
.loc 1 109 10
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2,(%out_arg1,%out_arg2);
ld.param.u32 %r49,[%value_in];
}
.loc 1 110 14
and.b32 %r22,%r49,3;
.loc 1 110 6
setp.eq.u32 %r50,%r22,1;
@ %r50 bra $L5;
setp.eq.u32 %r51,%r22,2;
@ %r51 bra $L6;
setp.ne.u32 %r52,%r22,0;
@ %r52 bra $L7;
.loc 1 111 19
ld.f64 %r56,[%frame+8];
mov.u32 %r55,1;
ld.f64 %r53,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r53;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r56;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r55;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r57,[%value_in];
}
mov.f64 %r37,%r57;
bra $L1;
$L5:
.loc 1 112 19
ld.f64 %r60,[%frame+8];
ld.f64 %r58,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r58;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r60;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r61,[%value_in];
}
mov.f64 %r37,%r61;
bra $L1;
$L6:
.loc 1 113 19
ld.f64 %r65,[%frame+8];
mov.u32 %r64,1;
ld.f64 %r62,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r62;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r65;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r64;
call (%value_in),__kernel_sin,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r66,[%value_in];
}
.loc 1 113 18
neg.f64 %r37,%r66;
bra $L1;
$L7:
.loc 1 115 12
ld.f64 %r69,[%frame+8];
ld.f64 %r67,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r67;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r69;
call (%value_in),__kernel_cos,(%out_arg1,%out_arg2);
ld.param.f64 %r70,[%value_in];
}
.loc 1 115 11
neg.f64 %r37,%r70;
$L1:
.loc 1 118 1
mov.f64 %value,%r37;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-s_tan.o/  1612277259  0     0     100666  2683      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tan
.visible .func (.param .f64 %value_out) tan (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_tan.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_tan
.extern .func (.param .f64 %value_out) __kernel_tan (.param .f64 %in_ar0, .param .f64 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2 (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: tan
.visible .func (.param .f64 %value_out) tan (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r27;
.reg .u32 %r28;
.reg .f64 %r31;
.reg .f64 %r32;
.reg .u64 %r33;
.reg .u64 %r34;
.reg .pred %r35;
.reg .f64 %r37;
.reg .u32 %r38;
.reg .f64 %r39;
.reg .pred %r40;
.reg .u32 %r43;
.reg .f64 %r44;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .f64 %r51;
.reg .f64 %r52;
mov.f64 %r32,%ar0;
.loc 1 88 2
mov.b64 %r33,%r32;
shr.u64 %r34,%r33,32;
cvt.u32.u64 %r27,%r34;
.loc 1 91 5
and.b32 %r28,%r27,2147483647;
.loc 1 92 4
setp.gt.s32 %r35,%r28,1072243195;
@ %r35 bra $L2;
.loc 1 92 30
mov.u32 %r38,1;
mov.f64 %r37,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r37;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r38;
call (%value_in),__kernel_tan,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r39,[%value_in];
}
mov.f64 %r31,%r39;
bra $L1;
$L2:
.loc 1 95 10
setp.le.s32 %r40,%r28,2146435071;
@ %r40 bra $L4;
.loc 1 95 35
sub.f64 %r31,%r32,%r32;
bra $L1;
$L4:
.loc 1 99 10
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2,(%out_arg1,%out_arg2);
ld.param.u32 %r43,[%value_in];
}
.loc 1 100 44
add.u32 %r47,%r43,%r43;
and.b32 %r48,%r47,2;
.loc 1 100 13
mov.u32 %r50,1;
sub.u32 %r49,%r50,%r48;
ld.f64 %r51,[%frame+8];
ld.f64 %r44,[%frame];
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r44;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r51;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r49;
call (%value_in),__kernel_tan,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f64 %r52,[%value_in];
}
mov.f64 %r31,%r52;
$L1:
.loc 1 103 1
mov.f64 %value,%r31;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_tanh.o/ 1612277259  0     0     100666  3191      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tanh
.visible .func (.param .f64 %value_out) tanh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/s_tanh.c"
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1
.extern .func (.param .f64 %value_out) expm1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tanh
.visible .func (.param .f64 %value_out) tanh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r31;
.reg .u32 %r32;
.reg .f64 %r36;
.reg .f64 %r37;
.reg .f64 %r38;
.reg .u64 %r39;
.reg .u64 %r40;
.reg .pred %r41;
.reg .f64 %r42;
.reg .pred %r43;
.reg .pred %r45;
.reg .pred %r46;
.reg .f64 %r47;
.reg .pred %r48;
.reg .f64 %r50;
.reg .f64 %r52;
.reg .f64 %r53;
.reg .f64 %r54;
.reg .f64 %r55;
.reg .f64 %r56;
.reg .f64 %r57;
.reg .f64 %r59;
.reg .f64 %r61;
.reg .f64 %r62;
.reg .f64 %r63;
.reg .f64 %r64;
.reg .pred %r65;
mov.f64 %r38,%ar0;
.loc 1 92 2
mov.b64 %r39,%r38;
shr.u64 %r40,%r39,32;
cvt.u32.u64 %r31,%r40;
.loc 1 93 5
and.b32 %r32,%r31,2147483647;
.loc 1 96 4
setp.le.s32 %r41,%r32,2146435071;
@ %r41 bra $L2;
.loc 1 97 27
mov.f64 %r42,0d3ff0000000000000;
div.rn.f64 %r36,%r42,%r38;
.loc 1 97 9
setp.lt.s32 %r43,%r31,0;
@ %r43 bra $L3;
.loc 1 97 29
add.f64 %r37,%r36,0d3ff0000000000000;
bra $L1;
$L3:
.loc 1 98 29
sub.f64 %r37,%r36,%r42;
bra $L1;
$L2:
.loc 1 102 5
setp.gt.s32 %r45,%r32,1077280767;
@ %r45 bra $L8;
.loc 1 103 9
setp.gt.s32 %r46,%r32,1015021567;
@ %r46 bra $L6;
.loc 1 104 16
add.f64 %r47,%r38,0d3ff0000000000000;
.loc 1 104 11
mul.f64 %r37,%r47,%r38;
bra $L1;
$L6:
.loc 1 105 9
setp.le.s32 %r48,%r32,1072693247;
@ %r48 bra $L7;
.loc 1 106 17
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r50,[%value_in];
}
.loc 1 106 7
add.f64 %r52,%r50,%r50;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r52;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r53,[%value_in];
}
.loc 1 107 19
add.f64 %r54,%r53,0d4000000000000000;
.loc 1 107 16
mov.f64 %r56,0d4000000000000000;
div.rn.f64 %r55,%r56,%r54;
.loc 1 107 5
mov.f64 %r57,0d3ff0000000000000;
sub.f64 %r37,%r57,%r55;
bra $L5;
$L7:
.loc 1 109 25
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r38;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r59,[%value_in];
}
.loc 1 109 14
mul.f64 %r61,%r59,0dc000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r61;
call (%value_in),expm1,(%out_arg1);
ld.param.f64 %r62,[%value_in];
}
.loc 1 110 13
neg.f64 %r63,%r62;
.loc 1 110 18
add.f64 %r64,%r62,0d4000000000000000;
.loc 1 110 11
div.rn.f64 %r37,%r63,%r64;
bra $L5;
$L8:
.loc 1 114 8
mov.f64 %r37,0d3ff0000000000000;
$L5:
.loc 1 116 19
setp.ge.s32 %r65,%r31,0;
@ %r65 bra $L1;
neg.f64 %r37,%r37;
$L1:
.loc 1 117 1
mov.f64 %value,%r37;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-s_trunc.o/1612277260  0     0     100666  2148      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: trunc
.visible .func (.param .f64 %value_out) trunc (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/s_trunc.c"
// BEGIN GLOBAL FUNCTION DEF: trunc
.visible .func (.param .f64 %value_out) trunc (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u32 %r35;
.reg .u32 %r36;
.reg .f64 %r41;
.reg .f64 %r42;
.reg .u64 %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .u32 %r48;
.reg .u64 %r49;
.reg .u64 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u64 %r58;
.reg .u64 %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .u64 %r65;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .u64 %r76;
.reg .u64 %r77;
.reg .u64 %r78;
mov.f64 %r42,%ar0;
mov.b64 %r43,%r42;
shr.u64 %r44,%r43,32;
cvt.u32.u64 %r36,%r44;
.loc 1 64 44
shr.s32 %r45,%r36,20;
and.b32 %r23,%r45,2047;
.loc 1 64 22
add.u32 %r35,%r23,-1023;
.loc 1 66 6
setp.gt.s32 %r46,%r35,19;
@ %r46 bra $L2;
.loc 1 69 10
setp.ge.s32 %r47,%r35,0;
@ %r47 bra $L3;
.loc 1 61 11
and.b32 %r48,%r36,-2147483648;
.loc 1 72 11
cvt.u64.u32 %r49,%r48;
shl.b64 %r53,%r49,32;
mov.b64 %r41,%r53;
bra $L1;
$L3:
.loc 1 77 11
mov.u32 %r55,1048575;
shr.s32 %r54,%r55,%r35;
not.b32 %r56,%r54;
and.b32 %r57,%r56,%r36;
cvt.u64.u32 %r58,%r57;
shl.b64 %r62,%r58,32;
mov.b64 %r41,%r62;
bra $L1;
$L2:
.loc 1 80 11
setp.le.s32 %r63,%r35,51;
@ %r63 bra $L5;
.loc 1 82 10
setp.ne.u32 %r64,%r35,1024;
@ %r64 bra $L6;
.loc 1 85 20
add.f64 %r41,%r42,%r42;
bra $L1;
$L5:
.loc 1 93 7
cvt.u64.u32 %r65,%r36;
add.u32 %r69,%r23,-1043;
mov.u32 %r71,-1;
shr.u32 %r70,%r71,%r69;
not.b32 %r72,%r70;
cvt.u32.u64 %r75,%r43;
and.b32 %r74,%r72,%r75;
cvt.u64.u32 %r76,%r74;
shl.b64 %r77,%r65,32;
or.b64 %r78,%r77,%r76;
mov.b64 %r41,%r78;
bra $L1;
$L6:
mov.f64 %r41,%r42;
$L1:
.loc 1 96 1
mov.f64 %value,%r41;
st.param.f64 [%value_out],%value;
ret;
}
/1247           1612277260  0     0     100666  1062      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalblnl
.visible .func (.param .f64 %value_out) scalblnl (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/scalblnl.c"
// BEGIN GLOBAL FUNCTION DECL: scalbln
.extern .func (.param .f64 %value_out) scalbln (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: scalblnl
.visible .func (.param .f64 %value_out) scalblnl (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u64 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r24;
call (%value_in),scalbln,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-scalbnl.o/1612277260  0     0     100666  1054      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalbnl
.visible .func (.param .f64 %value_out) scalbnl (.param .f64 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/scalbnl.c"
// BEGIN GLOBAL FUNCTION DECL: scalbn
.extern .func (.param .f64 %value_out) scalbn (.param .f64 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: scalbnl
.visible .func (.param .f64 %value_out) scalbnl (.param .f64 %in_ar0, .param .u32 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u32 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u32 %r24,%ar1;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r24;
call (%value_in),scalbn,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/1265           1612277259  0     0     100666  4020      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: asinhf
.visible .func (.param .f32 %value_out) asinhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_asinh.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: log1pf
.extern .func (.param .f32 %value_out) log1pf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: asinhf
.visible .func (.param .f32 %value_out) asinhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r25;
.reg .f32 %r29;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .f32 %r39;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .f32 %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .f32 %r49;
.reg .f32 %r51;
.reg .pred %r52;
.reg .f32 %r54;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r61;
.reg .f32 %r63;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .pred %r72;
mov.f32 %r42,%ar0;
.loc 1 36 2
mov.b32 %r36,%r42;
.loc 1 37 5
and.b32 %r37,%r36,2147483647;
.loc 1 38 4
setp.le.s32 %r43,%r37,2139095039;
@ %r43 bra $L2;
.loc 1 38 39
add.f32 %r41,%r42,%r42;
bra $L1;
$L2:
.loc 1 39 4
setp.gt.s32 %r44,%r37,830472191;
@ %r44 bra $L4;
.loc 1 40 13
add.f32 %r45,%r42,0f7149f2ca;
.loc 1 40 8
setp.gt.f32 %r46,%r45,0f3f800000;
@ ! %r46 bra $L5;
bra $L8;
$L4:
.loc 1 42 4
setp.le.s32 %r47,%r37,1300234240;
@ %r47 bra $L6;
.loc 1 43 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r49,[%value_in];
}
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r49;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r51,[%value_in];
}
.loc 1 43 8
add.f32 %r41,%r51,0f3f317218;
bra $L7;
$L6:
.loc 1 44 12
setp.le.s32 %r52,%r37,1073741824;
@ %r52 bra $L5;
.loc 1 45 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r54,[%value_in];
}
.loc 1 46 43
fma.rn.f32 %r25,%r42,%r42,0f3f800000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r56,[%value_in];
}
.loc 1 46 67
add.f32 %r57,%r56,%r54;
.loc 1 46 41
mov.f32 %r59,0f3f800000;
div.rn.f32 %r58,%r59,%r57;
.loc 1 46 10
fma.rn.f32 %r29,%r54,0f40000000,%r58;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r29;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r61,[%value_in];
}
mov.f32 %r41,%r61;
bra $L7;
$L5:
.loc 1 48 8
mul.f32 %r39,%r42,%r42;
.loc 1 49 16
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r63,[%value_in];
}
.loc 1 49 32
add.f32 %r65,%r39,0f3f800000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r65;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r66,[%value_in];
}
.loc 1 49 31
add.f32 %r68,%r66,0f3f800000;
.loc 1 49 26
div.rn.f32 %r69,%r39,%r68;
.loc 1 49 9
add.f32 %r70,%r69,%r63;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r70;
call (%value_in),log1pf,(%out_arg1);
ld.param.f32 %r71,[%value_in];
}
mov.f32 %r41,%r71;
$L7:
.loc 1 51 4
setp.gt.s32 %r72,%r36,0;
@ %r72 bra $L1;
.loc 1 51 33
neg.f32 %r41,%r41;
bra $L1;
$L8:
.loc 1 40 28
mov.f32 %r41,%r42;
$L1:
.loc 1 52 1
mov.f32 %value,%r41;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_atan.o/1612277259  0     0     100666  4798      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atanf
.visible .func (.param .f32 %value_out) atanf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_atan.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN VAR DEF: atanhi
.const .align 4 .u32 atanhi[4] =
{1055744824,1061752794,1065064542,1070141402 };
// BEGIN VAR DEF: atanlo
.const .align 4 .u32 atanlo[4] =
{833369961,857874792,856952756,866263400 };
// BEGIN GLOBAL FUNCTION DEF: atanf
.visible .func (.param .f32 %value_out) atanf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .pred %r57;
.reg .pred %r58;
.reg .f32 %r59;
.reg .pred %r60;
.reg .f32 %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .f32 %r65;
.reg .pred %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .pred %r70;
.reg .u64 %r71;
.reg .u64 %r72;
.reg .u64 %r73;
.reg .u64 %r74;
.reg .u64 %r75;
.reg .u64 %r78;
.reg .f32 %r79;
.reg .f32 %r80;
.reg .f32 %r81;
.reg .f32 %r82;
.reg .pred %r83;
mov.f32 %r53,%ar0;
.loc 1 77 2
mov.b32 %r43,%r53;
.loc 1 78 5
and.b32 %r44,%r43,2147483647;
.loc 1 79 4
setp.le.s32 %r54,%r44,1350565887;
@ %r54 bra $L2;
.loc 1 80 8
setp.le.s32 %r55,%r44,2139095040;
@ %r55 bra $L3;
.loc 1 81 11
add.f32 %r52,%r53,%r53;
bra $L1;
$L3:
.loc 1 82 8
setp.gt.s32 %r56,%r43,0;
.loc 1 83 32
selp.f32 %r52,0f3fc90fdb,0fbfc90fdb,%r56;
bra $L1;
$L2:
.loc 1 84 7
setp.gt.s32 %r57,%r44,1054867455;
@ %r57 bra $L5;
.loc 1 85 9
setp.gt.s32 %r58,%r44,822083583;
@ %r58 bra $L12;
.loc 1 86 10
add.f32 %r59,%r53,0f7149f2ca;
.loc 1 86 5
setp.gt.f32 %r60,%r59,0f3f800000;
@ %r60 bra $L13;
.loc 1 88 9
mov.u32 %r42,-1;
bra $L6;
$L5:
.loc 1 90 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r53;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r62,[%value_in];
}
.loc 1 91 5
setp.gt.s32 %r63,%r44,1066926079;
@ %r63 bra $L7;
.loc 1 92 9
setp.gt.s32 %r64,%r44,1060110335;
@ %r64 bra $L8;
.loc 1 93 28
fma.rn.f32 %r23,%r62,0f40000000,0fbf800000;
.loc 1 93 45
add.f32 %r24,%r62,0f40000000;
.loc 1 93 13
div.rn.f32 %r53,%r23,%r24;
.loc 1 93 6
mov.u32 %r42,0;
bra $L6;
$L8:
.loc 1 95 18
mov.f32 %r65,0f3f800000;
sub.f32 %r25,%r62,%r65;
.loc 1 95 26
add.f32 %r26,%r62,0f3f800000;
.loc 1 95 14
div.rn.f32 %r53,%r25,%r26;
.loc 1 95 6
mov.u32 %r42,1;
bra $L6;
$L7:
.loc 1 98 9
setp.gt.s32 %r66,%r44,1075576831;
@ %r66 bra $L9;
.loc 1 99 18
mov.f32 %r67,0f3fc00000;
sub.f32 %r27,%r62,%r67;
.loc 1 99 35
fma.rn.f32 %r28,%r62,0f3fc00000,0f3f800000;
.loc 1 99 14
div.rn.f32 %r53,%r27,%r28;
.loc 1 99 6
mov.u32 %r42,2;
bra $L6;
$L9:
.loc 1 101 14
mov.f32 %r68,0fbf800000;
div.rn.f32 %r53,%r68,%r62;
.loc 1 101 6
mov.u32 %r42,3;
bra $L6;
$L12:
.loc 1 88 9
mov.u32 %r42,-1;
$L6:
.loc 1 105 4
mul.f32 %r47,%r53,%r53;
.loc 1 106 4
mul.f32 %r48,%r47,%r47;
.loc 1 108 51
fma.rn.f32 %r29,%r48,0f3c8569d7,0f3d4bda59;
.loc 1 108 42
fma.rn.f32 %r30,%r29,%r48,0f3d886b35;
.loc 1 108 33
fma.rn.f32 %r31,%r30,%r48,0f3dba2e6e;
.loc 1 108 24
fma.rn.f32 %r32,%r31,%r48,0f3e124925;
.loc 1 108 15
fma.rn.f32 %r33,%r32,%r48,0f3eaaaaab;
.loc 1 109 42
fma.rn.f32 %r34,%r48,0fbd15a221,0fbd6ef16b;
.loc 1 109 33
fma.rn.f32 %r35,%r34,%r48,0fbd9d8795;
.loc 1 109 24
fma.rn.f32 %r36,%r35,%r48,0fbde38e38;
.loc 1 109 15
fma.rn.f32 %r37,%r36,%r48,0fbe4ccccd;
.loc 1 109 5
mul.f32 %r69,%r37,%r48;
.loc 1 110 28
fma.rn.f32 %r50,%r33,%r47,%r69;
.loc 1 110 24
mul.f32 %r51,%r53,%r50;
.loc 1 110 5
setp.ne.u32 %r70,%r42,-1;
@ %r70 bra $L10;
.loc 1 110 21
sub.f32 %r52,%r53,%r51;
bra $L1;
$L10:
.loc 1 112 16
cvta.const.u64 %r71,atanhi;
cvt.s64.s32 %r72,%r42;
shl.b64 %r73,%r72,2;
add.u64 %r74,%r71,%r73;
.loc 1 112 43
cvta.const.u64 %r75,atanlo;
add.u64 %r78,%r75,%r73;
.loc 1 112 35
ld.f32 %r80,[%r78];
sub.f32 %r79,%r51,%r80;
.loc 1 112 49
sub.f32 %r81,%r79,%r53;
.loc 1 112 8
ld.f32 %r82,[%r74];
sub.f32 %r52,%r82,%r81;
.loc 1 113 23
setp.ge.s32 %r83,%r43,0;
@ %r83 bra $L1;
neg.f32 %r52,%r52;
bra $L1;
$L13:
.loc 1 86 25
mov.f32 %r52,%r53;
$L1:
.loc 1 115 1
mov.f32 %value,%r52;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_cbrt.o/1612277260  0     0     100666  2244      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cbrtf
.visible .func (.param .f32 %value_out) cbrtf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_cbrt.c"
// BEGIN GLOBAL FUNCTION DEF: cbrtf
.visible .func (.param .f32 %value_out) cbrtf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .u32 %r24;
.reg .u32 %r27;
.reg .u32 %r37;
.reg .f32 %r38;
.reg .f32 %r41;
.reg .f32 %r44;
.reg .f32 %r46;
.reg .f32 %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .pred %r50;
.reg .f32 %r51;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .u32 %r70;
.reg .u32 %r71;
mov.f32 %r47,%ar0;
.loc 1 53 2
mov.b32 %r22,%r47;
.loc 1 55 6
and.b32 %r24,%r22,2147483647;
.loc 1 56 4
setp.le.u32 %r48,%r24,2139095039;
@ %r48 bra $L2;
.loc 1 57 14
add.f32 %r46,%r47,%r47;
bra $L1;
$L2:
.loc 1 58 4
setp.eq.u32 %r49,%r24,0;
@ %r49 bra $L6;
.loc 1 61 2
mov.b32 %r41,%r24;
.loc 1 63 4
setp.gt.s32 %r50,%r24,8388607;
@ %r50 bra $L4;
.loc 1 65 6
mul.f32 %r51,%r41,0f4b800000;
.loc 1 65 35
mov.b32 %r53,%r51;
div.u32 %r54,%r53,3;
add.u32 %r27,%r54,642849266;
mov.b32 %r38,%r27;
bra $L5;
$L4:
.loc 1 68 4
div.s32 %r58,%r24,3;
add.u32 %r59,%r58,709958130;
mov.b32 %r38,%r59;
$L5:
.loc 1 72 5
mul.f32 %r60,%r38,%r38;
.loc 1 72 3
div.rn.f32 %r61,%r60,%r41;
.loc 1 73 3
fma.rn.f32 %r44,%r38,%r61,0f3f0af8b0;
.loc 1 74 11
add.f32 %r62,%r44,0f3fb50750;
.loc 1 74 15
mov.f32 %r64,0fbf348ef1;
div.rn.f32 %r63,%r64,%r44;
.loc 1 74 13
add.f32 %r65,%r62,%r63;
.loc 1 74 8
mov.f32 %r67,0f3fcdb6db;
div.rn.f32 %r66,%r67,%r65;
.loc 1 74 6
add.f32 %r68,%r66,0f3eb6db6e;
.loc 1 74 3
mul.f32 %r69,%r68,%r38;
.loc 1 54 6
and.b32 %r70,%r22,-2147483648;
.loc 1 78 2
mov.b32 %r71,%r69;
or.b32 %r37,%r70,%r71;
mov.b32 %r46,%r37;
.loc 1 79 8
bra $L1;
$L6:
.loc 1 59 12
mov.f32 %r46,%r47;
$L1:
.loc 1 80 1
mov.f32 %value,%r46;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_ceil.o/1612277259  0     0     100666  2348      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ceilf
.visible .func (.param .f32 %value_out) ceilf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_ceil.c"
// BEGIN GLOBAL FUNCTION DEF: ceilf
.visible .func (.param .f32 %value_out) ceilf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .u32 %r39;
.reg .pred %r40;
.reg .pred %r41;
.reg .f32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .pred %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .pred %r48;
.reg .f32 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .pred %r56;
mov.f32 %r38,%ar0;
.loc 1 33 2
mov.b32 %r22,%r38;
.loc 1 34 5
and.b32 %r33,%r22,2147483647;
.loc 1 35 10
shr.u32 %r39,%r33,23;
.loc 1 35 15
add.u32 %r34,%r39,-127;
.loc 1 36 4
setp.gt.s32 %r40,%r34,22;
@ %r40 bra $L2;
.loc 1 37 8
setp.ge.s32 %r41,%r34,0;
@ %r41 bra $L3;
.loc 1 38 10
add.f32 %r42,%r38,0f7149f2ca;
.loc 1 38 5
setp.gt.f32 %r43,%r42,0f00000000;
@ ! %r43 bra $L17;
.loc 1 39 9
setp.lt.s32 %r44,%r22,0;
@ %r44 bra $L10;
.loc 1 40 14
setp.eq.u32 %r45,%r33,0;
selp.f32 %r37,%r38,0f3f800000,%r45;
bra $L1;
$L3:
.loc 1 43 19
mov.u32 %r46,8388607;
shr.s32 %r35,%r46,%r34;
.loc 1 44 9
and.b32 %r47,%r22,%r35;
.loc 1 44 5
setp.eq.u32 %r48,%r47,0;
@ %r48 bra $L12;
.loc 1 45 10
add.f32 %r49,%r38,0f7149f2ca;
.loc 1 45 5
setp.gt.f32 %r50,%r49,0f00000000;
@ ! %r50 bra $L18;
.loc 1 46 9
setp.le.s32 %r51,%r22,0;
@ %r51 bra $L8;
.loc 1 46 34
mov.u32 %r53,8388608;
shr.s32 %r52,%r53,%r34;
.loc 1 46 19
add.u32 %r22,%r52,%r22;
$L8:
.loc 1 47 14
not.b32 %r54,%r35;
.loc 1 47 10
and.b32 %r55,%r54,%r22;
.loc 1 54 2
mov.b32 %r37,%r55;
bra $L1;
$L2:
.loc 1 51 8
setp.le.u32 %r56,%r33,2139095039;
@ %r56 bra $L14;
.loc 1 51 43
add.f32 %r37,%r38,%r38;
bra $L1;
$L17:
mov.f32 %r37,%r38;
bra $L1;
$L10:
mov.f32 %r37,0f80000000;
bra $L1;
$L18:
mov.f32 %r37,%r38;
.loc 1 55 9
bra $L1;
$L12:
.loc 1 44 24
mov.f32 %r37,%r38;
bra $L1;
$L14:
mov.f32 %r37,%r38;
$L1:
.loc 1 56 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}
/1283           1612277260  0     0     100666  922       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: copysignf
.visible .func (.param .f32 %value_out) copysignf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_copysign.c"
// BEGIN GLOBAL FUNCTION DEF: copysignf
.visible .func (.param .f32 %value_out) copysignf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r24;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .u32 %r30;
.reg .u32 %r31;
.reg .u32 %r32;
.reg .u32 %r33;
mov.f32 %r28,%ar0;
mov.f32 %r29,%ar1;
.loc 1 34 2
mov.b32 %r31,%r28;
and.b32 %r30,%r31,2147483647;
mov.b32 %r33,%r29;
and.b32 %r32,%r33,-2147483648;
or.b32 %r24,%r30,%r32;
.loc 1 35 16
mov.b32 %value,%r24;
.loc 1 36 1
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_cos.o/ 1612277259  0     0     100666  3987      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cosf
.visible .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_cos.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_cosf
.extern .func (.param .f32 %value_out) __kernel_cosf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2f
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2f (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __kernel_sinf
.extern .func (.param .f32 %value_out) __kernel_sinf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DEF: cosf
.visible .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .pred %r39;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .pred %r43;
.reg .u32 %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .f32 %r50;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .u32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
mov.f32 %r38,%ar0;
.loc 1 29 2
mov.b32 %r34,%r38;
.loc 1 32 5
and.b32 %r35,%r34,2147483647;
.loc 1 33 4
setp.gt.s32 %r39,%r35,1061752792;
@ %r39 bra $L2;
.loc 1 33 30
mov.f32 %r41,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r42,[%value_in];
}
mov.f32 %r37,%r42;
bra $L1;
$L2:
.loc 1 36 10
setp.le.s32 %r43,%r35,2139095039;
@ %r43 bra $L4;
.loc 1 36 45
sub.f32 %r37,%r38,%r38;
bra $L1;
$L4:
.loc 1 40 10
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2f,(%out_arg1,%out_arg2);
ld.param.u32 %r46,[%value_in];
}
.loc 1 41 14
and.b32 %r22,%r46,3;
.loc 1 41 6
setp.eq.u32 %r47,%r22,1;
@ %r47 bra $L5;
setp.eq.u32 %r48,%r22,2;
@ %r48 bra $L6;
setp.ne.u32 %r49,%r22,0;
@ %r49 bra $L7;
.loc 1 42 19
ld.f32 %r52,[%frame+4];
ld.f32 %r50,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r52;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r53,[%value_in];
}
mov.f32 %r37,%r53;
bra $L1;
$L5:
.loc 1 43 19
ld.f32 %r57,[%frame+4];
ld.f32 %r54,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r54;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r57;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r22;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r58,[%value_in];
}
.loc 1 43 18
neg.f32 %r37,%r58;
bra $L1;
$L6:
.loc 1 44 19
ld.f32 %r61,[%frame+4];
ld.f32 %r59,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r59;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r61;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r62,[%value_in];
}
.loc 1 44 18
neg.f32 %r37,%r62;
bra $L1;
$L7:
.loc 1 46 19
ld.f32 %r66,[%frame+4];
mov.u32 %r65,1;
ld.f32 %r63,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r63;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r66;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r65;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r67,[%value_in];
}
mov.f32 %r37,%r67;
$L1:
.loc 1 49 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_erf.o/ 1612277259  0     0     100666  17534     `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: erff
.visible .func (.param .f32 %value_out) erff (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_erf.c"
// BEGIN GLOBAL FUNCTION DECL: erfcf
.visible .func (.param .f32 %value_out) erfcf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.extern .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_uflow
.extern .func (.param .f64 %value_out) __math_uflow (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: erff
.visible .func (.param .f32 %value_out) erff (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r46;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r77;
.reg .f32 %r82;
.reg .f32 %r86;
.reg .f32 %r87;
.reg .u32 %r88;
.reg .u32 %r89;
.reg .f32 %r91;
.reg .f32 %r92;
.reg .f32 %r93;
.reg .f32 %r96;
.reg .f32 %r97;
.reg .f32 %r98;
.reg .f32 %r99;
.reg .f32 %r100;
.reg .f32 %r101;
.reg .f32 %r104;
.reg .f32 %r105;
.reg .pred %r106;
.reg .u32 %r107;
.reg .u32 %r108;
.reg .u32 %r109;
.reg .u32 %r110;
.reg .f32 %r111;
.reg .f32 %r112;
.reg .f32 %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .u32 %r116;
.reg .pred %r117;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .pred %r120;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .pred %r124;
.reg .f32 %r125;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .pred %r128;
.reg .pred %r129;
.reg .f32 %r131;
.reg .f32 %r132;
.reg .f32 %r133;
.reg .pred %r134;
.reg .u32 %r135;
.reg .u32 %r136;
.reg .f32 %r137;
.reg .f32 %r139;
.reg .f32 %r140;
.reg .f32 %r141;
.reg .f32 %r142;
.reg .f32 %r144;
.reg .pred %r145;
.reg .f32 %r146;
.reg .f32 %r147;
.reg .f32 %r148;
.reg .f32 %r149;
mov.f32 %r105,%ar0;
.loc 1 111 2
mov.b32 %r88,%r105;
.loc 1 112 5
and.b32 %r89,%r88,2147483647;
.loc 1 113 4
setp.le.s32 %r106,%r89,2139095039;
@ %r106 bra $L2;
.loc 1 114 25
shr.u32 %r107,%r88,31;
.loc 1 114 30
add.u32 %r108,%r107,%r107;
.loc 1 115 22
mov.u32 %r110,1;
sub.u32 %r109,%r110,%r108;
.loc 1 115 13
cvt.rn.f32.s32 %r111,%r109;
.loc 1 115 29
mov.f32 %r113,0f3f800000;
div.rn.f32 %r112,%r113,%r105;
.loc 1 115 25
add.f32 %r104,%r111,%r112;
bra $L1;
$L2:
.loc 1 118 4
setp.gt.s32 %r114,%r89,1062731775;
@ %r114 bra $L4;
.loc 1 119 8
setp.gt.s32 %r115,%r89,830472191;
@ %r115 bra $L5;
.loc 1 120 13
and.b32 %r116,%r88,2080374784;
setp.ne.u32 %r117,%r116,0;
@ %r117 bra $L6;
.loc 1 122 45
mul.f32 %r118,%r105,0f3f8375d4;
.loc 1 122 40
fma.rn.f32 %r28,%r105,0f41000000,%r118;
.loc 1 122 26
mul.f32 %r104,%r28,0f3e000000;
bra $L1;
$L6:
.loc 1 123 12
fma.rn.f32 %r104,%r105,0f3e0375d4,%r105;
bra $L1;
$L5:
.loc 1 125 8
mul.f32 %r99,%r105,%r105;
.loc 1 126 34
fma.rn.f32 %r29,%r99,0fb7c756b1,0fbbbd1489;
.loc 1 126 27
fma.rn.f32 %r30,%r29,%r99,0fbce9528f;
.loc 1 126 20
fma.rn.f32 %r31,%r30,%r99,0fbea66beb;
.loc 1 126 8
fma.rn.f32 %r100,%r31,%r99,0f3e0375d4;
.loc 1 127 41
fma.rn.f32 %r32,%r99,0fb684e21a,0f390aee49;
.loc 1 127 34
fma.rn.f32 %r33,%r32,%r99,0f3ba68116;
.loc 1 127 27
fma.rn.f32 %r34,%r33,%r99,0f3d852a63;
.loc 1 127 20
fma.rn.f32 %r35,%r34,%r99,0f3ecbbbce;
.loc 1 127 8
fma.rn.f32 %r101,%r35,%r99,0f3f800000;
.loc 1 128 8
div.rn.f32 %r119,%r100,%r101;
.loc 1 129 15
fma.rn.f32 %r104,%r105,%r119,%r105;
bra $L1;
$L4:
.loc 1 131 4
setp.gt.s32 %r120,%r89,1067450367;
@ %r120 bra $L7;
.loc 1 132 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r105;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r122,[%value_in];
}
.loc 1 132 8
mov.f32 %r123,0f3f800000;
sub.f32 %r96,%r122,%r123;
.loc 1 133 48
fma.rn.f32 %r37,%r96,0fbb0df9c0,0f3d1151b3;
.loc 1 133 41
fma.rn.f32 %r38,%r37,%r96,0fbde31cc2;
.loc 1 133 34
fma.rn.f32 %r39,%r38,%r96,0f3ea2fe54;
.loc 1 133 27
fma.rn.f32 %r40,%r39,%r96,0fbebe9208;
.loc 1 133 20
fma.rn.f32 %r41,%r40,%r96,0f3ed46805;
.loc 1 133 8
fma.rn.f32 %r97,%r41,%r96,0fbb1acdc6;
.loc 1 134 48
fma.rn.f32 %r42,%r96,0f3c445aa3,0f3c5f6e13;
.loc 1 134 41
fma.rn.f32 %r43,%r42,%r96,0f3e013307;
.loc 1 134 34
fma.rn.f32 %r44,%r43,%r96,0f3d931ae7;
.loc 1 134 27
fma.rn.f32 %r45,%r44,%r96,0f3f0a5785;
.loc 1 134 20
fma.rn.f32 %r46,%r45,%r96,0f3dd9f331;
.loc 1 134 8
fma.rn.f32 %r98,%r46,%r96,0f3f800000;
.loc 1 135 8
setp.lt.s32 %r124,%r88,0;
@ %r124 bra $L8;
.loc 1 135 30
div.rn.f32 %r125,%r97,%r98;
.loc 1 135 27
add.f32 %r104,%r125,0f3f58560b;
bra $L1;
$L8:
.loc 1 135 54
div.rn.f32 %r126,%r97,%r98;
.loc 1 135 51
mov.f32 %r127,0fbf58560b;
sub.f32 %r104,%r127,%r126;
bra $L1;
$L7:
.loc 1 137 5
setp.le.s32 %r128,%r89,1086324735;
@ %r128 bra $L9;
.loc 1 138 8
setp.ge.s32 %r129,%r88,0;
.loc 1 138 49
selp.f32 %r104,0f3f800000,0fbf800000,%r129;
bra $L1;
$L9:
.loc 1 140 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r105;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r131,[%value_in];
}
.loc 1 141 13
mul.f32 %r132,%r131,%r131;
.loc 1 141 5
mov.f32 %r133,0f3f800000;
div.rn.f32 %r91,%r133,%r132;
.loc 1 142 4
setp.gt.s32 %r134,%r89,1077336941;
@ %r134 bra $L10;
.loc 1 144 15
fma.rn.f32 %r50,%r91,0fc11d077e,0fc2a2932b;
.loc 1 144 8
fma.rn.f32 %r51,%r50,%r91,0fc3389ae7;
.loc 1 143 39
fma.rn.f32 %r52,%r51,%r91,0fc322658c;
.loc 1 143 32
fma.rn.f32 %r53,%r52,%r91,0fc2798057;
.loc 1 143 25
fma.rn.f32 %r54,%r53,%r91,0fc128f022;
.loc 1 143 18
fma.rn.f32 %r55,%r54,%r91,0fbf31a0b7;
.loc 1 143 7
fma.rn.f32 %r86,%r55,%r91,0fbc21a093;
.loc 1 146 22
fma.rn.f32 %r56,%r91,0fbd777f97,0f40d23f7c;
.loc 1 146 15
fma.rn.f32 %r57,%r56,%r91,0f42d9451f;
.loc 1 146 8
fma.rn.f32 %r58,%r57,%r91,0f43d6810b;
.loc 1 145 39
fma.rn.f32 %r59,%r58,%r91,0f442158c9;
.loc 1 145 32
fma.rn.f32 %r60,%r59,%r91,0f43d9486f;
.loc 1 145 25
fma.rn.f32 %r61,%r60,%r91,0f4309a863;
.loc 1 145 18
fma.rn.f32 %r62,%r61,%r91,0f419d35ce;
.loc 1 145 7
fma.rn.f32 %r87,%r62,%r91,0f3f800000;
bra $L11;
$L10:
.loc 1 149 8
fma.rn.f32 %r63,%r91,0fc3f1c275,0fc480230b;
.loc 1 148 39
fma.rn.f32 %r64,%r63,%r91,0fc41f6441;
.loc 1 148 32
fma.rn.f32 %r65,%r64,%r91,0fc320a2ea;
.loc 1 148 25
fma.rn.f32 %r66,%r65,%r91,0fc18e104b;
.loc 1 148 18
fma.rn.f32 %r67,%r66,%r91,0fbf4c9dd4;
.loc 1 148 7
fma.rn.f32 %r86,%r67,%r91,0fbc21a092;
.loc 1 151 15
fma.rn.f32 %r68,%r91,0fc1b38712,0f43ed43a7;
.loc 1 151 8
fma.rn.f32 %r69,%r68,%r91,0f451f90ce;
.loc 1 150 39
fma.rn.f32 %r70,%r69,%r91,0f4547fdbb;
.loc 1 150 32
fma.rn.f32 %r71,%r70,%r91,0f44c01759;
.loc 1 150 25
fma.rn.f32 %r72,%r71,%r91,0f43a2e571;
.loc 1 150 18
fma.rn.f32 %r73,%r72,%r91,0f41f2b459;
.loc 1 150 7
fma.rn.f32 %r87,%r73,%r91,0f3f800000;
$L11:
.loc 1 154 2
mov.b32 %r136,%r131;
and.b32 %r135,%r136,-4096;
mov.b32 %r92,%r135;
.loc 1 155 23
neg.f32 %r137,%r92;
.loc 1 155 8
fma.rn.f32 %r77,%r137,%r92,0fbf100000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r77;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r139,[%value_in];
}
.loc 1 155 60
sub.f32 %r140,%r92,%r131;
.loc 1 155 66
add.f32 %r141,%r131,%r92;
.loc 1 155 71
div.rn.f32 %r142,%r86,%r87;
.loc 1 155 43
fma.rn.f32 %r82,%r140,%r141,%r142;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r82;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r144,[%value_in];
}
.loc 1 155 5
mul.f32 %r93,%r139,%r144;
.loc 1 156 4
setp.lt.s32 %r145,%r88,0;
@ %r145 bra $L12;
.loc 1 156 24
div.rn.f32 %r146,%r93,%r131;
.loc 1 156 22
mov.f32 %r147,0f3f800000;
sub.f32 %r104,%r147,%r146;
bra $L1;
$L12:
.loc 1 156 42
div.rn.f32 %r148,%r93,%r131;
.loc 1 156 44
mov.f32 %r149,0f3f800000;
sub.f32 %r104,%r148,%r149;
$L1:
.loc 1 157 1
mov.f32 %value,%r104;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: erfcf
.visible .func (.param .f32 %value_out) erfcf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r49;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r74;
.reg .f32 %r75;
.reg .f32 %r79;
.reg .f32 %r84;
.reg .f32 %r88;
.reg .f32 %r89;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .f32 %r94;
.reg .f32 %r96;
.reg .f32 %r97;
.reg .f32 %r98;
.reg .f32 %r99;
.reg .f32 %r100;
.reg .f32 %r102;
.reg .f32 %r103;
.reg .f32 %r104;
.reg .f32 %r107;
.reg .f32 %r108;
.reg .f32 %r109;
.reg .pred %r110;
.reg .u32 %r111;
.reg .u32 %r112;
.reg .f32 %r113;
.reg .f32 %r114;
.reg .f32 %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .pred %r120;
.reg .f32 %r121;
.reg .f32 %r122;
.reg .f32 %r123;
.reg .f32 %r124;
.reg .f32 %r125;
.reg .pred %r127;
.reg .f32 %r129;
.reg .f32 %r130;
.reg .pred %r131;
.reg .f32 %r132;
.reg .f32 %r133;
.reg .f32 %r134;
.reg .f32 %r135;
.reg .pred %r136;
.reg .f32 %r138;
.reg .f32 %r139;
.reg .f32 %r140;
.reg .pred %r141;
.reg .u32 %r143;
.reg .u32 %r145;
.reg .u32 %r146;
.reg .u16 %r148;
.reg .u16 %r149;
.reg .u16 %r150;
.reg .u32 %r151;
.reg .u16 %r152;
.reg .pred %r153;
.reg .u32 %r154;
.reg .u32 %r155;
.reg .f32 %r156;
.reg .f32 %r158;
.reg .f32 %r159;
.reg .f32 %r160;
.reg .f32 %r161;
.reg .f32 %r163;
.reg .pred %r164;
.reg .f32 %r165;
.reg .f32 %r166;
.reg .pred %r167;
.reg .u32 %r168;
.reg .f64 %r169;
mov.f32 %r109,%ar0;
.loc 1 168 2
mov.b32 %r90,%r109;
.loc 1 169 5
and.b32 %r91,%r90,2147483647;
.loc 1 170 4
setp.le.s32 %r110,%r91,2139095039;
@ %r110 bra $L15;
.loc 1 172 36
shr.u32 %r111,%r90,31;
.loc 1 172 41
add.u32 %r112,%r111,%r111;
.loc 1 172 13
cvt.rn.f32.s32 %r113,%r112;
.loc 1 172 49
mov.f32 %r115,0f3f800000;
div.rn.f32 %r114,%r115,%r109;
.loc 1 172 45
add.f32 %r108,%r113,%r114;
bra $L14;
$L15:
.loc 1 175 4
setp.gt.s32 %r116,%r91,1062731775;
@ %r116 bra $L17;
.loc 1 176 8
setp.gt.s32 %r117,%r91,595591167;
@ %r117 bra $L18;
.loc 1 177 13
mov.f32 %r118,0f3f800000;
sub.f32 %r108,%r118,%r109;
bra $L14;
$L18:
.loc 1 178 8
mul.f32 %r102,%r109,%r109;
.loc 1 179 34
fma.rn.f32 %r26,%r102,0fb7c756b1,0fbbbd1489;
.loc 1 179 27
fma.rn.f32 %r27,%r26,%r102,0fbce9528f;
.loc 1 179 20
fma.rn.f32 %r28,%r27,%r102,0fbea66beb;
.loc 1 179 8
fma.rn.f32 %r103,%r28,%r102,0f3e0375d4;
.loc 1 180 41
fma.rn.f32 %r29,%r102,0fb684e21a,0f390aee49;
.loc 1 180 34
fma.rn.f32 %r30,%r29,%r102,0f3ba68116;
.loc 1 180 27
fma.rn.f32 %r31,%r30,%r102,0f3d852a63;
.loc 1 180 20
fma.rn.f32 %r32,%r31,%r102,0f3ecbbbce;
.loc 1 180 8
fma.rn.f32 %r104,%r32,%r102,0f3f800000;
.loc 1 181 8
div.rn.f32 %r119,%r103,%r104;
.loc 1 183 18
mul.f32 %r107,%r119,%r109;
.loc 1 182 8
setp.gt.s32 %r120,%r90,1048575999;
@ %r120 bra $L19;
.loc 1 183 16
add.f32 %r121,%r109,%r107;
.loc 1 183 13
mov.f32 %r122,0f3f800000;
sub.f32 %r108,%r122,%r121;
bra $L14;
$L19:
.loc 1 186 10
mov.f32 %r124,0f3f000000;
sub.f32 %r123,%r109,%r124;
.loc 1 186 5
add.f32 %r125,%r123,%r107;
.loc 1 187 22
sub.f32 %r108,%r124,%r125;
bra $L14;
$L17:
.loc 1 190 4
setp.gt.s32 %r127,%r91,1067450367;
@ %r127 bra $L20;
.loc 1 191 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r109;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r129,[%value_in];
}
.loc 1 191 8
mov.f32 %r130,0f3f800000;
sub.f32 %r98,%r129,%r130;
.loc 1 192 48
fma.rn.f32 %r36,%r98,0fbb0df9c0,0f3d1151b3;
.loc 1 192 41
fma.rn.f32 %r37,%r36,%r98,0fbde31cc2;
.loc 1 192 34
fma.rn.f32 %r38,%r37,%r98,0f3ea2fe54;
.loc 1 192 27
fma.rn.f32 %r39,%r38,%r98,0fbebe9208;
.loc 1 192 20
fma.rn.f32 %r40,%r39,%r98,0f3ed46805;
.loc 1 192 8
fma.rn.f32 %r99,%r40,%r98,0fbb1acdc6;
.loc 1 193 48
fma.rn.f32 %r41,%r98,0f3c445aa3,0f3c5f6e13;
.loc 1 193 41
fma.rn.f32 %r42,%r41,%r98,0f3e013307;
.loc 1 193 34
fma.rn.f32 %r43,%r42,%r98,0f3d931ae7;
.loc 1 193 27
fma.rn.f32 %r44,%r43,%r98,0f3f0a5785;
.loc 1 193 20
fma.rn.f32 %r45,%r44,%r98,0f3dd9f331;
.loc 1 193 8
fma.rn.f32 %r100,%r45,%r98,0f3f800000;
.loc 1 194 8
setp.lt.s32 %r131,%r90,0;
@ %r131 bra $L21;
.loc 1 195 36
div.rn.f32 %r132,%r99,%r100;
.loc 1 195 33
mov.f32 %r133,0f3e1ea7d4;
sub.f32 %r108,%r133,%r132;
bra $L14;
$L21:
.loc 1 197 12
div.rn.f32 %r134,%r99,%r100;
.loc 1 197 5
add.f32 %r135,%r134,0f3f58560b;
.loc 1 197 26
add.f32 %r108,%r135,0f3f800000;
bra $L14;
$L20:
.loc 1 200 5
setp.gt.s32 %r136,%r91,1105199103;
@ %r136 bra $L22;
.loc 1 201 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r109;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r138,[%value_in];
}
.loc 1 202 17
mul.f32 %r139,%r138,%r138;
.loc 1 202 9
mov.f32 %r140,0f3f800000;
div.rn.f32 %r94,%r140,%r139;
.loc 1 203 8
setp.gt.s32 %r141,%r91,1077336940;
@ %r141 bra $L23;
.loc 1 205 15
fma.rn.f32 %r49,%r94,0fc11d077e,0fc2a2932b;
.loc 1 205 8
fma.rn.f32 %r50,%r49,%r94,0fc3389ae7;
.loc 1 204 43
fma.rn.f32 %r51,%r50,%r94,0fc322658c;
.loc 1 204 36
fma.rn.f32 %r52,%r51,%r94,0fc2798057;
.loc 1 204 29
fma.rn.f32 %r53,%r52,%r94,0fc128f022;
.loc 1 204 22
fma.rn.f32 %r54,%r53,%r94,0fbf31a0b7;
.loc 1 204 11
fma.rn.f32 %r88,%r54,%r94,0fbc21a093;
.loc 1 207 22
fma.rn.f32 %r55,%r94,0fbd777f97,0f40d23f7c;
.loc 1 207 15
fma.rn.f32 %r56,%r55,%r94,0f42d9451f;
.loc 1 207 8
fma.rn.f32 %r57,%r56,%r94,0f43d6810b;
.loc 1 206 43
fma.rn.f32 %r58,%r57,%r94,0f442158c9;
.loc 1 206 36
fma.rn.f32 %r59,%r58,%r94,0f43d9486f;
.loc 1 206 29
fma.rn.f32 %r60,%r59,%r94,0f4309a863;
.loc 1 206 22
fma.rn.f32 %r61,%r60,%r94,0f419d35ce;
.loc 1 206 11
fma.rn.f32 %r89,%r61,%r94,0f3f800000;
bra $L24;
$L23:
.loc 1 209 8
shr.u32 %r143,%r90,31;
.loc 1 209 14
set.u32.gt.s32 %r145,%r91,1086324735;
neg.s32 %r146,%r145;
.loc 1 209 10
cvt.u16.u32 %r149,%r143;
cvt.u16.u32 %r150,%r146;
and.b16 %r148,%r149,%r150;
.loc 1 209 5
cvt.u32.u16 %r151,%r148;
cvt.u16.u8 %r152,%r151;
setp.eq.u16 %r153,%r152,0;
@ %r153 bra $L25;
$L27:
.loc 1 209 38
mov.f32 %r108,0f40000000;
bra $L14;
$L25:
.loc 1 211 8
fma.rn.f32 %r65,%r94,0fc3f1c275,0fc480230b;
.loc 1 210 43
fma.rn.f32 %r66,%r65,%r94,0fc41f6441;
.loc 1 210 36
fma.rn.f32 %r67,%r66,%r94,0fc320a2ea;
.loc 1 210 29
fma.rn.f32 %r68,%r67,%r94,0fc18e104b;
.loc 1 210 22
fma.rn.f32 %r69,%r68,%r94,0fbf4c9dd4;
.loc 1 210 11
fma.rn.f32 %r88,%r69,%r94,0fbc21a092;
.loc 1 213 15
fma.rn.f32 %r70,%r94,0fc1b38712,0f43ed43a7;
.loc 1 213 8
fma.rn.f32 %r71,%r70,%r94,0f451f90ce;
.loc 1 212 43
fma.rn.f32 %r72,%r71,%r94,0f4547fdbb;
.loc 1 212 36
fma.rn.f32 %r73,%r72,%r94,0f44c01759;
.loc 1 212 29
fma.rn.f32 %r74,%r73,%r94,0f43a2e571;
.loc 1 212 22
fma.rn.f32 %r75,%r74,%r94,0f41f2b459;
.loc 1 212 11
fma.rn.f32 %r89,%r75,%r94,0f3f800000;
$L24:
.loc 1 216 6
mov.b32 %r155,%r138;
and.b32 %r154,%r155,-4096;
mov.b32 %r96,%r154;
.loc 1 217 27
neg.f32 %r156,%r96;
.loc 1 217 12
fma.rn.f32 %r79,%r156,%r96,0fbf100000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r79;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r158,[%value_in];
}
.loc 1 218 21
sub.f32 %r159,%r96,%r138;
.loc 1 218 27
add.f32 %r160,%r138,%r96;
.loc 1 218 32
div.rn.f32 %r161,%r88,%r89;
.loc 1 218 4
fma.rn.f32 %r84,%r159,%r160,%r161;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r84;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r163,[%value_in];
}
.loc 1 217 9
mul.f32 %r97,%r158,%r163;
.loc 1 219 8
setp.le.s32 %r164,%r90,0;
@ %r164 bra $L26;
.loc 1 219 23
div.rn.f32 %r108,%r97,%r138;
bra $L14;
$L26:
.loc 1 219 44
div.rn.f32 %r165,%r97,%r138;
.loc 1 219 42
mov.f32 %r166,0f40000000;
sub.f32 %r108,%r166,%r165;
bra $L14;
$L22:
.loc 1 221 8
setp.le.s32 %r167,%r90,0;
@ %r167 bra $L27;
.loc 1 221 22
mov.u32 %r168,0;
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r168;
call (%value_in),__math_uflow,(%out_arg1);
ld.param.f64 %r169,[%value_in];
}
cvt.rn.f32.f64 %r108,%r169;
$L14:
.loc 1 223 1
mov.f32 %value,%r108;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_exp.o/ 1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1304           1612277260  0     0     100666  962       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp10f
.visible .func (.param .f32 %value_out) exp10f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_exp10.c"
// BEGIN GLOBAL FUNCTION DECL: powf
.extern .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: exp10f
.visible .func (.param .f32 %value_out) exp10f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
mov.f32 %r23,%ar0;
.loc 1 32 10
mov.f32 %r24,0f41200000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r23;
call (%value_in),powf,(%out_arg1,%out_arg2);
ld.param.f32 %r26,[%value_in];
}
.loc 1 33 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_exp2.o/1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1322           1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1344           1612277260  0     0     100666  7678      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: expm1f
.visible .func (.param .f32 %value_out) expm1f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_expm1.c"
// BEGIN GLOBAL FUNCTION DECL: __math_oflowf
.extern .func (.param .f32 %value_out) __math_oflowf (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: expm1f
.visible .func (.param .f32 %value_out) expm1f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .u32 %r46;
.reg .u32 %r50;
.reg .u32 %r54;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r57;
.reg .u32 %r58;
.reg .f32 %r59;
.reg .u32 %r60;
.reg .f32 %r61;
.reg .u32 %r62;
.reg .f32 %r64;
.reg .f32 %r67;
.reg .f32 %r68;
.reg .f32 %r69;
.reg .f32 %r70;
.reg .f32 %r71;
.reg .f32 %r72;
.reg .f32 %r73;
.reg .f32 %r75;
.reg .f32 %r84;
.reg .u32 %r90;
.reg .f32 %r91;
.reg .f32 %r92;
.reg .pred %r93;
.reg .pred %r94;
.reg .pred %r95;
.reg .pred %r96;
.reg .u32 %r98;
.reg .u32 %r99;
.reg .u32 %r101;
.reg .u32 %r102;
.reg .u16 %r104;
.reg .u16 %r105;
.reg .u16 %r106;
.reg .u32 %r107;
.reg .u16 %r108;
.reg .pred %r109;
.reg .u32 %r110;
.reg .f32 %r111;
.reg .pred %r112;
.reg .f32 %r113;
.reg .pred %r114;
.reg .pred %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .f32 %r118;
.reg .pred %r119;
.reg .f32 %r120;
.reg .f32 %r122;
.reg .pred %r123;
.reg .f32 %r124;
.reg .f32 %r125;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .pred %r128;
.reg .f32 %r129;
.reg .f32 %r130;
.reg .pred %r131;
.reg .f32 %r132;
.reg .pred %r133;
.reg .pred %r134;
.reg .f32 %r135;
.reg .f32 %r136;
.reg .f32 %r137;
.reg .u32 %r138;
.reg .pred %r139;
.reg .f32 %r140;
.reg .f32 %r141;
.reg .f32 %r142;
.reg .u32 %r143;
.reg .f32 %r144;
.reg .pred %r146;
.reg .u32 %r147;
.reg .u32 %r148;
.reg .u32 %r149;
.reg .u32 %r150;
.reg .f32 %r151;
.reg .f32 %r152;
.reg .f32 %r153;
.reg .u32 %r154;
.reg .u32 %r155;
.reg .u32 %r156;
.reg .u32 %r157;
.reg .f32 %r158;
.reg .f32 %r159;
.reg .f32 %r160;
.reg .u32 %r161;
mov.f32 %r92,%ar0;
.loc 1 52 2
mov.b32 %r62,%r92;
.loc 1 55 5
and.b32 %r60,%r62,2147483647;
.loc 1 58 4
setp.le.u32 %r93,%r60,1100331075;
@ %r93 bra $L2;
.loc 1 59 8
setp.le.u32 %r94,%r60,2139095040;
@ %r94 bra $L3;
.loc 1 60 18
add.f32 %r91,%r92,%r92;
bra $L1;
$L3:
.loc 1 61 8
setp.ne.u32 %r95,%r60,2139095040;
@ %r95 bra $L5;
.loc 1 62 21
setp.lt.s32 %r96,%r62,0;
selp.f32 %r91,0fbf800000,%r92,%r96;
bra $L1;
$L5:
.loc 1 63 13
not.b32 %r98,%r62;
shr.u32 %r99,%r98,31;
.loc 1 63 24
set.u32.gt.u32 %r101,%r60,1118925335;
neg.s32 %r102,%r101;
.loc 1 63 18
cvt.u16.u32 %r105,%r99;
cvt.u16.u32 %r106,%r102;
and.b16 %r104,%r105,%r106;
.loc 1 63 8
cvt.u32.u16 %r107,%r104;
cvt.u16.u8 %r108,%r107;
setp.eq.u16 %r109,%r108,0;
@ %r109 bra $L6;
.loc 1 64 10
mov.u32 %r110,0;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r110;
call (%value_in),__math_oflowf,(%out_arg1);
ld.param.f32 %r111,[%value_in];
}
mov.f32 %r91,%r111;
bra $L1;
$L6:
.loc 1 65 8
setp.ge.s32 %r112,%r62,0;
@ %r112 bra $L7;
.loc 1 66 7
add.f32 %r113,%r92,0f0da24260;
.loc 1 66 5
setp.lt.f32 %r114,%r113,0f00000000;
@ ! %r114 bra $L27;
bra $L23;
$L2:
.loc 1 72 4
setp.le.u32 %r115,%r60,1051816472;
@ %r115 bra $L9;
.loc 1 73 8
setp.gt.u32 %r116,%r60,1065686417;
@ %r116 bra $L10;
.loc 1 74 5
setp.lt.s32 %r117,%r62,0;
@ %r117 bra $L11;
.loc 1 75 11
mov.f32 %r118,0f3f317180;
sub.f32 %r55,%r92,%r118;
.loc 1 75 42
mov.u32 %r58,1;
.loc 1 75 28
mov.f32 %r56,0f3717f7d1;
bra $L12;
$L11:
.loc 1 77 11
add.f32 %r55,%r92,0f3f317180;
.loc 1 77 42
mov.u32 %r58,-1;
.loc 1 77 28
mov.f32 %r56,0fb717f7d1;
bra $L12;
$L10:
.loc 1 79 14
mul.f32 %r84,%r92,0f3fb8aa3b;
.loc 1 79 37
setp.ge.s32 %r119,%r62,0;
selp.f32 %r59,0f3f000000,0fbf000000,%r119;
$L13:
.loc 1 79 16
add.f32 %r120,%r59,%r84;
.loc 1 79 6
cvt.rzi.s32.f32 %r58,%r120;
.loc 1 80 6
cvt.rn.f32.s32 %r64,%r58;
.loc 1 81 6
fma.rn.f32 %r55,%r64,0fbf317180,%r92;
.loc 1 82 6
mul.f32 %r56,%r64,0f3717f7d1;
$L12:
.loc 1 84 9
sub.f32 %r92,%r55,%r56;
.loc 1 85 14
sub.f32 %r122,%r55,%r92;
.loc 1 85 9
sub.f32 %r57,%r122,%r56;
bra $L14;
$L9:
.loc 1 87 9
setp.gt.u32 %r123,%r60,855638015;
@ %r123 bra $L25;
.loc 1 88 8
add.f32 %r61,%r92,0f7149f2ca;
.loc 1 89 19
sub.f32 %r124,%r61,%r61;
.loc 1 89 15
sub.f32 %r91,%r92,%r124;
bra $L1;
$L25:
.loc 1 91 9
mov.u32 %r58,0;
$L14:
.loc 1 94 6
mul.f32 %r67,%r92,0f3f000000;
.loc 1 95 6
mul.f32 %r68,%r92,%r67;
.loc 1 96 42
fma.rn.f32 %r30,%r68,0fb457edbb,0f36867e54;
.loc 1 96 34
fma.rn.f32 %r31,%r30,%r68,0fb8a670cd;
.loc 1 96 26
fma.rn.f32 %r32,%r31,%r68,0f3ad00d01;
.loc 1 96 18
fma.rn.f32 %r33,%r32,%r68,0fbd088889;
.loc 1 96 5
fma.rn.f32 %r69,%r33,%r68,0f3f800000;
.loc 1 97 5
neg.f32 %r125,%r67;
fma.rn.f32 %r70,%r125,%r69,0f40400000;
.loc 1 98 15
sub.f32 %r34,%r69,%r70;
.loc 1 98 31
neg.f32 %r126,%r92;
fma.rn.f32 %r35,%r126,%r70,0f40c00000;
.loc 1 98 18
div.rn.f32 %r127,%r34,%r35;
.loc 1 98 5
mul.f32 %r71,%r127,%r68;
.loc 1 99 4
setp.ne.u32 %r128,%r58,0;
@ %r128 bra $L15;
.loc 1 99 26
neg.f32 %r129,%r68;
fma.rn.f32 %r37,%r92,%r71,%r129;
.loc 1 99 20
sub.f32 %r91,%r92,%r37;
bra $L1;
$L15:
.loc 1 101 16
sub.f32 %r38,%r71,%r57;
.loc 1 101 9
neg.f32 %r130,%r57;
fma.rn.f32 %r72,%r38,%r92,%r130;
.loc 1 102 8
sub.f32 %r73,%r72,%r68;
.loc 1 103 8
setp.ne.u32 %r131,%r58,-1;
@ %r131 bra $L16;
.loc 1 103 37
sub.f32 %r132,%r92,%r73;
.loc 1 103 40
fma.rn.f32 %r91,%r132,0f3f000000,0fbf000000;
bra $L1;
$L16:
.loc 1 104 14
setp.ne.u32 %r133,%r58,1;
@ %r133 bra $L17;
.loc 1 105 12
setp.lt.f32 %r134,%r92,0fbe800000;
@ ! %r134 bra $L28;
.loc 1 105 55
add.f32 %r135,%r92,0f3f000000;
.loc 1 105 52
sub.f32 %r136,%r73,%r135;
.loc 1 105 49
mul.f32 %r91,%r136,0fc0000000;
bra $L1;
$L28:
.loc 1 106 47
sub.f32 %r137,%r92,%r73;
.loc 1 106 33
fma.rn.f32 %r91,%r137,0f40000000,0f3f800000;
bra $L1;
$L17:
.loc 1 112 3
shl.b32 %r90,%r58,23;
.loc 1 108 18
add.u32 %r138,%r58,1;
.loc 1 108 9
setp.le.u32 %r139,%r138,57;
@ %r139 bra $L20;
.loc 1 110 20
sub.f32 %r140,%r73,%r92;
.loc 1 110 12
mov.f32 %r142,0f3f800000;
sub.f32 %r141,%r142,%r140;
.loc 1 112 3
mov.b32 %r143,%r141;
add.u32 %r46,%r90,%r143;
.loc 1 113 18
mov.b32 %r144,%r46;
sub.f32 %r91,%r144,%r142;
bra $L1;
$L20:
.loc 1 116 8
setp.gt.s32 %r146,%r58,22;
@ %r146 bra $L21;
.loc 1 118 10
mov.u32 %r148,16777216;
shr.s32 %r147,%r148,%r58;
mov.u32 %r150,1065353216;
sub.u32 %r149,%r150,%r147;
.loc 1 119 18
sub.f32 %r151,%r73,%r92;
.loc 1 119 12
mov.b32 %r153,%r149;
sub.f32 %r152,%r153,%r151;
.loc 1 121 3
mov.b32 %r154,%r152;
add.u32 %r50,%r90,%r154;
mov.b32 %r91,%r50;
bra $L1;
$L21:
.loc 1 124 3
mov.u32 %r156,127;
sub.u32 %r155,%r156,%r58;
shl.b32 %r157,%r155,23;
.loc 1 125 18
mov.b32 %r159,%r157;
add.f32 %r158,%r73,%r159;
.loc 1 125 12
sub.f32 %r75,%r92,%r158;
.loc 1 126 12
add.f32 %r160,%r75,0f3f800000;
.loc 1 128 3
mov.b32 %r161,%r160;
add.u32 %r54,%r90,%r161;
mov.b32 %r91,%r54;
bra $L1;
$L23:
.loc 1 62 21
mov.f32 %r91,0fbf800000;
bra $L1;
$L7:
.loc 1 79 14
mul.f32 %r84,%r92,0f3fb8aa3b;
.loc 1 79 37
mov.f32 %r59,0f3f000000;
bra $L13;
$L27:
.loc 1 79 14
mul.f32 %r84,%r92,0f3fb8aa3b;
.loc 1 79 37
mov.f32 %r59,0fbf000000;
bra $L13;
$L1:
.loc 1 132 1
mov.f32 %value,%r91;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_fabs.o/1612277259  0     0     100666  647       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fabsf
.visible .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_fabs.c"
// BEGIN GLOBAL FUNCTION DEF: fabsf
.visible .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .f32 %r25;
.reg .u32 %r26;
mov.f32 %r25,%ar0;
.loc 1 31 2
mov.b32 %r26,%r25;
and.b32 %r22,%r26,2147483647;
.loc 1 32 16
mov.b32 %value,%r22;
.loc 1 33 1
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_fdim.o/1612277260  0     0     100666  1539      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fdimf
.visible .func (.param .f32 %value_out) fdimf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_fdim.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyf
.extern .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fdimf
.visible .func (.param .f32 %value_out) fdimf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 17 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 17 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 18 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 18 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 20 24
setp.gt.f32 %r33,%r25,%r26;
@ ! %r33 bra $L10;
sub.f32 %r25,%r25,%r26;
bra $L2;
$L4:
.loc 1 18 42
mov.f32 %r25,%r26;
bra $L2;
$L10:
.loc 1 20 24
mov.f32 %r25,0f00000000;
$L2:
.loc 1 21 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}

/1362           1612277260  0     0     100666  727       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: finitef
.visible .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_finite.c"
// BEGIN GLOBAL FUNCTION DEF: finitef
.visible .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
mov.f32 %r27,%ar0;
.loc 1 31 2
mov.b32 %r23,%r27;
.loc 1 32 5
and.b32 %r29,%r23,2147483647;
.loc 1 33 10
set.u32.le.s32 %r31,%r29,2139095039;
neg.s32 %value,%r31;
.loc 1 34 1
st.param.u32 [%value_out],%value;
ret;
}

/1381           1612277259  0     0     100666  2353      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: floorf
.visible .func (.param .f32 %value_out) floorf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_floor.c"
// BEGIN GLOBAL FUNCTION DEF: floorf
.visible .func (.param .f32 %value_out) floorf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r22;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .u32 %r39;
.reg .pred %r40;
.reg .pred %r41;
.reg .f32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .pred %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .pred %r48;
.reg .f32 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .pred %r56;
mov.f32 %r38,%ar0;
.loc 1 42 2
mov.b32 %r22,%r38;
.loc 1 43 5
and.b32 %r33,%r22,2147483647;
.loc 1 44 10
shr.u32 %r39,%r33,23;
.loc 1 44 15
add.u32 %r34,%r39,-127;
.loc 1 45 4
setp.gt.s32 %r40,%r34,22;
@ %r40 bra $L2;
.loc 1 46 8
setp.ge.s32 %r41,%r34,0;
@ %r41 bra $L3;
.loc 1 47 10
add.f32 %r42,%r38,0f7149f2ca;
.loc 1 47 5
setp.gt.f32 %r43,%r42,0f00000000;
@ ! %r43 bra $L17;
.loc 1 48 9
setp.ge.s32 %r44,%r22,0;
@ %r44 bra $L10;
.loc 1 49 14
setp.eq.u32 %r45,%r33,0;
selp.f32 %r37,%r38,0fbf800000,%r45;
bra $L1;
$L3:
.loc 1 53 19
mov.u32 %r46,8388607;
shr.s32 %r35,%r46,%r34;
.loc 1 54 9
and.b32 %r47,%r22,%r35;
.loc 1 54 5
setp.eq.u32 %r48,%r47,0;
@ %r48 bra $L12;
.loc 1 55 10
add.f32 %r49,%r38,0f7149f2ca;
.loc 1 55 5
setp.gt.f32 %r50,%r49,0f00000000;
@ ! %r50 bra $L18;
.loc 1 56 9
setp.ge.s32 %r51,%r22,0;
@ %r51 bra $L8;
.loc 1 56 34
mov.u32 %r53,8388608;
shr.s32 %r52,%r53,%r34;
.loc 1 56 19
add.u32 %r22,%r52,%r22;
$L8:
.loc 1 57 14
not.b32 %r54,%r35;
.loc 1 57 10
and.b32 %r55,%r54,%r22;
.loc 1 64 2
mov.b32 %r37,%r55;
bra $L1;
$L2:
.loc 1 61 8
setp.le.u32 %r56,%r33,2139095039;
@ %r56 bra $L14;
.loc 1 61 43
add.f32 %r37,%r38,%r38;
bra $L1;
$L17:
mov.f32 %r37,%r38;
bra $L1;
$L10:
mov.f32 %r37,0f00000000;
bra $L1;
$L18:
mov.f32 %r37,%r38;
.loc 1 65 9
bra $L1;
$L12:
.loc 1 54 24
mov.f32 %r37,%r38;
bra $L1;
$L14:
mov.f32 %r37,%r38;
$L1:
.loc 1 66 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_fma.o/ 1612277260  0     0     100666  1034      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmaf
.visible .func (.param .f32 %value_out) fmaf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2);
.file 1 "../../../../../newlib/libm/common/sf_fma.c"
// BEGIN GLOBAL FUNCTION DEF: fmaf
.visible .func (.param .f32 %value_out) fmaf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .f32 %in_ar2)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %ar2;
ld.param.f32 %ar2,[%in_ar2];
.reg .f64 %r25;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r29;
.reg .f64 %r30;
.reg .f64 %r31;
.reg .f64 %r32;
mov.f32 %r27,%ar0;
mov.f32 %r28,%ar1;
mov.f32 %r29,%ar2;
.loc 1 27 20
cvt.f64.f32 %r30,%r27;
.loc 1 27 33
cvt.f64.f32 %r31,%r28;
.loc 1 27 47
cvt.f64.f32 %r32,%r29;
.loc 1 27 45
fma.rn.f64 %r25,%r30,%r31,%r32;
.loc 1 27 10
cvt.rn.f32.f64 %value,%r25;
.loc 1 28 1
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_fmax.o/1612277260  0     0     100666  1533      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmaxf
.visible .func (.param .f32 %value_out) fmaxf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_fmax.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyf
.extern .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fmaxf
.visible .func (.param .f32 %value_out) fmaxf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 17 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 17 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 19 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 19 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 22 20
setp.gt.f32 %r33,%r25,%r26;
@ %r33 bra $L5;
$L2:
mov.f32 %r24,%r26;
bra $L1;
$L4:
.loc 1 20 12
mov.f32 %r24,%r25;
bra $L1;
$L5:
mov.f32 %r24,%r25;
$L1:
.loc 1 23 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_fmin.o/1612277260  0     0     100666  1533      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fminf
.visible .func (.param .f32 %value_out) fminf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_fmin.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyf
.extern .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: fminf
.visible .func (.param .f32 %value_out) fminf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r26;
.reg .u32 %r28;
.reg .pred %r29;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
mov.f32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 17 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 17 6
setp.eq.u32 %r29,%r28,0;
@ %r29 bra $L2;
.loc 1 19 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r31,[%value_in];
}
.loc 1 19 6
setp.eq.u32 %r32,%r31,0;
@ %r32 bra $L4;
.loc 1 22 20
setp.lt.f32 %r33,%r25,%r26;
@ %r33 bra $L5;
$L2:
mov.f32 %r24,%r26;
bra $L1;
$L4:
.loc 1 20 12
mov.f32 %r24,%r25;
bra $L1;
$L5:
mov.f32 %r24,%r25;
$L1:
.loc 1 23 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

/1399           1612277260  0     0     100666  1279      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyf
.visible .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_fpclassify.c"
// BEGIN GLOBAL FUNCTION DEF: __fpclassifyf
.visible .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r26;
.reg .u32 %r27;
.reg .f32 %r28;
.reg .u32 %r29;
.reg .pred %r30;
.reg .u32 %r31;
.reg .pred %r32;
.reg .u32 %r33;
.reg .pred %r34;
.reg .u32 %r36;
mov.f32 %r28,%ar0;
.loc 1 16 9
mov.b32 %r29,%r28;
and.b32 %r26,%r29,2147483647;
.loc 1 16 6
setp.eq.u32 %r30,%r26,0;
@ %r30 bra $L3;
.loc 1 18 29
add.u32 %r31,%r26,-8388608;
.loc 1 18 11
setp.le.u32 %r32,%r31,2130706431;
@ %r32 bra $L4;
.loc 1 21 29
add.u32 %r33,%r26,-1;
.loc 1 21 11
setp.le.u32 %r34,%r33,8388606;
@ %r34 bra $L5;
.loc 1 24 14
set.u32.eq.u32 %r36,%r26,2139095040;
neg.s32 %r27,%r36;
bra $L1;
$L3:
.loc 1 17 12
mov.u32 %r27,2;
bra $L1;
$L4:
.loc 1 20 12
mov.u32 %r27,4;
bra $L1;
$L5:
.loc 1 23 12
mov.u32 %r27,3;
$L1:
.loc 1 28 1
mov.u32 %value,%r27;
st.param.u32 [%value_out],%value;
ret;
}

/1422           1612277259  0     0     100666  2106      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: frexpf
.visible .func (.param .f32 %value_out) frexpf (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/sf_frexp.c"
// BEGIN GLOBAL FUNCTION DEF: frexpf
.visible .func (.param .f32 %value_out) frexpf (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %r30;
.reg .u32 %r31;
.reg .u32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .u64 %r39;
.reg .u32 %r40;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u16 %r47;
.reg .u16 %r48;
.reg .u16 %r49;
.reg .u32 %r50;
.reg .u16 %r51;
.reg .pred %r52;
.reg .u32 %r53;
.reg .pred %r54;
.reg .f32 %r55;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r60;
mov.f32 %r38,%ar0;
mov.u64 %r39,%ar1;
.loc 1 33 2
mov.b32 %r30,%r38;
.loc 1 34 5
and.b32 %r31,%r30,2147483647;
.loc 1 35 8
mov.u32 %r40,0;
st.u32 [%r39],%r40;
.loc 1 36 5
set.u32.gt.s32 %r42,%r31,2139095039;
neg.s32 %r43,%r42;
.loc 1 36 31
set.u32.eq.u32 %r45,%r31,0;
neg.s32 %r46,%r45;
.loc 1 36 29
cvt.u16.u32 %r48,%r43;
cvt.u16.u32 %r49,%r46;
or.b16 %r47,%r48,%r49;
.loc 1 36 4
cvt.u32.u16 %r50,%r47;
cvt.u16.u8 %r51,%r50;
setp.ne.u16 %r52,%r51,0;
@ %r52 bra $L4;
.loc 1 37 5
and.b32 %r53,%r30,2139095040;
setp.ne.u32 %r54,%r53,0;
@ %r54 bra $L5;
.loc 1 38 8
mul.f32 %r55,%r38,0f4c000000;
.loc 1 39 6
mov.b32 %r30,%r55;
.loc 1 40 9
and.b32 %r31,%r30,2147483647;
mov.u32 %r36,-25;
bra $L3;
$L5:
mov.u32 %r36,%r40;
$L3:
.loc 1 43 14
shr.s32 %r56,%r31,23;
.loc 1 43 19
add.u32 %r57,%r56,-126;
.loc 1 43 8
add.u32 %r58,%r57,%r36;
st.u32 [%r39],%r58;
.loc 1 44 10
and.b32 %r59,%r30,-2139095041;
.loc 1 44 22
or.b32 %r60,%r59,1056964608;
.loc 1 45 2
mov.b32 %r37,%r60;
.loc 1 46 9
bra $L1;
$L4:
.loc 1 36 61
mov.f32 %r37,%r38;
$L1:
.loc 1 47 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}
/1440           1612277260  0     0     100666  1545      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ilogbf
.visible .func (.param .u32 %value_out) ilogbf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_ilogb.c"
// BEGIN GLOBAL FUNCTION DEF: ilogbf
.visible .func (.param .u32 %value_out) ilogbf (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u32 %r24;
.reg .u32 %r27;
.reg .u32 %r28;
.reg .f32 %r29;
.reg .pred %r30;
.reg .u32 %r31;
.reg .pred %r32;
.reg .pred %r33;
.reg .pred %r35;
.reg .pred %r36;
.reg .u32 %r37;
mov.f32 %r29,%ar0;
.loc 1 28 2
mov.b32 %r23,%r29;
.loc 1 29 5
and.b32 %r24,%r23,2147483647;
.loc 1 30 4
setp.eq.u32 %r30,%r24,0;
@ %r30 bra $L5;
.loc 1 32 4
and.b32 %r31,%r23,2139095040;
setp.ne.u32 %r32,%r31,0;
@ %r32 bra $L3;
.loc 1 33 23
shl.b32 %r27,%r24,8;
.loc 1 33 6
setp.le.s32 %r33,%r27,0;
@ %r33 bra $L6;
.loc 1 33 14
mov.u32 %r28,-126;
$L4:
.loc 1 33 46
add.u32 %r28,%r28,-1;
.loc 1 33 37
add.u32 %r27,%r27,%r27;
.loc 1 33 6
setp.gt.s32 %r35,%r27,0;
@ %r35 bra $L4;
bra $L1;
$L3:
.loc 1 39 10
setp.gt.s32 %r36,%r24,2139095039;
@ %r36 bra $L7;
.loc 1 40 17
shr.s32 %r37,%r24,23;
.loc 1 40 22
add.u32 %r28,%r37,-127;
bra $L1;
$L5:
.loc 1 31 13
mov.u32 %r28,-2147483647;
bra $L1;
$L6:
.loc 1 33 14
mov.u32 %r28,-126;
bra $L1;
$L7:
.loc 1 39 44
mov.u32 %r28,2147483647;
$L1:
.loc 1 41 1
mov.u32 %value,%r28;
st.param.u32 [%value_out],%value;
ret;
}

/1458           1612277260  0     0     100666  448       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: infinityf
.visible .func (.param .f32 %value_out) infinityf;
.file 1 "../../../../../newlib/libm/common/sf_infinity.c"
// BEGIN GLOBAL FUNCTION DEF: infinityf
.visible .func (.param .f32 %value_out) infinityf
{
.reg .f32 %value;
.loc 1 13 9
mov.f32 %value,0f7f800000;
.loc 1 14 1
st.param.f32 [%value_out],%value;
ret;
}
/1479           1612277260  0     0     100666  721       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: isinff
.visible .func (.param .u32 %value_out) isinff (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_isinf.c"
// BEGIN GLOBAL FUNCTION DEF: isinff
.visible .func (.param .u32 %value_out) isinff (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
mov.f32 %r27,%ar0;
.loc 1 19 2
mov.b32 %r23,%r27;
.loc 1 20 5
and.b32 %r29,%r23,2147483647;
.loc 1 21 9
set.u32.eq.u32 %r31,%r29,2139095040;
neg.s32 %value,%r31;
.loc 1 22 1
st.param.u32 [%value_out],%value;
ret;
}

/1497           1612277260  0     0     100666  730       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __isinff
.visible .func (.param .u32 %value_out) __isinff (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_isinff.c"
// BEGIN GLOBAL FUNCTION DEF: __isinff
.visible .func (.param .u32 %value_out) __isinff (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
mov.f32 %r27,%ar0;
.loc 1 12 2
mov.b32 %r23,%r27;
.loc 1 13 5
and.b32 %r29,%r23,2147483647;
.loc 1 14 9
set.u32.eq.u32 %r31,%r29,2139095040;
neg.s32 %value,%r31;
.loc 1 15 1
st.param.u32 [%value_out],%value;
ret;
}
/1516           1612277260  0     0     100666  721       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: isnanf
.visible .func (.param .u32 %value_out) isnanf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_isnan.c"
// BEGIN GLOBAL FUNCTION DEF: isnanf
.visible .func (.param .u32 %value_out) isnanf (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
mov.f32 %r27,%ar0;
.loc 1 30 2
mov.b32 %r23,%r27;
.loc 1 31 5
and.b32 %r29,%r23,2147483647;
.loc 1 32 9
set.u32.gt.s32 %r31,%r29,2139095040;
neg.s32 %value,%r31;
.loc 1 33 1
st.param.u32 [%value_out],%value;
ret;
}

/1534           1612277260  0     0     100666  730       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: __isnanf
.visible .func (.param .u32 %value_out) __isnanf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_isnanf.c"
// BEGIN GLOBAL FUNCTION DEF: __isnanf
.visible .func (.param .u32 %value_out) __isnanf (.param .f32 %in_ar0)
{
.reg .u32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .f32 %r27;
.reg .u32 %r29;
.reg .u32 %r31;
mov.f32 %r27,%ar0;
.loc 1 22 2
mov.b32 %r23,%r27;
.loc 1 23 5
and.b32 %r29,%r23,2147483647;
.loc 1 24 9
set.u32.gt.s32 %r31,%r29,2139095040;
neg.s32 %value,%r31;
.loc 1 25 1
st.param.u32 [%value_out],%value;
ret;
}
/1553           1612277259  0     0     100666  2804      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: ldexpf
.visible .func (.param .f32 %value_out) ldexpf (.param .f32 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/sf_ldexp.c"
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: scalbnf
.extern .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: ldexpf
.visible .func (.param .f32 %value_out) ldexpf (.param .f32 %in_ar0, .param .u32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f32 %r32;
.reg .u32 %r33;
.reg .u32 %r35;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .u16 %r43;
.reg .u16 %r44;
.reg .u32 %r45;
.reg .u16 %r46;
.reg .pred %r47;
.reg .f32 %r50;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .u16 %r59;
.reg .u16 %r60;
.reg .u16 %r61;
.reg .u32 %r62;
.reg .u16 %r63;
.reg .pred %r64;
.reg .u64 %r65;
.reg .u32 %r66;
mov.f32 %r32,%ar0;
mov.u32 %r33,%ar1;
.loc 1 26 6
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r35,[%value_in];
}
.loc 1 26 20
set.u32.eq.f32 %r37,%r32,0f00000000;
neg.s32 %r38,%r37;
.loc 1 26 4
set.u32.eq.u32 %r40,%r35,0;
neg.s32 %r41,%r40;
.loc 1 26 20
cvt.u16.u32 %r43,%r38;
cvt.u16.u32 %r44,%r41;
or.b16 %r42,%r43,%r44;
cvt.u32.u16 %r45,%r42;
cvt.u16.u8 %r46,%r45;
setp.ne.u16 %r47,%r46,0;
@ %r47 bra $L2;
.loc 1 27 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .u32 %out_arg2;
st.param.u32 [%out_arg2],%r33;
call (%value_in),scalbnf,(%out_arg1,%out_arg2);
ld.param.f32 %r50,[%value_in];
}
mov.f32 %r32,%r50;
.loc 1 28 6
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r52,[%value_in];
}
.loc 1 28 20
set.u32.eq.f32 %r54,%r32,0f00000000;
neg.s32 %r55,%r54;
.loc 1 28 4
set.u32.eq.u32 %r57,%r52,0;
neg.s32 %r58,%r57;
.loc 1 28 20
cvt.u16.u32 %r60,%r55;
cvt.u16.u32 %r61,%r58;
or.b16 %r59,%r60,%r61;
cvt.u32.u16 %r62,%r59;
cvt.u16.u8 %r63,%r62;
setp.eq.u16 %r64,%r63,0;
@ %r64 bra $L2;
.loc 1 28 41
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r65,[%value_in];
}
.loc 1 28 47
mov.u32 %r66,34;
st.u32 [%r65],%r66;
$L2:
.loc 1 30 1
mov.f32 %value,%r32;
st.param.f32 [%value_out],%value;
ret;
}
/1571           1612277260  0     0     100666  2754      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llrintf
.visible .func (.param .u64 %value_out) llrintf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_llrint.c"
// BEGIN VAR DEF: TWO23
.const .align 4 .u32 TWO23[2] =
{1258291200,3405774848 };
// BEGIN GLOBAL FUNCTION DEF: llrintf
.visible .func (.param .u64 %value_out) llrintf (.param .f32 %in_ar0)
{
.reg .u64 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r24;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .u32 %r40;
.reg .u32 %r43;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u64 %r48;
.reg .f32 %r49;
.reg .u32 %r50;
.reg .pred %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u64 %r56;
.reg .u32 %r57;
.reg .u64 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .u64 %r61;
.reg .f32 %r62;
.reg .u32 %r63;
.reg .pred %r64;
.reg .u32 %r65;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .pred %r72;
mov.f32 %r49,%ar0;
.loc 1 53 3
mov.b32 %r46,%r49;
.loc 1 59 27
shr.u32 %r50,%r46,23;
and.b32 %r24,%r50,255;
.loc 1 59 34
add.u32 %r40,%r24,-127;
.loc 1 61 6
setp.gt.s32 %r51,%r40,62;
@ %r51 bra $L2;
.loc 1 63 10
setp.ge.s32 %r52,%r40,-1;
@ %r52 bra $L3;
$L7:
.loc 1 64 16
mov.u64 %r48,0;
bra $L1;
$L3:
.loc 1 56 12
shr.u32 %r22,%r46,31;
.loc 1 65 15
setp.le.s32 %r53,%r40,22;
@ %r53 bra $L5;
.loc 1 66 39
and.b32 %r54,%r46,8388607;
.loc 1 66 51
or.b32 %r55,%r54,8388608;
.loc 1 66 18
cvt.u64.u32 %r56,%r55;
.loc 1 66 70
add.u32 %r57,%r24,-150;
.loc 1 66 16
shl.b64 %r48,%r56,%r57;
bra $L6;
$L5:
.loc 1 69 20
cvta.const.u64 %r58,TWO23;
cvt.s64.s32 %r59,%r22;
shl.b64 %r60,%r59,2;
add.u64 %r61,%r58,%r60;
ld.f32 %r30,[%r61];
.loc 1 69 25
add.f32 %r31,%r30,%r49;
.loc 1 69 13
st.f32 [%frame],%r31;
.loc 1 70 17
ld.f32 %r32,[%frame];
.loc 1 70 13
sub.f32 %r62,%r32,%r30;
.loc 1 71 11
mov.b32 %r47,%r62;
.loc 1 74 19
and.b32 %r63,%r47,2147483647;
.loc 1 74 14
setp.eq.u32 %r64,%r63,0;
@ %r64 bra $L7;
.loc 1 77 14
and.b32 %r43,%r47,8388607;
.loc 1 78 14
or.b32 %r65,%r43,8388608;
.loc 1 76 21
shr.u32 %r66,%r47,23;
.loc 1 76 28
and.b32 %r67,%r66,255;
.loc 1 79 30
mov.u32 %r70,150;
sub.u32 %r69,%r70,%r67;
.loc 1 79 23
shr.u32 %r71,%r65,%r69;
.loc 1 79 18
cvt.u64.u32 %r48,%r71;
bra $L6;
$L2:
.loc 1 84 14
cvt.rzi.s64.f32 %r48,%r49;
bra $L1;
$L6:
.loc 1 86 23
setp.eq.u32 %r72,%r22,0;
@ %r72 bra $L1;
neg.s64 %r48,%r48;
$L1:
.loc 1 87 1
mov.u64 %value,%r48;
st.param.u64 [%value_out],%value;
ret;
}
/1590           1612277260  0     0     100666  2022      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: llroundf
.visible .func (.param .u64 %value_out) llroundf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_llround.c"
// BEGIN GLOBAL FUNCTION DEF: llroundf
.visible .func (.param .u64 %value_out) llroundf (.param .f32 %in_ar0)
{
.reg .u64 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .u64 %r41;
.reg .f32 %r42;
.reg .u32 %r43;
.reg .pred %r44;
.reg .pred %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .u64 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u64 %r57;
mov.f32 %r42,%ar0;
.loc 1 23 3
mov.b32 %r37,%r42;
.loc 1 24 41
shr.u32 %r43,%r37,23;
and.b32 %r23,%r43,255;
.loc 1 24 48
add.u32 %r35,%r23,-127;
.loc 1 25 37
setp.lt.s32 %r44,%r37,0;
selp.u32 %r34,-1,1,%r44;
.loc 1 29 6
setp.gt.s32 %r45,%r35,62;
@ %r45 bra $L3;
.loc 1 31 10
setp.ge.s32 %r46,%r35,0;
@ %r46 bra $L4;
.loc 1 32 43
setp.eq.u32 %r47,%r35,-1;
selp.u32 %r34,%r34,0,%r47;
cvt.s64.s32 %r41,%r34;
bra $L1;
$L4:
.loc 1 26 5
and.b32 %r38,%r37,8388607;
.loc 1 27 5
or.b32 %r39,%r38,8388608;
.loc 1 33 15
setp.le.s32 %r48,%r35,22;
@ %r48 bra $L7;
.loc 1 34 18
cvt.u64.u32 %r49,%r39;
.loc 1 34 58
add.u32 %r50,%r23,-150;
.loc 1 34 16
shl.b64 %r33,%r49,%r50;
bra $L8;
$L7:
.loc 1 37 25
mov.u32 %r52,4194304;
shr.s32 %r51,%r52,%r35;
.loc 1 37 13
add.u32 %r53,%r51,%r39;
.loc 1 38 29
mov.u32 %r55,23;
sub.u32 %r54,%r55,%r35;
.loc 1 38 22
shr.u32 %r56,%r53,%r54;
.loc 1 38 18
cvt.u64.u32 %r33,%r56;
bra $L8;
$L3:
.loc 1 42 14
cvt.rzi.s64.f32 %r41,%r42;
bra $L1;
$L8:
.loc 1 44 15
cvt.s64.s32 %r57,%r34;
mul.lo.u64 %r41,%r57,%r33;
$L1:
.loc 1 45 1
mov.u64 %value,%r41;
st.param.u64 [%value_out],%value;
ret;
}
lib_a-sf_log.o/ 1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1610           1612277260  0     0     100666  7040      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log1pf
.visible .func (.param .f32 %value_out) log1pf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_log1p.c"
// BEGIN GLOBAL FUNCTION DECL: __math_divzerof
.extern .func (.param .f32 %value_out) __math_divzerof (.param .u32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __math_invalidf
.extern .func (.param .f32 %value_out) __math_invalidf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log1pf
.visible .func (.param .f32 %value_out) log1pf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r31;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .f32 %r42;
.reg .f32 %r43;
.reg .f32 %r44;
.reg .f32 %r45;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .u32 %r56;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .f32 %r59;
.reg .u32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .f32 %r75;
.reg .f32 %r76;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .pred %r79;
.reg .pred %r80;
.reg .pred %r81;
.reg .pred %r82;
.reg .u32 %r83;
.reg .f32 %r84;
.reg .f32 %r86;
.reg .pred %r87;
.reg .f32 %r88;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .u32 %r93;
.reg .u32 %r94;
.reg .u16 %r95;
.reg .u16 %r96;
.reg .u16 %r97;
.reg .u32 %r98;
.reg .u16 %r99;
.reg .pred %r100;
.reg .f32 %r101;
.reg .u32 %r103;
.reg .pred %r104;
.reg .f32 %r105;
.reg .pred %r106;
.reg .u32 %r107;
.reg .pred %r108;
.reg .f32 %r109;
.reg .f32 %r110;
.reg .f32 %r111;
.reg .f32 %r112;
.reg .u32 %r113;
.reg .pred %r114;
.reg .u32 %r115;
.reg .u32 %r116;
.reg .u32 %r117;
.reg .f32 %r118;
.reg .f32 %r119;
.reg .pred %r120;
.reg .pred %r121;
.reg .pred %r122;
.reg .pred %r124;
.reg .f32 %r125;
.reg .f32 %r126;
.reg .f32 %r127;
.reg .f32 %r128;
.reg .pred %r129;
.reg .f32 %r130;
.reg .f32 %r131;
.reg .f32 %r132;
.reg .f32 %r133;
.reg .f32 %r134;
mov.f32 %r78,%ar0;
.loc 1 51 2
mov.b32 %r57,%r78;
.loc 1 55 5
setp.le.s32 %r79,%r57,2139095039;
@ %r79 bra $L2;
.loc 1 55 40
add.f32 %r77,%r78,%r78;
bra $L1;
$L2:
.loc 1 56 5
setp.gt.s32 %r80,%r57,1054086102;
@ %r80 bra $L4;
.loc 1 52 5
and.b32 %r60,%r57,2147483647;
.loc 1 57 8
setp.le.s32 %r81,%r60,1065353215;
@ %r81 bra $L5;
.loc 1 58 5
setp.neu.f32 %r82,%r78,0fbf800000;
@ %r82 bra $L6;
.loc 1 59 14
mov.u32 %r83,1;
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r83;
call (%value_in),__math_divzerof,(%out_arg1);
ld.param.f32 %r84,[%value_in];
}
mov.f32 %r77,%r84;
bra $L1;
$L6:
.loc 1 61 14
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r78;
call (%value_in),__math_invalidf,(%out_arg1);
ld.param.f32 %r86,[%value_in];
}
mov.f32 %r77,%r86;
bra $L1;
$L5:
.loc 1 63 8
setp.gt.s32 %r87,%r60,822083583;
@ %r87 bra $L7;
.loc 1 64 11
add.f32 %r88,%r78,0f4c000000;
.loc 1 64 5
set.u32.gt.f32 %r90,%r88,0f00000000;
neg.s32 %r91,%r90;
.loc 1 65 14
set.u32.le.s32 %r93,%r60,612368383;
neg.s32 %r94,%r93;
cvt.u16.u32 %r96,%r91;
cvt.u16.u32 %r97,%r94;
and.b16 %r95,%r96,%r97;
cvt.u32.u16 %r98,%r95;
cvt.u16.u8 %r99,%r98;
setp.ne.u16 %r100,%r99,0;
@ %r100 bra $L19;
.loc 1 68 19
mul.f32 %r101,%r78,%r78;
.loc 1 68 16
fma.rn.f32 %r77,%r101,0fbf000000,%r78;
bra $L1;
$L7:
.loc 1 70 13
add.u32 %r103,%r57,1097468384;
.loc 1 70 8
setp.le.u32 %r104,%r103,1097468384;
@ %r104 bra $L8;
.loc 1 97 17
mul.f32 %r105,%r78,0f3f000000;
.loc 1 97 6
mul.f32 %r62,%r105,%r78;
.loc 1 71 4
mov.u32 %r56,0;
bra $L9;
$L4:
.loc 1 74 8
setp.gt.s32 %r106,%r57,1509949439;
@ %r106 bra $L10;
$L8:
.loc 1 75 6
add.f32 %r61,%r78,0f3f800000;
.loc 1 76 3
mov.b32 %r57,%r61;
.loc 1 77 18
shr.s32 %r107,%r57,23;
.loc 1 77 13
add.u32 %r56,%r107,-127;
.loc 1 79 38
setp.le.s32 %r108,%r56,0;
@ %r108 bra $L11;
.loc 1 79 35
sub.f32 %r109,%r61,%r78;
.loc 1 79 38
mov.f32 %r110,0f3f800000;
sub.f32 %r59,%r110,%r109;
bra $L12;
$L11:
.loc 1 79 43
mov.f32 %r112,0f3f800000;
sub.f32 %r111,%r61,%r112;
.loc 1 79 38
sub.f32 %r59,%r78,%r111;
$L12:
.loc 1 80 5
div.rn.f32 %r53,%r59,%r61;
bra $L13;
$L10:
.loc 1 84 18
shr.s32 %r113,%r57,23;
.loc 1 84 13
add.u32 %r56,%r113,-127;
.loc 1 85 6
mov.f32 %r53,0f00000000;
$L13:
.loc 1 87 9
and.b32 %r58,%r57,8388607;
.loc 1 88 8
setp.gt.s32 %r114,%r58,3474678;
@ %r114 bra $L14;
.loc 1 89 10
or.b32 %r115,%r58,1065353216;
mov.b32 %r54,%r115;
bra $L15;
$L14:
.loc 1 91 12
add.u32 %r56,%r56,1;
.loc 1 92 3
or.b32 %r116,%r58,1056964608;
mov.b32 %r54,%r116;
.loc 1 93 26
mov.u32 %r117,8388608;
sub.u32 %r31,%r117,%r58;
.loc 1 93 13
shr.s32 %r58,%r31,2;
$L15:
.loc 1 95 8
mov.f32 %r118,0f3f800000;
sub.f32 %r78,%r54,%r118;
.loc 1 97 17
mul.f32 %r119,%r78,0f3f000000;
.loc 1 97 6
mul.f32 %r62,%r119,%r78;
.loc 1 98 4
setp.ne.u32 %r120,%r58,0;
@ %r120 bra $L9;
.loc 1 99 14
setp.neu.f32 %r121,%r78,0f00000000;
@ %r121 bra $L16;
.loc 1 99 28
setp.eq.u32 %r122,%r56,0;
@ %r122 bra $L20;
.loc 1 100 36
cvt.rn.f32.s32 %r33,%r56;
.loc 1 100 32
fma.rn.f32 %r66,%r33,0f3717f7d1,%r53;
.loc 1 100 60
fma.rn.f32 %r77,%r33,0f3f317180,%r66;
bra $L1;
$L16:
.loc 1 101 26
fma.rn.f32 %r34,%r78,0fbf2aaaab,0f3f800000;
.loc 1 101 8
mul.f32 %r65,%r34,%r62;
.loc 1 102 8
setp.ne.u32 %r124,%r56,0;
@ %r124 bra $L17;
.loc 1 102 23
sub.f32 %r77,%r78,%r65;
bra $L1;
$L17:
.loc 1 103 20
cvt.rn.f32.s32 %r35,%r56;
.loc 1 103 41
fma.rn.f32 %r36,%r35,0f3717f7d1,%r53;
.loc 1 103 31
sub.f32 %r125,%r65,%r36;
.loc 1 103 45
sub.f32 %r126,%r125,%r78;
.loc 1 103 27
neg.f32 %r127,%r126;
fma.rn.f32 %r77,%r35,0f3f317180,%r127;
bra $L1;
$L9:
.loc 1 105 20
add.f32 %r128,%r78,0f40000000;
.loc 1 105 5
div.rn.f32 %r63,%r78,%r128;
.loc 1 106 4
mul.f32 %r64,%r63,%r63;
.loc 1 107 47
fma.rn.f32 %r40,%r64,0f3e178897,0f3e1cd04f;
.loc 1 107 40
fma.rn.f32 %r41,%r40,%r64,0f3e3a3325;
.loc 1 107 33
fma.rn.f32 %r42,%r41,%r64,0f3e638e29;
.loc 1 107 26
fma.rn.f32 %r43,%r42,%r64,0f3e924925;
.loc 1 107 19
fma.rn.f32 %r44,%r43,%r64,0f3ecccccd;
.loc 1 107 12
fma.rn.f32 %r45,%r44,%r64,0f3f2aaaab;
.loc 1 108 33
fma.rn.f32 %r75,%r45,%r64,%r62;
.loc 1 108 27
mul.f32 %r76,%r63,%r75;
.loc 1 108 4
setp.ne.u32 %r129,%r56,0;
@ %r129 bra $L18;
.loc 1 108 25
sub.f32 %r130,%r62,%r76;
.loc 1 108 19
sub.f32 %r77,%r78,%r130;
bra $L1;
$L18:
.loc 1 109 12
cvt.rn.f32.s32 %r47,%r56;
.loc 1 109 48
fma.rn.f32 %r48,%r47,0f3717f7d1,%r53;
.loc 1 109 38
add.f32 %r131,%r48,%r76;
.loc 1 109 26
sub.f32 %r132,%r62,%r131;
.loc 1 109 53
sub.f32 %r133,%r132,%r78;
.loc 1 109 19
neg.f32 %r134,%r133;
fma.rn.f32 %r77,%r47,0f3f317180,%r134;
bra $L1;
$L19:
.loc 1 66 14
mov.f32 %r77,%r78;
bra $L1;
$L20:
.loc 1 99 42
mov.f32 %r77,0f00000000;
$L1:
.loc 1 110 1
mov.f32 %value,%r77;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_log2.o/1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1628           1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1650           1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-sf_logb.o/1612277260  0     0     100666  1859      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: logbf
.visible .func (.param .f32 %value_out) logbf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_logb.c"
// BEGIN GLOBAL FUNCTION DEF: logbf
.visible .func (.param .f32 %value_out) logbf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r24;
.reg .u32 %r25;
.reg .u32 %r28;
.reg .u32 %r29;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .pred %r32;
.reg .f32 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .pred %r36;
.reg .pred %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .u32 %r41;
.reg .u32 %r42;
mov.f32 %r31,%ar0;
.loc 1 33 2
mov.b32 %r24,%r31;
.loc 1 34 5
and.b32 %r25,%r24,2147483647;
.loc 1 35 4
setp.ne.u32 %r32,%r25,0;
@ %r32 bra $L2;
.loc 1 39 13
mov.f32 %r33,0fbf800000;
div.rn.f32 %r30,%r33,0f00000000;
bra $L1;
$L2:
.loc 1 41 4
and.b32 %r34,%r24,2139095040;
setp.ne.u32 %r35,%r34,0;
@ %r35 bra $L4;
.loc 1 42 23
shl.b32 %r29,%r25,8;
.loc 1 42 6
setp.le.s32 %r36,%r29,0;
@ %r36 bra $L7;
.loc 1 42 14
mov.u32 %r28,-126;
$L6:
.loc 1 42 46
add.u32 %r28,%r28,-1;
.loc 1 42 37
add.u32 %r29,%r29,%r29;
.loc 1 42 6
setp.gt.s32 %r38,%r29,0;
@ %r38 bra $L6;
.loc 1 43 13
cvt.rn.f32.s32 %r30,%r28;
bra $L1;
$L7:
.loc 1 42 6
mov.f32 %r30,0fc2fc0000;
.loc 1 43 13
bra $L1;
$L4:
.loc 1 45 10
setp.eq.u32 %r39,%r25,2139095040;
@ %r39 bra $L8;
.loc 1 46 10
setp.gt.s32 %r40,%r25,2139095040;
@ %r40 bra $L9;
.loc 1 47 26
shr.s32 %r41,%r25,23;
.loc 1 47 31
add.u32 %r42,%r41,-127;
.loc 1 47 14
cvt.rn.f32.s32 %r30,%r42;
bra $L1;
$L8:
.loc 1 45 45
mov.f32 %r30,0f7f800000;
bra $L1;
$L9:
.loc 1 46 40
mov.f32 %r30,%r31;
$L1:
.loc 1 48 1
mov.f32 %value,%r30;
st.param.f32 [%value_out],%value;
ret;
}

/1671           1612277260  0     0     100666  2791      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lrintf
.visible .func (.param .u64 %value_out) lrintf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_lrint.c"
// BEGIN VAR DEF: TWO23
.const .align 4 .u32 TWO23[2] =
{1258291200,3405774848 };
// BEGIN GLOBAL FUNCTION DEF: lrintf
.visible .func (.param .u64 %value_out) lrintf (.param .f32 %in_ar0)
{
.reg .u64 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r24;
.reg .f32 %r30;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .u32 %r41;
.reg .u32 %r44;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u64 %r49;
.reg .f32 %r50;
.reg .u32 %r51;
.reg .pred %r52;
.reg .pred %r53;
.reg .pred %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u64 %r57;
.reg .u32 %r58;
.reg .u64 %r59;
.reg .u64 %r60;
.reg .u64 %r61;
.reg .u64 %r62;
.reg .f32 %r63;
.reg .u64 %r64;
.reg .u64 %r65;
.reg .pred %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .u32 %r71;
.reg .u32 %r72;
.reg .u32 %r73;
.reg .pred %r74;
mov.f32 %r50,%ar0;
.loc 1 53 3
mov.b32 %r47,%r50;
.loc 1 59 27
shr.u32 %r51,%r47,23;
and.b32 %r24,%r51,255;
.loc 1 59 34
add.u32 %r41,%r24,-127;
.loc 1 61 6
setp.gt.s32 %r52,%r41,62;
@ %r52 bra $L2;
.loc 1 63 10
setp.ge.s32 %r53,%r41,-1;
@ %r53 bra $L3;
$L7:
.loc 1 64 16
mov.u64 %r49,0;
bra $L1;
$L3:
.loc 1 56 12
shr.u32 %r22,%r47,31;
.loc 1 65 15
setp.le.s32 %r54,%r41,22;
@ %r54 bra $L5;
.loc 1 66 34
and.b32 %r55,%r47,8388607;
.loc 1 66 46
or.b32 %r56,%r55,8388608;
.loc 1 66 18
cvt.u64.u32 %r57,%r56;
.loc 1 66 65
add.u32 %r58,%r24,-150;
.loc 1 66 16
shl.b64 %r49,%r57,%r58;
bra $L6;
$L5:
.loc 1 69 20
cvta.const.u64 %r59,TWO23;
cvt.s64.s32 %r60,%r22;
shl.b64 %r61,%r60,2;
add.u64 %r62,%r59,%r61;
ld.f32 %r30,[%r62];
.loc 1 69 25
add.f32 %r31,%r30,%r50;
.loc 1 69 13
st.f32 [%frame],%r31;
.loc 1 70 17
ld.f32 %r32,[%frame];
.loc 1 70 13
sub.f32 %r63,%r32,%r30;
.loc 1 71 11
mov.b32 %r48,%r63;
.loc 1 74 19
cvt.u64.u32 %r64,%r48;
and.b64 %r65,%r64,-2147483649;
.loc 1 74 14
setp.eq.u64 %r66,%r65,0;
@ %r66 bra $L7;
.loc 1 77 14
and.b32 %r44,%r48,8388607;
.loc 1 78 14
or.b32 %r67,%r44,8388608;
.loc 1 76 21
shr.u32 %r68,%r48,23;
.loc 1 76 28
and.b32 %r69,%r68,255;
.loc 1 79 30
mov.u32 %r72,150;
sub.u32 %r71,%r72,%r69;
.loc 1 79 23
shr.u32 %r73,%r67,%r71;
.loc 1 79 18
cvt.u64.u32 %r49,%r73;
bra $L6;
$L2:
.loc 1 84 14
cvt.rzi.s64.f32 %r49,%r50;
bra $L1;
$L6:
.loc 1 86 23
setp.eq.u32 %r74,%r22,0;
@ %r74 bra $L1;
neg.s64 %r49,%r49;
$L1:
.loc 1 87 1
mov.u64 %value,%r49;
st.param.u64 [%value_out],%value;
ret;
}

/1689           1612277260  0     0     100666  2017      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lroundf
.visible .func (.param .u64 %value_out) lroundf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_lround.c"
// BEGIN GLOBAL FUNCTION DEF: lroundf
.visible .func (.param .u64 %value_out) lroundf (.param .f32 %in_ar0)
{
.reg .u64 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r23;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .u64 %r41;
.reg .f32 %r42;
.reg .u32 %r43;
.reg .pred %r44;
.reg .pred %r45;
.reg .pred %r46;
.reg .pred %r47;
.reg .pred %r48;
.reg .u64 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u64 %r57;
mov.f32 %r42,%ar0;
.loc 1 26 3
mov.b32 %r37,%r42;
.loc 1 27 41
shr.u32 %r43,%r37,23;
and.b32 %r23,%r43,255;
.loc 1 27 48
add.u32 %r35,%r23,-127;
.loc 1 28 37
setp.lt.s32 %r44,%r37,0;
selp.u32 %r34,-1,1,%r44;
.loc 1 32 6
setp.gt.s32 %r45,%r35,62;
@ %r45 bra $L3;
.loc 1 34 10
setp.ge.s32 %r46,%r35,0;
@ %r46 bra $L4;
.loc 1 35 43
setp.eq.u32 %r47,%r35,-1;
selp.u32 %r34,%r34,0,%r47;
cvt.s64.s32 %r41,%r34;
bra $L1;
$L4:
.loc 1 29 5
and.b32 %r38,%r37,8388607;
.loc 1 30 5
or.b32 %r39,%r38,8388608;
.loc 1 36 15
setp.le.s32 %r48,%r35,22;
@ %r48 bra $L7;
.loc 1 37 18
cvt.u64.u32 %r49,%r39;
.loc 1 37 53
add.u32 %r50,%r23,-150;
.loc 1 37 16
shl.b64 %r33,%r49,%r50;
bra $L8;
$L7:
.loc 1 40 25
mov.u32 %r52,4194304;
shr.s32 %r51,%r52,%r35;
.loc 1 40 13
add.u32 %r53,%r51,%r39;
.loc 1 41 29
mov.u32 %r55,23;
sub.u32 %r54,%r55,%r35;
.loc 1 41 22
shr.u32 %r56,%r53,%r54;
.loc 1 41 18
cvt.u64.u32 %r33,%r56;
bra $L8;
$L3:
.loc 1 45 14
cvt.rzi.s64.f32 %r41,%r42;
bra $L1;
$L8:
.loc 1 47 15
cvt.s64.s32 %r57,%r34;
mul.lo.u64 %r41,%r57,%r33;
$L1:
.loc 1 48 1
mov.u64 %value,%r41;
st.param.u64 [%value_out],%value;
ret;
}

lib_a-sf_modf.o/1612277260  0     0     100666  2395      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: modff
.visible .func (.param .f32 %value_out) modff (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_modf.c"
// BEGIN GLOBAL FUNCTION DECL: __fpclassifyf
.extern .func (.param .u32 %value_out) __fpclassifyf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: modff
.visible .func (.param .f32 %value_out) modff (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f32 %r31;
.reg .u32 %r33;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .u64 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .u32 %r45;
.reg .f32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .pred %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r54;
.reg .pred %r55;
.reg .u32 %r56;
mov.f32 %r39,%ar0;
mov.u64 %r40,%ar1;
.loc 1 27 2
mov.b32 %r33,%r39;
.loc 1 28 11
shr.s32 %r41,%r33,23;
.loc 1 28 16
and.b32 %r42,%r41,255;
.loc 1 28 5
add.u32 %r36,%r42,-127;
.loc 1 29 4
setp.gt.s32 %r43,%r36,22;
@ %r43 bra $L2;
.loc 1 30 8
setp.ge.s32 %r44,%r36,0;
@ %r44 bra $L3;
.loc 1 31 10
and.b32 %r45,%r33,-2147483648;
mov.b32 %r46,%r45;
st.f32 [%r40],%r46;
.loc 1 32 10
mov.f32 %r38,%r39;
bra $L1;
$L3:
.loc 1 34 19
mov.u32 %r47,8388607;
shr.s32 %r37,%r47,%r36;
.loc 1 35 9
and.b32 %r48,%r33,%r37;
.loc 1 35 5
setp.ne.u32 %r49,%r48,0;
@ %r49 bra $L5;
.loc 1 36 13
st.f32 [%r40],%r39;
.loc 1 37 7
and.b32 %r50,%r33,-2147483648;
mov.b32 %r38,%r50;
.loc 1 38 14
bra $L1;
$L5:
.loc 1 40 7
not.b32 %r51,%r37;
and.b32 %r52,%r51,%r33;
mov.b32 %r31,%r52;
st.f32 [%r40],%r31;
.loc 1 41 16
sub.f32 %r38,%r39,%r31;
bra $L1;
$L2:
.loc 1 45 12
st.f32 [%r40],%r39;
.loc 1 46 10
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r39;
call (%value_in),__fpclassifyf,(%out_arg1);
ld.param.u32 %r54,[%value_in];
}
.loc 1 46 9
setp.ne.u32 %r55,%r54,0;
@ %r55 bra $L6;
.loc 1 46 54
add.f32 %r38,%r39,%r39;
.loc 1 46 51
st.f32 [%r40],%r38;
bra $L1;
$L6:
.loc 1 47 6
and.b32 %r56,%r33,-2147483648;
mov.b32 %r38,%r56;
$L1:
.loc 1 50 1
mov.f32 %value,%r38;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_nan.o/ 1612277260  0     0     100666  514       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nanf
.visible .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_nan.c"
// BEGIN GLOBAL FUNCTION DEF: nanf
.visible .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0)
{
.reg .f32 %value;
.reg .u64 %ar0;
ld.param.u64 %ar0,[%in_ar0];
.loc 1 17 9
mov.f32 %value,0f7fc00000;
.loc 1 18 1
st.param.f32 [%value_out],%value;
ret;
}
/1708           1612277260  0     0     100666  855       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nearbyintf
.visible .func (.param .f32 %value_out) nearbyintf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_nearbyint.c"
// BEGIN GLOBAL FUNCTION DECL: rintf
.extern .func (.param .f32 %value_out) rintf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: nearbyintf
.visible .func (.param .f32 %value_out) nearbyintf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r25;
mov.f32 %r23,%ar0;
.loc 1 23 10
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
call (%value_in),rintf,(%out_arg1);
ld.param.f32 %r25,[%value_in];
}
.loc 1 24 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}

/1730           1612277260  0     0     100666  3069      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: nextafterf
.visible .func (.param .f32 %value_out) nextafterf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_nextafter.c"
// BEGIN GLOBAL FUNCTION DEF: nextafterf
.visible .func (.param .f32 %value_out) nextafterf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r30;
.reg .u32 %r31;
.reg .u32 %r33;
.reg .u32 %r37;
.reg .f32 %r38;
.reg .f32 %r39;
.reg .f32 %r40;
.reg .f32 %r41;
.reg .u32 %r42;
.reg .u32 %r44;
.reg .u32 %r45;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u16 %r49;
.reg .u16 %r50;
.reg .u16 %r51;
.reg .u32 %r52;
.reg .u16 %r53;
.reg .pred %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .u32 %r57;
.reg .u32 %r58;
.reg .pred %r59;
.reg .pred %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u16 %r69;
.reg .u16 %r70;
.reg .u16 %r71;
.reg .u32 %r72;
.reg .u16 %r73;
.reg .pred %r74;
.reg .u32 %r75;
.reg .pred %r76;
mov.f32 %r40,%ar0;
mov.f32 %r41,%ar1;
.loc 1 27 2
mov.b32 %r31,%r40;
.loc 1 28 2
mov.b32 %r37,%r41;
.loc 1 29 5
and.b32 %r33,%r31,2147483647;
.loc 1 30 5
and.b32 %r42,%r37,2147483647;
.loc 1 33 5
set.u32.gt.s32 %r44,%r42,2139095040;
neg.s32 %r45,%r44;
.loc 1 32 5
set.u32.gt.s32 %r47,%r33,2139095040;
neg.s32 %r48,%r47;
.loc 1 32 26
cvt.u16.u32 %r50,%r45;
cvt.u16.u32 %r51,%r48;
or.b16 %r49,%r50,%r51;
.loc 1 32 4
cvt.u32.u16 %r52,%r49;
cvt.u16.u8 %r53,%r52;
setp.eq.u16 %r54,%r53,0;
@ %r54 bra $L2;
.loc 1 34 13
add.f32 %r39,%r40,%r41;
bra $L1;
$L2:
.loc 1 35 4
setp.eq.f32 %r55,%r40,%r41;
@ %r55 bra $L10;
.loc 1 36 4
setp.ne.u32 %r56,%r33,0;
@ %r56 bra $L4;
.loc 1 37 6
and.b32 %r57,%r37,-2147483648;
or.b32 %r58,%r57,1;
mov.b32 %r38,%r58;
.loc 1 38 8
mul.f32 %r39,%r38,%r38;
.loc 1 39 8
setp.eq.f32 %r59,%r38,%r39;
.loc 1 39 37
selp.f32 %r39,%r39,%r38,%r59;
bra $L1;
$L4:
.loc 1 41 4
setp.lt.s32 %r60,%r31,0;
@ %r60 bra $L5;
.loc 1 42 8
setp.le.s32 %r61,%r31,%r37;
@ %r61 bra $L6;
.loc 1 43 6
add.u32 %r30,%r31,-1;
bra $L7;
$L6:
.loc 1 45 6
add.u32 %r30,%r31,1;
bra $L7;
$L5:
.loc 1 48 11
not.b32 %r63,%r37;
shr.u32 %r64,%r63,31;
.loc 1 48 18
set.u32.gt.s32 %r66,%r31,%r37;
neg.s32 %r67,%r66;
.loc 1 48 14
cvt.u16.u32 %r70,%r64;
cvt.u16.u32 %r71,%r67;
or.b16 %r69,%r70,%r71;
.loc 1 48 8
cvt.u32.u16 %r72,%r69;
cvt.u16.u8 %r73,%r72;
setp.eq.u16 %r74,%r73,0;
@ %r74 bra $L8;
.loc 1 49 6
add.u32 %r30,%r31,-1;
bra $L9;
$L8:
.loc 1 51 6
add.u32 %r30,%r31,1;
$L7:
.loc 1 54 5
and.b32 %r75,%r30,2139095040;
.loc 1 55 4
setp.ne.u32 %r76,%r75,2139095040;
@ %r76 bra $L9;
.loc 1 55 31
add.f32 %r39,%r40,%r40;
bra $L1;
$L9:
.loc 1 59 10
mov.b32 %r39,%r30;
bra $L1;
$L10:
.loc 1 35 18
mov.f32 %r39,%r40;
$L1:
.loc 1 65 1
mov.f32 %value,%r39;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_pow.o/ 1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1752           1612277260  0     0     100666  962       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: pow10f
.visible .func (.param .f32 %value_out) pow10f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_pow10.c"
// BEGIN GLOBAL FUNCTION DECL: powf
.extern .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: pow10f
.visible .func (.param .f32 %value_out) pow10f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
mov.f32 %r23,%ar0;
.loc 1 32 10
mov.f32 %r24,0f41200000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r23;
call (%value_in),powf,(%out_arg1,%out_arg2);
ld.param.f32 %r26,[%value_in];
}
.loc 1 33 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
/1770           1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1796           1612277260  0     0     100666  8423      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remquof
.visible .func (.param .f32 %value_out) remquof (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/common/sf_remquo.c"
// BEGIN VAR DEF: Zero
.const .align 4 .u32 Zero[2] =
{0,2147483648 };
// BEGIN GLOBAL FUNCTION DEF: remquof
.visible .func (.param .f32 %value_out) remquof (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u64 %in_ar2)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .u32 %r23;
.reg .f32 %r26;
.reg .u32 %r31;
.reg .u32 %r32;
.reg .u32 %r37;
.reg .f32 %r40;
.reg .f32 %r42;
.reg .u32 %r44;
.reg .f32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u32 %r50;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .u32 %r58;
.reg .u32 %r59;
.reg .u32 %r61;
.reg .u32 %r64;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u32 %r70;
.reg .u32 %r71;
.reg .f32 %r73;
.reg .u32 %r75;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .f32 %r79;
.reg .u64 %r80;
.reg .u32 %r82;
.reg .u32 %r83;
.reg .u32 %r85;
.reg .u32 %r86;
.reg .u16 %r87;
.reg .u16 %r88;
.reg .u16 %r89;
.reg .u32 %r91;
.reg .u32 %r92;
.reg .u16 %r94;
.reg .u16 %r96;
.reg .u32 %r97;
.reg .u16 %r98;
.reg .pred %r99;
.reg .u32 %r100;
.reg .pred %r101;
.reg .pred %r102;
.reg .u32 %r103;
.reg .u64 %r104;
.reg .u32 %r105;
.reg .u64 %r106;
.reg .u64 %r107;
.reg .u64 %r108;
.reg .u32 %r109;
.reg .pred %r110;
.reg .pred %r111;
.reg .pred %r113;
.reg .u32 %r114;
.reg .u32 %r115;
.reg .pred %r116;
.reg .pred %r117;
.reg .pred %r119;
.reg .u32 %r120;
.reg .pred %r121;
.reg .u32 %r122;
.reg .u32 %r123;
.reg .u32 %r125;
.reg .u32 %r126;
.reg .pred %r127;
.reg .pred %r128;
.reg .pred %r132;
.reg .pred %r133;
.reg .pred %r134;
.reg .pred %r135;
.reg .pred %r136;
.reg .u64 %r137;
.reg .u32 %r138;
.reg .u64 %r139;
.reg .u64 %r140;
.reg .u64 %r141;
.reg .pred %r143;
.reg .u32 %r145;
.reg .u32 %r146;
.reg .u32 %r147;
.reg .u32 %r148;
.reg .pred %r149;
.reg .pred %r150;
.reg .pred %r151;
.reg .u32 %r152;
.reg .pred %r153;
.reg .pred %r154;
.reg .pred %r155;
.reg .u32 %r156;
.reg .pred %r157;
.reg .u32 %r158;
.reg .pred %r159;
.reg .pred %r161;
mov.f32 %r78,%ar0;
mov.f32 %r79,%ar1;
mov.u64 %r80,%ar2;
.loc 1 42 2
mov.b32 %r53,%r78;
.loc 1 43 2
mov.b32 %r54,%r79;
.loc 1 46 5
and.b32 %r48,%r53,2147483647;
.loc 1 47 5
and.b32 %r56,%r54,2147483647;
.loc 1 50 7
set.u32.eq.u32 %r82,%r56,0;
neg.s32 %r83,%r82;
.loc 1 50 26
set.u32.gt.s32 %r85,%r56,2139095040;
neg.s32 %r86,%r85;
cvt.u16.u32 %r88,%r83;
cvt.u16.u32 %r89,%r86;
or.b16 %r87,%r88,%r89;
.loc 1 50 14
set.u32.gt.s32 %r91,%r48,2139095039;
neg.s32 %r92,%r91;
.loc 1 50 26
cvt.u16.u32 %r96,%r92;
or.b16 %r94,%r87,%r96;
cvt.u32.u16 %r97,%r94;
cvt.u16.u8 %r98,%r97;
setp.eq.u16 %r99,%r98,0;
@ %r99 bra $L2;
.loc 1 51 11
mov.u32 %r100,0;
st.u32 [%r80],%r100;
.loc 1 52 15
mul.f32 %r26,%r78,%r79;
.loc 1 52 18
div.rn.f32 %r77,%r26,%r26;
bra $L1;
$L2:
.loc 1 44 12
xor.b32 %r23,%r53,%r54;
.loc 1 45 5
and.b32 %r55,%r53,-2147483648;
.loc 1 54 4
setp.lt.s32 %r101,%r48,%r56;
@ %r101 bra $L34;
.loc 1 57 11
setp.ne.u32 %r102,%r48,%r56;
@ %r102 bra $L5;
.loc 1 58 11
mov.u32 %r103,1;
st.u32 [%r80],%r103;
.loc 1 59 17
cvta.const.u64 %r104,Zero;
.loc 1 59 32
shr.u32 %r105,%r55,31;
.loc 1 59 17
cvt.u64.u32 %r106,%r105;
shl.b64 %r107,%r106,2;
add.u64 %r108,%r104,%r107;
ld.f32 %r77,[%r108];
bra $L1;
$L5:
.loc 1 63 4
and.b32 %r109,%r53,2139095040;
setp.ne.u32 %r110,%r109,0;
@ %r110 bra $L6;
.loc 1 64 22
shl.b32 %r59,%r48,8;
.loc 1 64 6
setp.le.s32 %r111,%r59,0;
@ %r111 bra $L35;
.loc 1 64 14
mov.u32 %r58,-126;
$L8:
.loc 1 64 47
add.u32 %r58,%r58,-1;
.loc 1 64 38
add.u32 %r59,%r59,%r59;
.loc 1 64 6
setp.gt.s32 %r113,%r59,0;
@ %r113 bra $L8;
bra $L7;
$L6:
.loc 1 65 17
shr.s32 %r114,%r48,23;
.loc 1 65 12
add.u32 %r58,%r114,-127;
bra $L7;
$L35:
.loc 1 64 14
mov.u32 %r58,-126;
$L7:
.loc 1 68 4
and.b32 %r115,%r54,2139095040;
setp.ne.u32 %r116,%r115,0;
@ %r116 bra $L9;
.loc 1 69 22
shl.b32 %r61,%r56,8;
.loc 1 69 6
setp.le.s32 %r117,%r61,0;
@ %r117 bra $L36;
.loc 1 69 14
mov.u32 %r70,-126;
$L11:
.loc 1 69 47
add.u32 %r70,%r70,-1;
.loc 1 69 38
add.u32 %r61,%r61,%r61;
.loc 1 69 6
setp.gt.s32 %r119,%r61,0;
@ %r119 bra $L11;
bra $L10;
$L9:
.loc 1 70 17
shr.s32 %r120,%r56,23;
.loc 1 70 12
add.u32 %r70,%r120,-127;
bra $L10;
$L36:
.loc 1 69 14
mov.u32 %r70,-126;
$L10:
.loc 1 73 4
setp.lt.s32 %r121,%r58,-126;
@ %r121 bra $L12;
.loc 1 74 33
and.b32 %r31,%r53,8388607;
.loc 1 74 9
or.b32 %r47,%r31,8388608;
bra $L13;
$L12:
.loc 1 76 8
mov.u32 %r123,-126;
sub.u32 %r122,%r123,%r58;
.loc 1 77 9
shl.b32 %r47,%r48,%r122;
$L13:
.loc 1 79 4
setp.lt.s32 %r161,%r70,-126;
@ %r161 bra $L14;
.loc 1 80 33
and.b32 %r32,%r54,8388607;
.loc 1 80 9
or.b32 %r49,%r32,8388608;
bra $L15;
$L14:
.loc 1 82 8
mov.u32 %r126,-126;
sub.u32 %r125,%r126,%r70;
.loc 1 83 9
shl.b32 %r49,%r56,%r125;
$L15:
.loc 1 87 4
sub.u32 %r64,%r58,%r70;
.loc 1 89 9
add.u32 %r66,%r64,-1;
.loc 1 89 7
setp.eq.u32 %r127,%r64,0;
@ %r127 bra $L37;
.loc 1 88 4
mov.u32 %r50,0;
$L19:
.loc 1 90 8
sub.u32 %r71,%r47,%r49;
.loc 1 91 8
setp.ge.s32 %r128,%r71,0;
@ %r128 bra $L17;
.loc 1 91 18
add.u32 %r47,%r47,%r47;
bra $L18;
$L17:
.loc 1 92 15
add.u32 %r47,%r71,%r71;
.loc 1 92 27
add.u32 %r50,%r50,1;
$L18:
.loc 1 93 8
add.u32 %r50,%r50,%r50;
.loc 1 89 9
add.u32 %r66,%r66,-1;
.loc 1 89 7
setp.ne.u32 %r132,%r66,-1;
@ %r132 bra $L19;
bra $L16;
$L37:
.loc 1 88 4
mov.u32 %r50,%r64;
$L16:
.loc 1 95 4
sub.u32 %r67,%r47,%r49;
.loc 1 96 4
setp.lt.s32 %r133,%r67,0;
@ %r133 bra $L20;
.loc 1 96 20
add.u32 %r50,%r50,1;
mov.u32 %r47,%r67;
$L20:
.loc 1 99 4
setp.eq.u32 %r134,%r47,0;
@ %r134 bra $L21;
.loc 1 103 7
setp.le.s32 %r135,%r47,8388607;
@ %r135 bra $L22;
bra $L23;
$L21:
.loc 1 100 23
setp.ge.s32 %r136,%r23,0;
@ %r136 bra $L24;
.loc 1 100 20
neg.s32 %r51,%r50;
bra $L25;
$L24:
.loc 1 100 23
mov.u32 %r51,%r50;
$L25:
.loc 1 100 11
st.u32 [%r80],%r51;
.loc 1 101 17
cvta.const.u64 %r137,Zero;
.loc 1 101 32
shr.u32 %r138,%r55,31;
.loc 1 101 17
cvt.u64.u32 %r139,%r138;
shl.b64 %r140,%r139,2;
add.u64 %r141,%r137,%r140;
ld.f32 %r77,[%r141];
bra $L1;
$L22:
.loc 1 104 9
add.u32 %r47,%r47,%r47;
.loc 1 105 9
add.u32 %r70,%r70,-1;
.loc 1 103 7
setp.le.s32 %r143,%r47,8388607;
@ %r143 bra $L22;
setp.lt.s32 %r161,%r70,-126;
$L23:
.loc 1 107 4
@ %r161 bra $L26;
.loc 1 108 15
add.u32 %r37,%r47,-8388608;
.loc 1 108 32
add.u32 %r145,%r70,127;
.loc 1 108 37
shl.b32 %r146,%r145,23;
.loc 1 108 9
or.b32 %r48,%r146,%r37;
bra $L4;
$L26:
.loc 1 110 8
mov.u32 %r148,-126;
sub.u32 %r147,%r148,%r70;
.loc 1 111 9
shr.s32 %r48,%r47,%r147;
bra $L4;
$L34:
.loc 1 55 8
mov.u32 %r50,0;
$L4:
.loc 1 114 2
mov.b32 %r46,%r48;
.loc 1 115 4
abs.f32 %r73,%r79;
.loc 1 116 5
setp.lt.f32 %r149,%r73,0f01000000;
@ ! %r149 bra $L50;
.loc 1 117 11
add.f32 %r40,%r46,%r46;
.loc 1 117 9
setp.gt.f32 %r150,%r40,%r73;
@ %r150 bra $L29;
.loc 1 117 16
setp.neu.f32 %r151,%r40,%r73;
@ %r151 bra $L30;
.loc 1 117 33
and.b32 %r152,%r50,1;
.loc 1 117 27
setp.eq.u32 %r153,%r152,0;
@ %r153 bra $L30;
$L29:
.loc 1 118 4
add.u32 %r50,%r50,1;
.loc 1 119 4
sub.f32 %r46,%r46,%r73;
bra $L30;
$L50:
.loc 1 121 19
mul.f32 %r42,%r73,0f3f000000;
.loc 1 121 12
setp.lt.f32 %r154,%r42,%r46;
@ %r154 bra $L31;
.loc 1 121 22
setp.neu.f32 %r155,%r42,%r46;
@ %r155 bra $L30;
.loc 1 121 42
and.b32 %r156,%r50,1;
.loc 1 121 36
setp.eq.u32 %r157,%r156,0;
@ %r157 bra $L30;
$L31:
.loc 1 122 7
add.u32 %r50,%r50,1;
.loc 1 123 7
sub.f32 %r46,%r46,%r73;
$L30:
.loc 1 126 2
mov.b32 %r158,%r46;
xor.b32 %r44,%r55,%r158;
mov.b32 %r77,%r44;
.loc 1 127 4
and.b32 %r75,%r50,2147483647;
.loc 1 128 19
setp.ge.s32 %r159,%r23,0;
@ %r159 bra $L32;
.loc 1 128 16
neg.s32 %r52,%r75;
bra $L33;
$L32:
.loc 1 128 19
mov.u32 %r52,%r75;
$L33:
.loc 1 128 7
st.u32 [%r80],%r52;
$L1:
.loc 1 130 1
mov.f32 %value,%r77;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_rint.o/1612277260  0     0     100666  3488      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: rintf
.visible .func (.param .f32 %value_out) rintf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_rint.c"
// BEGIN VAR DEF: TWO23
.const .align 4 .u32 TWO23[2] =
{1258291200,3405774848 };
// BEGIN GLOBAL FUNCTION DEF: rintf
.visible .func (.param .f32 %value_out) rintf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r35;
.reg .u32 %r38;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .f32 %r49;
.reg .u32 %r51;
.reg .u32 %r52;
.reg .u32 %r53;
.reg .u32 %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .f32 %r62;
.reg .u32 %r63;
.reg .pred %r64;
.reg .pred %r65;
.reg .pred %r66;
.reg .u64 %r67;
.reg .u64 %r68;
.reg .u64 %r69;
.reg .u64 %r70;
.reg .u32 %r71;
.reg .u32 %r73;
.reg .u32 %r74;
.reg .u32 %r75;
.reg .u32 %r76;
.reg .f32 %r77;
.reg .f32 %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u32 %r81;
.reg .u32 %r82;
.reg .u32 %r83;
.reg .pred %r84;
.reg .u32 %r85;
.reg .pred %r86;
.reg .u32 %r87;
.reg .u32 %r88;
.reg .u32 %r89;
.reg .u32 %r90;
.reg .u32 %r91;
.reg .pred %r92;
.reg .u64 %r93;
.reg .u64 %r94;
.reg .u64 %r95;
.reg .u64 %r96;
mov.f32 %r62,%ar0;
.loc 1 39 2
mov.b32 %r32,%r62;
.loc 1 41 5
and.b32 %r52,%r32,2147483647;
.loc 1 42 10
shr.u32 %r63,%r52,23;
.loc 1 42 15
add.u32 %r53,%r63,-127;
.loc 1 43 4
setp.gt.s32 %r64,%r53,22;
@ %r64 bra $L2;
.loc 1 44 8
setp.eq.u32 %r65,%r52,0;
@ %r65 bra $L3;
.loc 1 40 15
shr.u32 %r51,%r32,31;
.loc 1 46 8
setp.ge.s32 %r66,%r53,0;
@ %r66 bra $L4;
.loc 1 47 6
and.b32 %r56,%r32,8388607;
.loc 1 51 19
cvta.const.u64 %r67,TWO23;
cvt.s64.s32 %r68,%r51;
shl.b64 %r69,%r68,2;
add.u64 %r70,%r67,%r69;
ld.f32 %r33,[%r70];
.loc 1 49 14
neg.s32 %r71,%r56;
.loc 1 49 18
shr.u32 %r73,%r71,9;
.loc 1 49 22
and.b32 %r74,%r73,4194304;
.loc 1 48 6
and.b32 %r75,%r32,-1048576;
.loc 1 49 6
or.b32 %r76,%r74,%r75;
.loc 1 51 23
mov.b32 %r77,%r76;
add.f32 %r34,%r33,%r77;
.loc 1 51 12
st.f32 [%frame],%r34;
.loc 1 52 16
ld.f32 %r35,[%frame];
.loc 1 52 12
sub.f32 %r78,%r35,%r33;
.loc 1 54 3
mov.b32 %r80,%r78;
and.b32 %r79,%r80,2147483647;
and.b32 %r81,%r32,-2147483648;
or.b32 %r38,%r79,%r81;
mov.b32 %r62,%r38;
.loc 1 55 17
bra $L3;
$L4:
.loc 1 57 19
mov.u32 %r82,8388607;
shr.s32 %r54,%r82,%r53;
.loc 1 58 9
and.b32 %r83,%r32,%r54;
.loc 1 58 5
setp.eq.u32 %r84,%r83,0;
@ %r84 bra $L3;
.loc 1 59 4
shr.u32 %r55,%r54,1;
.loc 1 60 9
and.b32 %r85,%r32,%r55;
.loc 1 60 5
setp.eq.u32 %r86,%r85,0;
@ %r86 bra $L5;
.loc 1 60 27
not.b32 %r87,%r55;
.loc 1 60 25
and.b32 %r88,%r87,%r32;
.loc 1 60 43
mov.u32 %r90,2097152;
shr.s32 %r89,%r90,%r53;
.loc 1 60 31
or.b32 %r91,%r88,%r89;
.loc 1 67 2
mov.b32 %r62,%r91;
bra $L5;
$L2:
.loc 1 63 8
setp.le.u32 %r92,%r52,2139095039;
@ %r92 bra $L3;
.loc 1 63 43
add.f32 %r62,%r62,%r62;
bra $L3;
$L5:
.loc 1 68 11
cvta.const.u64 %r93,TWO23;
cvt.s64.s32 %r94,%r51;
shl.b64 %r95,%r94,2;
add.u64 %r96,%r93,%r95;
ld.f32 %r47,[%r96];
.loc 1 68 15
add.f32 %r48,%r47,%r62;
.loc 1 68 4
st.f32 [%frame],%r48;
.loc 1 69 10
ld.f32 %r49,[%frame];
sub.f32 %r62,%r49,%r47;
$L3:
.loc 1 70 1
mov.f32 %value,%r62;
st.param.f32 [%value_out],%value;
ret;
}
/1815           1612277260  0     0     100666  1879      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: roundf
.visible .func (.param .f32 %value_out) roundf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_round.c"
// BEGIN GLOBAL FUNCTION DEF: roundf
.visible .func (.param .f32 %value_out) roundf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r30;
.reg .u32 %r31;
.reg .u32 %r32;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .f32 %r35;
.reg .f32 %r36;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .pred %r41;
.reg .u32 %r42;
.reg .u32 %r43;
.reg .pred %r44;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .pred %r48;
mov.f32 %r36,%ar0;
.loc 1 25 3
mov.b32 %r32,%r36;
.loc 1 28 46
shr.u32 %r37,%r32,23;
.loc 1 28 23
and.b32 %r38,%r37,255;
.loc 1 28 21
add.u32 %r31,%r38,-127;
.loc 1 30 6
setp.gt.s32 %r39,%r31,22;
@ %r39 bra $L2;
.loc 1 32 10
setp.ge.s32 %r40,%r31,0;
@ %r40 bra $L3;
.loc 1 34 13
and.b32 %r30,%r32,-2147483648;
.loc 1 35 14
setp.ne.u32 %r41,%r31,-1;
@ %r41 bra $L4;
.loc 1 37 15
or.b32 %r30,%r30,1065353216;
bra $L4;
$L3:
.loc 1 41 51
mov.u32 %r42,8388607;
shr.s32 %r33,%r42,%r31;
.loc 1 42 18
and.b32 %r43,%r32,%r33;
.loc 1 42 14
setp.eq.u32 %r44,%r43,0;
@ %r44 bra $L6;
.loc 1 46 27
mov.u32 %r46,4194304;
shr.s32 %r45,%r46,%r31;
.loc 1 46 13
add.u32 %r34,%r45,%r32;
.loc 1 47 16
not.b32 %r47,%r33;
.loc 1 47 13
and.b32 %r30,%r47,%r34;
bra $L4;
$L2:
.loc 1 52 10
setp.ne.u32 %r48,%r31,128;
@ %r48 bra $L7;
.loc 1 54 18
add.f32 %r35,%r36,%r36;
bra $L1;
$L4:
.loc 1 58 3
mov.b32 %r35,%r30;
.loc 1 59 10
bra $L1;
$L6:
.loc 1 44 20
mov.f32 %r35,%r36;
bra $L1;
$L7:
mov.f32 %r35,%r36;
$L1:
.loc 1 60 1
mov.f32 %value,%r35;
st.param.f32 [%value_out],%value;
ret;
}

/1833           1612277260  0     0     100666  3267      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalblnf
.visible .func (.param .f32 %value_out) scalblnf (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_scalbln.c"
// BEGIN GLOBAL FUNCTION DEF: scalblnf
.visible .func (.param .f32 %value_out) scalblnf (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u32 %r28;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r39;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .u64 %r54;
.reg .u32 %r55;
.reg .pred %r56;
.reg .u32 %r57;
.reg .pred %r58;
.reg .u32 %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .u32 %r62;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u16 %r69;
.reg .u16 %r70;
.reg .u16 %r71;
.reg .u32 %r72;
.reg .u16 %r73;
.reg .pred %r74;
.reg .f32 %r75;
.reg .pred %r76;
.reg .f32 %r77;
.reg .pred %r78;
.reg .u32 %r79;
.reg .u32 %r80;
.reg .u32 %r81;
.reg .pred %r82;
.reg .f32 %r83;
.reg .u32 %r84;
.reg .u32 %r85;
.reg .u32 %r86;
.reg .u32 %r87;
.reg .f32 %r88;
mov.f32 %r53,%ar0;
mov.u64 %r54,%ar1;
.loc 1 36 2
mov.b32 %r45,%r53;
.loc 1 37 28
shr.s32 %r55,%r45,23;
.loc 1 37 11
and.b32 %r46,%r55,255;
.loc 1 38 12
setp.ne.u32 %r56,%r46,0;
@ %r56 bra $L2;
.loc 1 39 20
and.b32 %r57,%r45,2147483647;
.loc 1 39 16
setp.eq.u32 %r58,%r57,0;
@ %r58 bra $L9;
.loc 1 40 8
mul.f32 %r53,%r53,0f4c000000;
.loc 1 41 6
mov.b32 %r45,%r53;
.loc 1 42 26
shr.s32 %r59,%r45,23;
and.b32 %r60,%r59,255;
.loc 1 42 8
add.u32 %r46,%r60,-25;
bra $L4;
$L2:
.loc 1 44 12
setp.ne.u32 %r61,%r46,255;
@ %r61 bra $L4;
.loc 1 44 30
add.f32 %r52,%r53,%r53;
bra $L1;
$L4:
.loc 1 45 14
cvt.u32.u64 %r62,%r54;
add.u32 %r28,%r46,%r62;
.loc 1 46 14
set.u32.gt.s64 %r64,%r54,50000;
neg.s32 %r65,%r64;
.loc 1 46 27
set.u32.gt.s32 %r67,%r28,254;
neg.s32 %r68,%r67;
.loc 1 46 22
cvt.u16.u32 %r70,%r65;
cvt.u16.u32 %r71,%r68;
or.b16 %r69,%r70,%r71;
.loc 1 46 12
cvt.u32.u16 %r72,%r69;
cvt.u16.u8 %r73,%r72;
setp.eq.u16 %r74,%r73,0;
@ %r74 bra $L5;
.loc 1 47 16
mov.f32 %r75,0f7149f2ca;
copysign.f32 %r32,%r53,%r75;
.loc 1 47 15
mul.f32 %r52,%r32,0f7149f2ca;
bra $L1;
$L5:
.loc 1 48 5
setp.ge.s64 %r76,%r54,-50000;
@ %r76 bra $L6;
.loc 1 49 16
mov.f32 %r77,0f0da24260;
copysign.f32 %r33,%r53,%r77;
.loc 1 49 15
mul.f32 %r52,%r33,0f0da24260;
bra $L1;
$L6:
.loc 1 50 12
setp.le.s32 %r78,%r28,0;
@ %r78 bra $L7;
.loc 1 51 7
and.b32 %r79,%r45,-2139095041;
shl.b32 %r80,%r28,23;
or.b32 %r81,%r79,%r80;
mov.b32 %r52,%r81;
.loc 1 51 57
bra $L1;
$L7:
.loc 1 52 12
setp.ge.s32 %r82,%r28,-24;
@ %r82 bra $L8;
.loc 1 53 18
mov.f32 %r83,0f0da24260;
copysign.f32 %r39,%r53,%r83;
.loc 1 53 17
mul.f32 %r52,%r39,0f0da24260;
bra $L1;
$L8:
.loc 1 54 11
add.u32 %r84,%r28,25;
.loc 1 55 2
shl.b32 %r85,%r84,23;
and.b32 %r86,%r45,-2139095041;
or.b32 %r87,%r85,%r86;
.loc 1 56 17
mov.b32 %r88,%r87;
mul.f32 %r52,%r88,0f33000000;
bra $L1;
$L9:
.loc 1 39 44
mov.f32 %r52,%r53;
$L1:
.loc 1 57 1
mov.f32 %value,%r52;
st.param.f32 [%value_out],%value;
ret;
}

/1853           1612277260  0     0     100666  3004      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalbnf
.visible .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1);
.file 1 "../../../../../newlib/libm/common/sf_scalbn.c"
// BEGIN GLOBAL FUNCTION DEF: scalbnf
.visible .func (.param .f32 %value_out) scalbnf (.param .f32 %in_ar0, .param .u32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %ar1;
ld.param.u32 %ar1,[%in_ar1];
.reg .f32 %r26;
.reg .f32 %r32;
.reg .f32 %r33;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .u32 %r42;
.reg .u32 %r45;
.reg .f32 %r47;
.reg .f32 %r48;
.reg .u32 %r49;
.reg .pred %r50;
.reg .pred %r51;
.reg .u32 %r52;
.reg .pred %r53;
.reg .pred %r54;
.reg .u32 %r55;
.reg .u32 %r56;
.reg .pred %r57;
.reg .f32 %r58;
.reg .pred %r59;
.reg .u32 %r60;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .pred %r63;
.reg .pred %r64;
.reg .f32 %r65;
.reg .f32 %r66;
.reg .u32 %r67;
.reg .u32 %r68;
.reg .u32 %r69;
.reg .u32 %r70;
.reg .f32 %r71;
mov.f32 %r48,%ar0;
mov.u32 %r49,%ar1;
.loc 1 46 2
mov.b32 %r45,%r48;
.loc 1 47 5
and.b32 %r41,%r45,2147483647;
.loc 1 49 5
setp.eq.u32 %r50,%r41,0;
@ %r50 bra $L11;
.loc 1 51 12
setp.le.u32 %r51,%r41,2139095039;
@ %r51 bra $L3;
.loc 1 52 14
add.f32 %r47,%r48,%r48;
bra $L1;
$L3:
.loc 1 53 12
and.b32 %r52,%r45,2139095040;
setp.ne.u32 %r53,%r52,0;
@ %r53 bra $L4;
.loc 1 54 8
mul.f32 %r48,%r48,0f4c000000;
.loc 1 57 16
setp.lt.s32 %r54,%r49,-50000;
@ %r54 bra $L5;
.loc 1 55 6
mov.b32 %r40,%r48;
.loc 1 56 26
shr.s32 %r55,%r40,23;
and.b32 %r56,%r55,255;
.loc 1 56 8
add.u32 %r39,%r56,-25;
bra $L6;
$L5:
.loc 1 57 39
mul.f32 %r47,%r48,0f0da24260;
bra $L1;
$L4:
.loc 1 46 2
mov.u32 %r40,%r45;
.loc 1 48 15
shr.u32 %r39,%r41,23;
$L6:
.loc 1 59 11
add.u32 %r42,%r39,%r49;
.loc 1 60 12
setp.le.s32 %r57,%r42,254;
@ %r57 bra $L7;
.loc 1 60 46
mov.f32 %r58,0f7149f2ca;
copysign.f32 %r26,%r48,%r58;
.loc 1 60 45
mul.f32 %r47,%r26,0f7149f2ca;
bra $L1;
$L7:
.loc 1 61 12
setp.le.s32 %r59,%r42,0;
@ %r59 bra $L8;
.loc 1 62 7
and.b32 %r60,%r40,-2139095041;
shl.b32 %r61,%r42,23;
or.b32 %r62,%r60,%r61;
mov.b32 %r47,%r62;
.loc 1 62 57
bra $L1;
$L8:
.loc 1 63 12
setp.ge.s32 %r63,%r42,-22;
@ %r63 bra $L9;
.loc 1 64 16
setp.le.s32 %r64,%r49,50000;
@ %r64 bra $L10;
.loc 1 65 15
mov.f32 %r65,0f7149f2ca;
copysign.f32 %r32,%r48,%r65;
.loc 1 65 14
mul.f32 %r47,%r32,0f7149f2ca;
bra $L1;
$L10:
.loc 1 66 23
mov.f32 %r66,0f0da24260;
copysign.f32 %r33,%r48,%r66;
.loc 1 66 22
mul.f32 %r47,%r33,0f0da24260;
bra $L1;
$L9:
.loc 1 68 11
add.u32 %r67,%r42,25;
.loc 1 69 2
shl.b32 %r68,%r67,23;
and.b32 %r69,%r40,-2139095041;
or.b32 %r70,%r68,%r69;
.loc 1 70 17
mov.b32 %r71,%r70;
mul.f32 %r47,%r71,0f33000000;
bra $L1;
$L11:
.loc 1 50 13
mov.f32 %r47,%r48;
$L1:
.loc 1 71 1
mov.f32 %value,%r47;
st.param.f32 [%value_out],%value;
ret;
}
/1872           1612277259  0     0     100666  1368      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: significandf
.visible .func (.param .f32 %value_out) significandf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_signif.c"
// BEGIN GLOBAL FUNCTION DECL: ilogbf
.extern .func (.param .u32 %value_out) ilogbf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalbf
.extern .func (.param .f32 %value_out) __ieee754_scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: significandf
.visible .func (.param .f32 %value_out) significandf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r26;
.reg .u32 %r28;
.reg .u32 %r31;
.reg .f32 %r32;
.reg .f32 %r33;
mov.f32 %r26,%ar0;
.loc 1 25 37
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),ilogbf,(%out_arg1);
ld.param.u32 %r28,[%value_in];
}
.loc 1 25 36
neg.s32 %r31,%r28;
.loc 1 25 9
cvt.rn.f32.s32 %r32,%r31;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r32;
call (%value_in),__ieee754_scalbf,(%out_arg1,%out_arg2);
ld.param.f32 %r33,[%value_in];
}
.loc 1 26 1
mov.f32 %value,%r33;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sf_sin.o/ 1612277259  0     0     100666  4121      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sinf
.visible .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_sin.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_sinf
.extern .func (.param .f32 %value_out) __kernel_sinf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2f
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2f (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __kernel_cosf
.extern .func (.param .f32 %value_out) __kernel_cosf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: sinf
.visible .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r22;
.reg .u32 %r34;
.reg .u32 %r35;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .pred %r39;
.reg .f32 %r41;
.reg .u32 %r42;
.reg .f32 %r43;
.reg .pred %r44;
.reg .u32 %r47;
.reg .pred %r48;
.reg .pred %r49;
.reg .pred %r50;
.reg .f32 %r51;
.reg .u32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r56;
.reg .f32 %r58;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .u32 %r62;
.reg .f32 %r63;
.reg .f32 %r64;
.reg .f32 %r65;
.reg .f32 %r67;
.reg .f32 %r68;
mov.f32 %r38,%ar0;
.loc 1 29 2
mov.b32 %r34,%r38;
.loc 1 32 5
and.b32 %r35,%r34,2147483647;
.loc 1 33 4
setp.gt.s32 %r39,%r35,1061752792;
@ %r39 bra $L2;
.loc 1 33 30
mov.u32 %r42,0;
mov.f32 %r41,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r41;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r42;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r43,[%value_in];
}
mov.f32 %r37,%r43;
bra $L1;
$L2:
.loc 1 36 10
setp.le.s32 %r44,%r35,2139095039;
@ %r44 bra $L4;
.loc 1 36 45
sub.f32 %r37,%r38,%r38;
bra $L1;
$L4:
.loc 1 40 10
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2f,(%out_arg1,%out_arg2);
ld.param.u32 %r47,[%value_in];
}
.loc 1 41 14
and.b32 %r22,%r47,3;
.loc 1 41 6
setp.eq.u32 %r48,%r22,1;
@ %r48 bra $L5;
setp.eq.u32 %r49,%r22,2;
@ %r49 bra $L6;
setp.ne.u32 %r50,%r22,0;
@ %r50 bra $L7;
.loc 1 42 19
ld.f32 %r54,[%frame+4];
mov.u32 %r53,1;
ld.f32 %r51,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r51;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r54;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r53;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r55,[%value_in];
}
mov.f32 %r37,%r55;
bra $L1;
$L5:
.loc 1 43 19
ld.f32 %r58,[%frame+4];
ld.f32 %r56,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r56;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r58;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r59,[%value_in];
}
mov.f32 %r37,%r59;
bra $L1;
$L6:
.loc 1 44 19
ld.f32 %r63,[%frame+4];
mov.u32 %r62,1;
ld.f32 %r60,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r60;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r63;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r62;
call (%value_in),__kernel_sinf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r64,[%value_in];
}
.loc 1 44 18
neg.f32 %r37,%r64;
bra $L1;
$L7:
.loc 1 46 12
ld.f32 %r67,[%frame+4];
ld.f32 %r65,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r65;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r67;
call (%value_in),__kernel_cosf,(%out_arg1,%out_arg2);
ld.param.f32 %r68,[%value_in];
}
.loc 1 46 11
neg.f32 %r37,%r68;
$L1:
.loc 1 49 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_tan.o/ 1612277259  0     0     100666  2603      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tanf
.visible .func (.param .f32 %value_out) tanf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_tan.c"
// BEGIN GLOBAL FUNCTION DECL: __kernel_tanf
.extern .func (.param .f32 %value_out) __kernel_tanf (.param .f32 %in_ar0, .param .f32 %in_ar1, .param .u32 %in_ar2);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_rem_pio2f
.extern .func (.param .u32 %value_out) __ieee754_rem_pio2f (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: tanf
.visible .func (.param .f32 %value_out) tanf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.local .align 16 .b8 %frame_ar[16];
.reg .u64 %frame;
cvta.local.u64 %frame,%frame_ar;
.reg .u32 %r28;
.reg .u32 %r29;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .pred %r33;
.reg .f32 %r35;
.reg .u32 %r36;
.reg .f32 %r37;
.reg .pred %r38;
.reg .u32 %r41;
.reg .f32 %r42;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u32 %r48;
.reg .f32 %r49;
.reg .f32 %r50;
mov.f32 %r32,%ar0;
.loc 1 28 2
mov.b32 %r28,%r32;
.loc 1 31 5
and.b32 %r29,%r28,2147483647;
.loc 1 32 4
setp.gt.s32 %r33,%r29,1061752794;
@ %r33 bra $L2;
.loc 1 32 30
mov.u32 %r36,1;
mov.f32 %r35,0f00000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r35;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r36;
call (%value_in),__kernel_tanf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r37,[%value_in];
}
mov.f32 %r31,%r37;
bra $L1;
$L2:
.loc 1 35 10
setp.le.s32 %r38,%r29,2139095039;
@ %r38 bra $L4;
.loc 1 35 45
sub.f32 %r31,%r32,%r32;
bra $L1;
$L4:
.loc 1 39 10
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%frame;
call (%value_in),__ieee754_rem_pio2f,(%out_arg1,%out_arg2);
ld.param.u32 %r41,[%value_in];
}
.loc 1 40 45
add.u32 %r45,%r41,%r41;
and.b32 %r46,%r45,2;
.loc 1 40 13
mov.u32 %r48,1;
sub.u32 %r47,%r48,%r46;
ld.f32 %r49,[%frame+4];
ld.f32 %r42,[%frame];
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r42;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r49;
.param .u32 %out_arg3;
st.param.u32 [%out_arg3],%r47;
call (%value_in),__kernel_tanf,(%out_arg1,%out_arg2,%out_arg3);
ld.param.f32 %r50,[%value_in];
}
mov.f32 %r31,%r50;
$L1:
.loc 1 43 1
mov.f32 %value,%r31;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-sf_tanh.o/1612277259  0     0     100666  3032      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tanhf
.visible .func (.param .f32 %value_out) tanhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/sf_tanh.c"
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: expm1f
.extern .func (.param .f32 %value_out) expm1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tanhf
.visible .func (.param .f32 %value_out) tanhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r31;
.reg .u32 %r32;
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .pred %r39;
.reg .f32 %r40;
.reg .pred %r41;
.reg .pred %r43;
.reg .pred %r44;
.reg .f32 %r45;
.reg .pred %r46;
.reg .f32 %r48;
.reg .f32 %r50;
.reg .f32 %r51;
.reg .f32 %r52;
.reg .f32 %r53;
.reg .f32 %r54;
.reg .f32 %r55;
.reg .f32 %r57;
.reg .f32 %r59;
.reg .f32 %r60;
.reg .f32 %r61;
.reg .f32 %r62;
.reg .pred %r63;
mov.f32 %r38,%ar0;
.loc 1 34 2
mov.b32 %r31,%r38;
.loc 1 35 5
and.b32 %r32,%r31,2147483647;
.loc 1 38 4
setp.le.s32 %r39,%r32,2139095039;
@ %r39 bra $L2;
.loc 1 39 27
mov.f32 %r40,0f3f800000;
div.rn.f32 %r36,%r40,%r38;
.loc 1 39 9
setp.lt.s32 %r41,%r31,0;
@ %r41 bra $L3;
.loc 1 39 29
add.f32 %r37,%r36,0f3f800000;
bra $L1;
$L3:
.loc 1 40 29
sub.f32 %r37,%r36,%r40;
bra $L1;
$L2:
.loc 1 44 5
setp.gt.s32 %r43,%r32,1102053375;
@ %r43 bra $L8;
.loc 1 45 9
setp.gt.s32 %r44,%r32,603979775;
@ %r44 bra $L6;
.loc 1 46 16
add.f32 %r45,%r38,0f3f800000;
.loc 1 46 11
mul.f32 %r37,%r45,%r38;
bra $L1;
$L6:
.loc 1 47 9
setp.le.s32 %r46,%r32,1065353215;
@ %r46 bra $L7;
.loc 1 48 18
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r48,[%value_in];
}
.loc 1 48 7
add.f32 %r50,%r48,%r48;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r50;
call (%value_in),expm1f,(%out_arg1);
ld.param.f32 %r51,[%value_in];
}
.loc 1 49 19
add.f32 %r52,%r51,0f40000000;
.loc 1 49 16
mov.f32 %r54,0f40000000;
div.rn.f32 %r53,%r54,%r52;
.loc 1 49 5
mov.f32 %r55,0f3f800000;
sub.f32 %r37,%r55,%r53;
bra $L5;
$L7:
.loc 1 51 26
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r57,[%value_in];
}
.loc 1 51 14
mul.f32 %r59,%r57,0fc0000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r59;
call (%value_in),expm1f,(%out_arg1);
ld.param.f32 %r60,[%value_in];
}
.loc 1 52 13
neg.f32 %r61,%r60;
.loc 1 52 18
add.f32 %r62,%r60,0f40000000;
.loc 1 52 11
div.rn.f32 %r37,%r61,%r62;
bra $L5;
$L8:
.loc 1 56 8
mov.f32 %r37,0f3f800000;
$L5:
.loc 1 58 19
setp.ge.s32 %r63,%r31,0;
@ %r63 bra $L1;
neg.f32 %r37,%r37;
$L1:
.loc 1 59 1
mov.f32 %value,%r37;
st.param.f32 [%value_out],%value;
ret;
}
/1891           1612277260  0     0     100666  1392      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: truncf
.visible .func (.param .f32 %value_out) truncf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sf_trunc.c"
// BEGIN GLOBAL FUNCTION DEF: truncf
.visible .func (.param .f32 %value_out) truncf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u32 %r27;
.reg .u32 %r29;
.reg .f32 %r31;
.reg .f32 %r32;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .pred %r36;
.reg .u32 %r37;
.reg .u32 %r38;
.reg .u32 %r39;
.reg .u32 %r40;
.reg .u32 %r41;
.reg .pred %r42;
mov.f32 %r32,%ar0;
.loc 1 23 3
mov.b32 %r27,%r32;
.loc 1 29 41
shr.s32 %r33,%r27,23;
and.b32 %r34,%r33,255;
.loc 1 29 21
add.u32 %r29,%r34,-127;
.loc 1 31 6
setp.gt.s32 %r35,%r29,22;
@ %r35 bra $L2;
.loc 1 33 10
setp.ge.s32 %r36,%r29,0;
@ %r36 bra $L3;
.loc 1 26 11
and.b32 %r37,%r27,-2147483648;
.loc 1 36 11
mov.b32 %r31,%r37;
bra $L1;
$L3:
.loc 1 40 11
mov.u32 %r39,8388607;
shr.s32 %r38,%r39,%r29;
not.b32 %r40,%r38;
and.b32 %r41,%r40,%r27;
mov.b32 %r31,%r41;
bra $L1;
$L2:
.loc 1 45 10
setp.ne.u32 %r42,%r29,128;
@ %r42 bra $L5;
.loc 1 47 18
add.f32 %r31,%r32,%r32;
bra $L1;
$L5:
mov.f32 %r31,%r32;
$L1:
.loc 1 52 1
mov.f32 %value,%r31;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-sincosf.o/1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

/1909           1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-sinf.o/   1612277260  0     0     100666  83        `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE

lib_a-sinhl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sinhl
.visible .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sinhl.c"
// BEGIN GLOBAL FUNCTION DECL: sinh
.extern .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: sinhl
.visible .func (.param .f64 %value_out) sinhl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),sinh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-sinl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sinl
.visible .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sinl.c"
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: sinl
.visible .func (.param .f64 %value_out) sinl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

/1931           1612277260  0     0     100666  823       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: finitel
.visible .func (.param .u32 %value_out) finitel (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sl_finite.c"
// BEGIN GLOBAL FUNCTION DEF: finitel
.visible .func (.param .u32 %value_out) finitel (.param .f64 %in_ar0)
{
.reg .u32 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r28;
.reg .u32 %r30;
.reg .u32 %r31;
.reg .u16 %r32;
.reg .u16 %r33;
.reg .u32 %r34;
mov.f64 %r26,%ar0;
.loc 1 15 10
abs.f64 %r28,%r26;
set.u32.gtu.f64 %r30,%r28,0d7fefffffffffffff;
neg.s32 %r31,%r30;
cvt.u16.u32 %r33,%r31;
xor.b16 %r32,%r33,1;
cvt.u32.u16 %r34,%r32;
cvt.u32.u8 %value,%r34;
.loc 1 24 1
st.param.u32 [%value_out],%value;
ret;
}

lib_a-sqrtl.o/  1612277260  0     0     100666  553       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sqrtl
.visible .func (.param .f64 %value_out) sqrtl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/sqrtl.c"
// BEGIN GLOBAL FUNCTION DEF: sqrtl
.visible .func (.param .f64 %value_out) sqrtl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
sqrt.rn.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}

lib_a-tanhl.o/  1612277260  0     0     100666  825       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tanhl
.visible .func (.param .f64 %value_out) tanhl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/tanhl.c"
// BEGIN GLOBAL FUNCTION DECL: tanh
.extern .func (.param .f64 %value_out) tanh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tanhl
.visible .func (.param .f64 %value_out) tanhl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),tanh,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-tanl.o/   1612277260  0     0     100666  817       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tanl
.visible .func (.param .f64 %value_out) tanl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/tanl.c"
// BEGIN GLOBAL FUNCTION DECL: tan
.extern .func (.param .f64 %value_out) tan (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tanl
.visible .func (.param .f64 %value_out) tanl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),tan,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-tgammal.o/1612277260  0     0     100666  841       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tgammal
.visible .func (.param .f64 %value_out) tgammal (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/tgammal.c"
// BEGIN GLOBAL FUNCTION DECL: tgamma
.extern .func (.param .f64 %value_out) tgamma (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tgammal
.visible .func (.param .f64 %value_out) tgammal (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 39 10
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),tgamma,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 40 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-truncl.o/ 1612277260  0     0     100666  562       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: truncl
.visible .func (.param .f64 %value_out) truncl (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/common/truncl.c"
// BEGIN GLOBAL FUNCTION DEF: truncl
.visible .func (.param .f64 %value_out) truncl (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
mov.f64 %r23,%ar0;
.loc 1 39 10
cvt.rzi.f64.f64 %value,%r23;
.loc 1 40 1
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_acos.o/ 1612277259  0     0     100666  2044      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: acos
.visible .func (.param .f64 %value_out) acos (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_acos.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acos
.extern .func (.param .f64 %value_out) __ieee754_acos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nan
.extern .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: acos
.visible .func (.param .f64 %value_out) acos (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .f64 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u64 %r34;
.reg .f64 %r35;
mov.f64 %r25,%ar0;
.loc 1 82 13
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_acos,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 83 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 84 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 84 4
setp.gt.f64 %r31,%r30,0d3ff0000000000000;
@ ! %r31 bra $L1;
.loc 1 86 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 86 12
mov.u32 %r33,33;
st.u32 [%r32],%r33;
.loc 1 87 13
cvta.const.u64 %r34,$LC0;
{
.param .f64 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r34;
call (%value_in),nan,(%out_arg1);
ld.param.f64 %r35,[%value_in];
}
mov.f64 %r24,%r35;
$L1:
.loc 1 91 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_acosh.o/1612277259  0     0     100666  1442      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: acosh
.visible .func (.param .f64 %value_out) acosh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_acosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acosh
.extern .func (.param .f64 %value_out) __ieee754_acosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: acosh
.visible .func (.param .f64 %value_out) acosh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r26;
.reg .pred %r27;
.reg .pred %r28;
.reg .u64 %r29;
.reg .u32 %r30;
.reg .f64 %r31;
mov.f64 %r24,%ar0;
.loc 1 89 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),__ieee754_acosh,(%out_arg1);
ld.param.f64 %r26,[%value_in];
}
mov.f64 %r23,%r26;
.loc 1 90 4
setp.nan.f64 %r27,%r24,%r24;
@ %r27 bra $L1;
.loc 1 91 4
setp.lt.f64 %r28,%r24,0d3ff0000000000000;
@ ! %r28 bra $L1;
.loc 1 93 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r29,[%value_in];
}
.loc 1 93 12
mov.u32 %r30,33;
st.u32 [%r29],%r30;
.loc 1 94 16
mov.f64 %r31,0d0000000000000000;
div.rn.f64 %r23,%r31,%r31;
$L1:
.loc 1 98 1
mov.f64 %value,%r23;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_asin.o/ 1612277259  0     0     100666  2043      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: asin
.visible .func (.param .f64 %value_out) asin (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_asin.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_asin
.extern .func (.param .f64 %value_out) __ieee754_asin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nan
.extern .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: asin
.visible .func (.param .f64 %value_out) asin (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .f64 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u64 %r34;
.reg .f64 %r35;
mov.f64 %r25,%ar0;
.loc 1 86 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_asin,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 87 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 88 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 88 4
setp.gt.f64 %r31,%r30,0d3ff0000000000000;
@ ! %r31 bra $L1;
.loc 1 90 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 90 12
mov.u32 %r33,33;
st.u32 [%r32],%r33;
.loc 1 91 13
cvta.const.u64 %r34,$LC0;
{
.param .f64 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r34;
call (%value_in),nan,(%out_arg1);
ld.param.f64 %r35,[%value_in];
}
mov.f64 %r24,%r35;
$L1:
.loc 1 95 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_atan2.o/1612277259  0     0     100666  1070      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atan2
.visible .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_atan2.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atan2
.extern .func (.param .f64 %value_out) __ieee754_atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: atan2
.visible .func (.param .f64 %value_out) atan2 (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 75 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),__ieee754_atan2,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 76 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_atanh.o/1612277259  0     0     100666  2084      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atanh
.visible .func (.param .f64 %value_out) atanh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_atanh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atanh
.extern .func (.param .f64 %value_out) __ieee754_atanh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: atanh
.visible .func (.param .f64 %value_out) atanh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .pred %r29;
.reg .f64 %r31;
.reg .pred %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .f64 %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f64 %r26,%ar0;
.loc 1 87 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__ieee754_atanh,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
mov.f64 %r25,%r28;
.loc 1 88 4
setp.nan.f64 %r29,%r26,%r26;
@ %r29 bra $L1;
.loc 1 89 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r31,[%value_in];
}
.loc 1 90 4
setp.ge.f64 %r32,%r31,0d3ff0000000000000;
@ ! %r32 bra $L1;
.loc 1 91 8
setp.gt.f64 %r33,%r31,0d3ff0000000000000;
@ ! %r33 bra $L8;
.loc 1 93 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 93 9
mov.u32 %r35,33;
st.u32 [%r34],%r35;
.loc 1 94 13
mov.f64 %r36,0d0000000000000000;
div.rn.f64 %r25,%r36,%r36;
bra $L1;
$L8:
.loc 1 97 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 97 9
mov.u32 %r38,33;
st.u32 [%r37],%r38;
.loc 1 98 11
div.rn.f64 %r25,%r26,0d0000000000000000;
$L1:
.loc 1 103 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_cosh.o/ 1612277259  0     0     100666  1678      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: cosh
.visible .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_cosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_cosh
.extern .func (.param .f64 %value_out) __ieee754_cosh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: cosh
.visible .func (.param .f64 %value_out) cosh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .f64 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f64 %r25,%ar0;
.loc 1 73 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_cosh,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 74 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 75 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 75 4
setp.gt.f64 %r31,%r30,0d408633ce8fb9f87d;
@ ! %r31 bra $L1;
.loc 1 77 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 77 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
.loc 1 78 13
mov.f64 %r24,0d7ff0000000000000;
$L1:
.loc 1 82 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_drem.o/ 1612277259  0     0     100666  1047      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: drem
.visible .func (.param .f64 %value_out) drem (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_drem.c"
// BEGIN GLOBAL FUNCTION DECL: remainder
.extern .func (.param .f64 %value_out) remainder (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: drem
.visible .func (.param .f64 %value_out) drem (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.f64 %r24,%ar1;
.loc 1 14 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r24;
call (%value_in),remainder,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 15 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_exp.o/  1612277259  0     0     100666  2019      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp
.visible .func (.param .f64 %value_out) exp (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_exp.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_exp
.extern .func (.param .f64 %value_out) __ieee754_exp (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: exp
.visible .func (.param .f64 %value_out) exp (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .u32 %r30;
.reg .pred %r31;
.reg .pred %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u64 %r36;
.reg .u32 %r37;
mov.f64 %r26,%ar0;
.loc 1 77 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__ieee754_exp,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
mov.f64 %r25,%r28;
.loc 1 79 5
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r30,[%value_in];
}
.loc 1 79 4
setp.eq.u32 %r31,%r30,0;
@ %r31 bra $L1;
.loc 1 80 8
setp.gt.f64 %r32,%r26,0d40862e42fefa39ef;
@ ! %r32 bra $L11;
.loc 1 82 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 82 9
mov.u32 %r34,34;
st.u32 [%r33],%r34;
.loc 1 83 10
mov.f64 %r25,0d7ff0000000000000;
bra $L1;
$L11:
.loc 1 84 15
setp.lt.f64 %r35,%r26,0dc0874910d52d3051;
@ ! %r35 bra $L1;
.loc 1 86 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r36,[%value_in];
}
.loc 1 86 9
mov.u32 %r37,34;
st.u32 [%r36],%r37;
.loc 1 87 10
mov.f64 %r25,0d0000000000000000;
$L1:
.loc 1 92 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_exp2.o/ 1612277259  0     0     100666  955       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp2
.visible .func (.param .f64 %value_out) exp2 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_exp2.c"
// BEGIN GLOBAL FUNCTION DECL: pow
.extern .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: exp2
.visible .func (.param .f64 %value_out) exp2 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r26;
mov.f64 %r23,%ar0;
.loc 1 65 10
mov.f64 %r24,0d4000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r23;
call (%value_in),pow,(%out_arg1,%out_arg2);
ld.param.f64 %r26,[%value_in];
}
.loc 1 66 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_fmod.o/ 1612277259  0     0     100666  1968      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmod
.visible .func (.param .f64 %value_out) fmod (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_fmod.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmod
.extern .func (.param .f64 %value_out) __ieee754_fmod (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: fmod
.visible .func (.param .f64 %value_out) fmod (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r31;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .u16 %r38;
.reg .u16 %r39;
.reg .u16 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .pred %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .f64 %r46;
mov.f64 %r27,%ar0;
mov.f64 %r28,%ar1;
.loc 1 70 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r28;
call (%value_in),__ieee754_fmod,(%out_arg1,%out_arg2);
ld.param.f64 %r31,[%value_in];
}
mov.f64 %r26,%r31;
.loc 1 72 4
set.u32.eq.f64 %r33,%r28,0d0000000000000000;
neg.s32 %r34,%r33;
.loc 1 71 4
set.u32.num.f64 %r36,%r27,%r28;
neg.s32 %r37,%r36;
.loc 1 72 4
cvt.u16.u32 %r39,%r34;
cvt.u16.u32 %r40,%r37;
and.b16 %r38,%r39,%r40;
cvt.u32.u16 %r41,%r38;
cvt.u16.u8 %r42,%r41;
setp.eq.u16 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 74 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r44,[%value_in];
}
.loc 1 74 12
mov.u32 %r45,33;
st.u32 [%r44],%r45;
.loc 1 75 16
mov.f64 %r46,0d0000000000000000;
div.rn.f64 %r26,%r46,%r46;
$L1:
.loc 1 79 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_gamma.o/1612277259  0     0     100666  832       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: gamma
.visible .func (.param .f64 %value_out) gamma (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_gamma.c"
// BEGIN GLOBAL FUNCTION DECL: lgamma
.extern .func (.param .f64 %value_out) lgamma (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: gamma
.visible .func (.param .f64 %value_out) gamma (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r25;
mov.f64 %r23,%ar0;
.loc 1 151 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
call (%value_in),lgamma,(%out_arg1);
ld.param.f64 %r25,[%value_in];
}
.loc 1 152 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_hypot.o/1612277259  0     0     100666  2332      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: hypot
.visible .func (.param .f64 %value_out) hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_hypot.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypot
.extern .func (.param .f64 %value_out) __ieee754_hypot (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: hypot
.visible .func (.param .f64 %value_out) hypot (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r31;
.reg .u32 %r33;
.reg .pred %r34;
.reg .u32 %r36;
.reg .pred %r37;
.reg .u32 %r39;
.reg .pred %r40;
.reg .u64 %r41;
.reg .u32 %r42;
mov.f64 %r27,%ar0;
mov.f64 %r28,%ar1;
.loc 1 67 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r28;
call (%value_in),__ieee754_hypot,(%out_arg1,%out_arg2);
ld.param.f64 %r31,[%value_in];
}
mov.f64 %r26,%r31;
.loc 1 69 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r33,[%value_in];
}
.loc 1 69 4
setp.ne.u32 %r34,%r33,0;
@ %r34 bra $L1;
.loc 1 69 19
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r36,[%value_in];
}
.loc 1 69 17
setp.eq.u32 %r37,%r36,0;
@ %r37 bra $L1;
.loc 1 69 30
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r39,[%value_in];
}
.loc 1 69 28
setp.eq.u32 %r40,%r39,0;
@ %r40 bra $L1;
.loc 1 71 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r41,[%value_in];
}
.loc 1 71 12
mov.u32 %r42,34;
st.u32 [%r41],%r42;
.loc 1 72 13
mov.f64 %r26,0d7ff0000000000000;
$L1:
.loc 1 76 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_j0.o/   1612277259  0     0     100666  3343      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: j0
.visible .func (.param .f64 %value_out) j0 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_j0.c"
// BEGIN GLOBAL FUNCTION DECL: y0
.visible .func (.param .f64 %value_out) y0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0
.extern .func (.param .f64 %value_out) __ieee754_j0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0
.extern .func (.param .f64 %value_out) __ieee754_y0 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: j0
.visible .func (.param .f64 %value_out) j0 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .f64 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f64 %r25,%ar0;
.loc 1 107 13
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_j0,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 108 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 109 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 109 4
setp.gt.f64 %r31,%r30,0d434921fb54442d18;
@ ! %r31 bra $L1;
.loc 1 111 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 111 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
.loc 1 112 13
mov.f64 %r24,0d0000000000000000;
$L1:
.loc 1 116 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: y0
.visible .func (.param .f64 %value_out) y0 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f64 %r26,%ar0;
.loc 1 129 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__ieee754_y0,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
.loc 1 130 4
setp.num.f64 %r29,%r26,%r26;
@ ! %r29 bra $L5;
.loc 1 131 11
setp.lt.f64 %r30,%r26,0d0000000000000000;
@ ! %r30 bra $L15;
.loc 1 133 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 133 12
mov.u32 %r32,33;
st.u32 [%r31],%r32;
bra $L10;
$L15:
.loc 1 135 11
setp.neu.f64 %r33,%r26,0d0000000000000000;
@ %r33 bra $L10;
.loc 1 137 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 137 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
$L10:
.loc 1 139 4
setp.gt.f64 %r36,%r26,0d434921fb54442d18;
@ ! %r36 bra $L5;
.loc 1 141 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 141 12
mov.u32 %r38,34;
st.u32 [%r37],%r38;
$L5:
.loc 1 145 1
mov.f64 %value,%r28;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_j1.o/   1612277259  0     0     100666  3322      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: j1
.visible .func (.param .f64 %value_out) j1 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_j1.c"
// BEGIN GLOBAL FUNCTION DECL: y1
.visible .func (.param .f64 %value_out) y1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1
.extern .func (.param .f64 %value_out) __ieee754_j1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1
.extern .func (.param .f64 %value_out) __ieee754_y1 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: j1
.visible .func (.param .f64 %value_out) j1 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .f64 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f64 %r25,%ar0;
.loc 1 34 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_j1,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 35 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 36 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 36 4
setp.gt.f64 %r31,%r30,0d434921fb54442d18;
@ ! %r31 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 38 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
.loc 1 39 13
mov.f64 %r24,0d0000000000000000;
$L1:
.loc 1 43 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: y1
.visible .func (.param .f64 %value_out) y1 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f64 %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f64 %r26,%ar0;
.loc 1 56 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__ieee754_y1,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
.loc 1 57 4
setp.num.f64 %r29,%r26,%r26;
@ ! %r29 bra $L5;
.loc 1 58 11
setp.lt.f64 %r30,%r26,0d0000000000000000;
@ ! %r30 bra $L15;
.loc 1 60 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 60 12
mov.u32 %r32,33;
st.u32 [%r31],%r32;
bra $L10;
$L15:
.loc 1 62 11
setp.neu.f64 %r33,%r26,0d0000000000000000;
@ %r33 bra $L10;
.loc 1 64 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 64 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
$L10:
.loc 1 66 4
setp.gt.f64 %r36,%r26,0d434921fb54442d18;
@ ! %r36 bra $L5;
.loc 1 68 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 68 12
mov.u32 %r38,34;
st.u32 [%r37],%r38;
$L5:
.loc 1 72 1
mov.f64 %value,%r28;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_jn.o/   1612277259  0     0     100666  3748      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: jn
.visible .func (.param .f64 %value_out) jn (.param .u32 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_jn.c"
// BEGIN GLOBAL FUNCTION DECL: yn
.visible .func (.param .f64 %value_out) yn (.param .u32 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_jn
.extern .func (.param .f64 %value_out) __ieee754_jn (.param .u32 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabs
.extern .func (.param .f64 %value_out) fabs (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_yn
.extern .func (.param .f64 %value_out) __ieee754_yn (.param .u32 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: jn
.visible .func (.param .f64 %value_out) jn (.param .u32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r24;
.reg .u32 %r25;
.reg .f64 %r26;
.reg .f64 %r29;
.reg .pred %r30;
.reg .f64 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
mov.u32 %r25,%ar0;
mov.f64 %r26,%ar1;
.loc 1 56 6
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r25;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r26;
call (%value_in),__ieee754_jn,(%out_arg1,%out_arg2);
ld.param.f64 %r29,[%value_in];
}
mov.f64 %r24,%r29;
.loc 1 57 4
setp.nan.f64 %r30,%r26,%r26;
@ %r30 bra $L1;
.loc 1 58 5
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),fabs,(%out_arg1);
ld.param.f64 %r32,[%value_in];
}
.loc 1 58 4
setp.gt.f64 %r33,%r32,0d434921fb54442d18;
@ ! %r33 bra $L1;
.loc 1 60 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 60 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
.loc 1 61 13
mov.f64 %r24,0d0000000000000000;
$L1:
.loc 1 65 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: yn
.visible .func (.param .f64 %value_out) yn (.param .u32 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .u32 %r26;
.reg .f64 %r27;
.reg .f64 %r30;
.reg .pred %r31;
.reg .pred %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u64 %r36;
.reg .u32 %r37;
.reg .pred %r38;
.reg .u64 %r39;
.reg .u32 %r40;
mov.u32 %r26,%ar0;
mov.f64 %r27,%ar1;
.loc 1 78 6
{
.param .f64 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r26;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r27;
call (%value_in),__ieee754_yn,(%out_arg1,%out_arg2);
ld.param.f64 %r30,[%value_in];
}
.loc 1 79 4
setp.num.f64 %r31,%r27,%r27;
@ ! %r31 bra $L5;
.loc 1 80 11
setp.lt.f64 %r32,%r27,0d0000000000000000;
@ ! %r32 bra $L15;
.loc 1 82 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 82 12
mov.u32 %r34,33;
st.u32 [%r33],%r34;
bra $L10;
$L15:
.loc 1 84 11
setp.neu.f64 %r35,%r27,0d0000000000000000;
@ %r35 bra $L10;
.loc 1 86 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r36,[%value_in];
}
.loc 1 86 12
mov.u32 %r37,34;
st.u32 [%r36],%r37;
$L10:
.loc 1 88 4
setp.gt.f64 %r38,%r27,0d434921fb54442d18;
@ ! %r38 bra $L5;
.loc 1 90 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r39,[%value_in];
}
.loc 1 90 12
mov.u32 %r40,34;
st.u32 [%r39],%r40;
$L5:
.loc 1 94 1
mov.f64 %value,%r30;
st.param.f64 [%value_out],%value;
ret;
}
/1950           1612277259  0     0     100666  2057      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lgamma
.visible .func (.param .f64 %value_out) lgamma (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_lgamma.c"
// BEGIN GLOBAL VAR DECL: _impure_ptr
.extern .global .align 8 .u64 _impure_ptr[1];
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgamma_r
.extern .func (.param .f64 %value_out) __ieee754_lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: lgamma
.visible .func (.param .f64 %value_out) lgamma (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r28;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .f64 %r33;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u32 %r38;
.reg .pred %r39;
.reg .u64 %r40;
.reg .u32 %r41;
mov.f64 %r28,%ar0;
.loc 1 38 13
ld.global.u64 %r32,[_impure_ptr];
add.u64 %r31,%r32,224;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r31;
call (%value_in),__ieee754_lgamma_r,(%out_arg1,%out_arg2);
ld.param.f64 %r33,[%value_in];
}
.loc 1 40 13
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r35,[%value_in];
}
.loc 1 40 11
setp.eq.u32 %r36,%r35,0;
@ ! %r36 bra $L1;
.loc 1 40 24
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r38,[%value_in];
}
.loc 1 40 22
setp.eq.u32 %r39,%r38,0;
@ %r39 bra $L1;
.loc 1 42 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r40,[%value_in];
}
.loc 1 42 12
mov.u32 %r41,34;
st.u32 [%r40],%r41;
$L1:
.loc 1 46 1
mov.f64 %value,%r33;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_log.o/  1612277259  0     0     100666  2090      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: log
.visible .func (.param .f64 %value_out) log (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_log.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log
.extern .func (.param .f64 %value_out) __ieee754_log (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nan
.extern .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: log
.visible .func (.param .f64 %value_out) log (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u64 %r35;
.reg .f64 %r36;
mov.f64 %r25,%ar0;
.loc 1 64 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_log,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 65 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 65 40
setp.gt.f64 %r29,%r25,0d0000000000000000;
@ %r29 bra $L1;
.loc 1 66 4
setp.neu.f64 %r30,%r25,0d0000000000000000;
@ %r30 bra $L3;
.loc 1 68 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 68 12
mov.u32 %r32,34;
st.u32 [%r31],%r32;
.loc 1 69 13
mov.f64 %r24,0dfff0000000000000;
bra $L1;
$L3:
.loc 1 72 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 72 12
mov.u32 %r34,33;
st.u32 [%r33],%r34;
.loc 1 73 13
cvta.const.u64 %r35,$LC0;
{
.param .f64 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r35;
call (%value_in),nan,(%out_arg1);
ld.param.f64 %r36,[%value_in];
}
mov.f64 %r24,%r36;
$L1:
.loc 1 76 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_log10.o/1612277259  0     0     100666  2105      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: log10
.visible .func (.param .f64 %value_out) log10 (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_log10.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log10
.extern .func (.param .f64 %value_out) __ieee754_log10 (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nan
.extern .func (.param .f64 %value_out) nan (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: log10
.visible .func (.param .f64 %value_out) log10 (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r24;
.reg .f64 %r25;
.reg .f64 %r27;
.reg .pred %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u64 %r35;
.reg .f64 %r36;
mov.f64 %r25,%ar0;
.loc 1 64 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),__ieee754_log10,(%out_arg1);
ld.param.f64 %r27,[%value_in];
}
mov.f64 %r24,%r27;
.loc 1 65 4
setp.nan.f64 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 66 4
setp.le.f64 %r29,%r25,0d0000000000000000;
@ ! %r29 bra $L1;
.loc 1 67 8
setp.neu.f64 %r30,%r25,0d0000000000000000;
@ %r30 bra $L4;
.loc 1 69 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 69 9
mov.u32 %r32,34;
st.u32 [%r31],%r32;
.loc 1 70 10
mov.f64 %r24,0dfff0000000000000;
bra $L1;
$L4:
.loc 1 73 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 73 9
mov.u32 %r34,33;
st.u32 [%r33],%r34;
.loc 1 74 10
cvta.const.u64 %r35,$LC0;
{
.param .f64 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r35;
call (%value_in),nan,(%out_arg1);
ld.param.f64 %r36,[%value_in];
}
mov.f64 %r24,%r36;
$L1:
.loc 1 79 1
mov.f64 %value,%r24;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_pow.o/  1612277259  0     0     100666  4255      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: pow
.visible .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_pow.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_pow
.extern .func (.param .f64 %value_out) __ieee754_pow (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: pow
.visible .func (.param .f64 %value_out) pow (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r32;
.reg .f64 %r33;
.reg .f64 %r34;
.reg .f64 %r37;
.reg .pred %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .u32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .u64 %r45;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .pred %r49;
.reg .u32 %r51;
.reg .pred %r52;
.reg .u32 %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .u64 %r57;
.reg .u32 %r58;
.reg .u64 %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .pred %r64;
.reg .u32 %r66;
.reg .pred %r67;
.reg .u64 %r68;
.reg .u32 %r69;
mov.f64 %r33,%ar0;
mov.f64 %r34,%ar1;
.loc 1 69 4
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r34;
call (%value_in),__ieee754_pow,(%out_arg1,%out_arg2);
ld.param.f64 %r37,[%value_in];
}
mov.f64 %r32,%r37;
.loc 1 70 4
setp.nan.f64 %r38,%r34,%r34;
@ %r38 bra $L1;
.loc 1 71 4
setp.neu.f64 %r39,%r33,0d0000000000000000;
@ %r39 bra $L3;
.loc 1 72 8
setp.eq.f64 %r40,%r34,0d0000000000000000;
@ %r40 bra $L7;
.loc 1 77 9
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r34;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r42,[%value_in];
}
.loc 1 77 8
setp.eq.u32 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 77 18
setp.lt.f64 %r44,%r34,0d0000000000000000;
@ ! %r44 bra $L1;
.loc 1 79 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r45,[%value_in];
}
.loc 1 79 9
mov.u32 %r46,34;
st.u32 [%r45],%r46;
bra $L1;
$L3:
.loc 1 83 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r48,[%value_in];
}
.loc 1 83 4
setp.ne.u32 %r49,%r48,0;
@ %r49 bra $L5;
.loc 1 84 9
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r51,[%value_in];
}
.loc 1 84 8
setp.eq.u32 %r52,%r51,0;
@ %r52 bra $L5;
.loc 1 84 20
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r34;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r54,[%value_in];
}
.loc 1 84 18
setp.eq.u32 %r55,%r54,0;
@ %r55 bra $L5;
.loc 1 85 12
setp.num.f64 %r56,%r32,%r32;
@ %r56 bra $L6;
.loc 1 87 7
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r57,[%value_in];
}
.loc 1 87 13
mov.u32 %r58,33;
st.u32 [%r57],%r58;
bra $L1;
$L6:
.loc 1 90 7
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r59,[%value_in];
}
.loc 1 90 13
mov.u32 %r60,34;
st.u32 [%r59],%r60;
bra $L1;
$L5:
.loc 1 95 4
setp.neu.f64 %r61,%r37,0d0000000000000000;
@ %r61 bra $L1;
.loc 1 95 13
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r33;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r63,[%value_in];
}
.loc 1 95 11
setp.eq.u32 %r64,%r63,0;
@ %r64 bra $L1;
.loc 1 95 24
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r34;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r66,[%value_in];
}
.loc 1 95 22
setp.eq.u32 %r67,%r66,0;
@ %r67 bra $L1;
.loc 1 97 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r68,[%value_in];
}
.loc 1 97 12
mov.u32 %r69,34;
st.u32 [%r68],%r69;
bra $L1;
$L7:
.loc 1 75 10
mov.f64 %r32,0d3ff0000000000000;
$L1:
.loc 1 101 1
mov.f64 %value,%r32;
st.param.f64 [%value_out],%value;
ret;
}

/1968           1612277259  0     0     100666  2008      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remainder
.visible .func (.param .f64 %value_out) remainder (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_remainder.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_remainder
.extern .func (.param .f64 %value_out) __ieee754_remainder (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: remainder
.visible .func (.param .f64 %value_out) remainder (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r26;
.reg .f64 %r27;
.reg .f64 %r28;
.reg .f64 %r31;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .u16 %r38;
.reg .u16 %r39;
.reg .u16 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .pred %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .f64 %r46;
mov.f64 %r27,%ar0;
mov.f64 %r28,%ar1;
.loc 1 60 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r27;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r28;
call (%value_in),__ieee754_remainder,(%out_arg1,%out_arg2);
ld.param.f64 %r31,[%value_in];
}
mov.f64 %r26,%r31;
.loc 1 62 4
set.u32.eq.f64 %r33,%r28,0d0000000000000000;
neg.s32 %r34,%r33;
.loc 1 61 4
set.u32.num.f64 %r36,%r28,%r28;
neg.s32 %r37,%r36;
.loc 1 62 4
cvt.u16.u32 %r39,%r34;
cvt.u16.u32 %r40,%r37;
and.b16 %r38,%r39,%r40;
cvt.u32.u16 %r41,%r38;
cvt.u16.u8 %r42,%r41;
setp.eq.u16 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 64 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r44,[%value_in];
}
.loc 1 64 12
mov.u32 %r45,33;
st.u32 [%r44],%r45;
.loc 1 65 16
mov.f64 %r46,0d0000000000000000;
div.rn.f64 %r26,%r46,%r46;
$L1:
.loc 1 69 1
mov.f64 %value,%r26;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-w_scalb.o/1612277259  0     0     100666  4195      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalb
.visible .func (.param .f64 %value_out) scalb (.param .f64 %in_ar0, .param .f64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/w_scalb.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalb
.extern .func (.param .f64 %value_out) __ieee754_scalb (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: copysign
.extern .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: scalb
.visible .func (.param .f64 %value_out) scalb (.param .f64 %in_ar0, .param .f64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %ar1;
ld.param.f64 %ar1,[%in_ar1];
.reg .f64 %r34;
.reg .f64 %r35;
.reg .f64 %r36;
.reg .f64 %r39;
.reg .u32 %r41;
.reg .u32 %r43;
.reg .u32 %r44;
.reg .u32 %r46;
.reg .u32 %r47;
.reg .u16 %r48;
.reg .u16 %r49;
.reg .u16 %r50;
.reg .u32 %r51;
.reg .u16 %r52;
.reg .pred %r53;
.reg .u32 %r55;
.reg .pred %r56;
.reg .u64 %r57;
.reg .u32 %r58;
.reg .pred %r59;
.reg .u32 %r61;
.reg .u32 %r62;
.reg .u32 %r64;
.reg .u32 %r65;
.reg .u16 %r66;
.reg .u16 %r67;
.reg .u16 %r68;
.reg .u32 %r69;
.reg .u16 %r70;
.reg .pred %r71;
.reg .u64 %r72;
.reg .u32 %r73;
.reg .f64 %r74;
.reg .f64 %r76;
.reg .u32 %r78;
.reg .pred %r79;
.reg .u64 %r80;
.reg .u32 %r81;
mov.f64 %r35,%ar0;
mov.f64 %r36,%ar1;
.loc 1 44 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r36;
call (%value_in),__ieee754_scalb,(%out_arg1,%out_arg2);
ld.param.f64 %r39,[%value_in];
}
mov.f64 %r34,%r39;
.loc 1 46 7
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r34;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r41,[%value_in];
}
.loc 1 46 5
set.u32.num.f64 %r43,%r34,%r34;
neg.s32 %r44,%r43;
.loc 1 46 4
set.u32.eq.u32 %r46,%r41,0;
neg.s32 %r47,%r46;
.loc 1 46 5
cvt.u16.u32 %r49,%r44;
cvt.u16.u32 %r50,%r47;
and.b16 %r48,%r49,%r50;
cvt.u32.u16 %r51,%r48;
cvt.u16.u8 %r52,%r51;
setp.eq.u16 %r53,%r52,0;
@ %r53 bra $L2;
.loc 1 46 29
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r35;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r55,[%value_in];
}
.loc 1 46 27
setp.eq.u32 %r56,%r55,0;
@ %r56 bra $L2;
.loc 1 48 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r57,[%value_in];
}
.loc 1 48 12
mov.u32 %r58,34;
st.u32 [%r57],%r58;
.loc 1 49 33
setp.gt.f64 %r59,%r35,0d0000000000000000;
selp.f64 %r34,0d7ff0000000000000,0dfff0000000000000,%r59;
bra $L1;
$L2:
.loc 1 51 6
set.u32.eq.f64 %r61,%r39,0d0000000000000000;
neg.s32 %r62,%r61;
.loc 1 51 14
set.u32.neu.f64 %r64,%r35,%r39;
neg.s32 %r65,%r64;
.loc 1 51 11
cvt.u16.u32 %r67,%r62;
cvt.u16.u32 %r68,%r65;
and.b16 %r66,%r67,%r68;
.loc 1 51 4
cvt.u32.u16 %r69,%r66;
cvt.u16.u8 %r70,%r69;
setp.eq.u16 %r71,%r70,0;
@ %r71 bra $L4;
.loc 1 53 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r72,[%value_in];
}
.loc 1 53 12
mov.u32 %r73,34;
st.u32 [%r72],%r73;
.loc 1 54 13
mov.f64 %r74,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r74;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r35;
call (%value_in),copysign,(%out_arg1,%out_arg2);
ld.param.f64 %r76,[%value_in];
}
mov.f64 %r34,%r76;
bra $L1;
$L4:
.loc 1 57 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r36;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r78,[%value_in];
}
.loc 1 57 4
setp.ne.u32 %r79,%r78,0;
@ %r79 bra $L1;
.loc 1 57 18
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r80,[%value_in];
}
.loc 1 57 24
mov.u32 %r81,34;
st.u32 [%r80],%r81;
$L1:
.loc 1 61 1
mov.f64 %value,%r34;
st.param.f64 [%value_out],%value;
ret;
}

/1989           1612277259  0     0     100666  1308      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sincos
.visible .func sincos (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/math/w_sincos.c"
// BEGIN GLOBAL FUNCTION DECL: sin
.extern .func (.param .f64 %value_out) sin (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cos
.extern .func (.param .f64 %value_out) cos (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: sincos
.visible .func sincos (.param .f64 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f64 %r24;
.reg .u64 %r25;
.reg .u64 %r26;
.reg .f64 %r28;
.reg .f64 %r30;
mov.f64 %r24,%ar0;
mov.u64 %r25,%ar1;
mov.u64 %r26,%ar2;
.loc 1 18 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),sin,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
.loc 1 18 9
st.f64 [%r25],%r28;
.loc 1 19 11
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),cos,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 19 9
st.f64 [%r26],%r30;
.loc 1 20 1
ret;
}
lib_a-w_sinh.o/ 1612277259  0     0     100666  1935      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sinh
.visible .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_sinh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sinh
.extern .func (.param .f64 %value_out) __ieee754_sinh (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: sinh
.visible .func (.param .f64 %value_out) sinh (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r25;
.reg .f64 %r26;
.reg .f64 %r28;
.reg .u32 %r30;
.reg .pred %r31;
.reg .u32 %r33;
.reg .pred %r34;
.reg .u64 %r35;
.reg .u32 %r36;
.reg .pred %r37;
mov.f64 %r26,%ar0;
.loc 1 78 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),__ieee754_sinh,(%out_arg1);
ld.param.f64 %r28,[%value_in];
}
mov.f64 %r25,%r28;
.loc 1 80 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r25;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r30,[%value_in];
}
.loc 1 80 4
setp.ne.u32 %r31,%r30,0;
@ %r31 bra $L1;
.loc 1 80 17
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r33,[%value_in];
}
.loc 1 80 15
setp.eq.u32 %r34,%r33,0;
@ %r34 bra $L1;
.loc 1 82 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r35,[%value_in];
}
.loc 1 82 12
mov.u32 %r36,34;
st.u32 [%r35],%r36;
.loc 1 83 33
setp.gt.f64 %r37,%r26,0d0000000000000000;
selp.f64 %r25,0d7ff0000000000000,0dfff0000000000000,%r37;
$L1:
.loc 1 87 1
mov.f64 %value,%r25;
st.param.f64 [%value_out],%value;
ret;
}

lib_a-w_sqrt.o/ 1612277259  0     0     100666  1434      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sqrt
.visible .func (.param .f64 %value_out) sqrt (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_sqrt.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrt
.extern .func (.param .f64 %value_out) __ieee754_sqrt (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: sqrt
.visible .func (.param .f64 %value_out) sqrt (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r23;
.reg .f64 %r24;
.reg .f64 %r26;
.reg .pred %r27;
.reg .pred %r28;
.reg .u64 %r29;
.reg .u32 %r30;
.reg .f64 %r31;
mov.f64 %r24,%ar0;
.loc 1 61 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r24;
call (%value_in),__ieee754_sqrt,(%out_arg1);
ld.param.f64 %r26,[%value_in];
}
mov.f64 %r23,%r26;
.loc 1 62 4
setp.nan.f64 %r27,%r24,%r24;
@ %r27 bra $L1;
.loc 1 63 4
setp.lt.f64 %r28,%r24,0d0000000000000000;
@ ! %r28 bra $L1;
.loc 1 64 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r29,[%value_in];
}
.loc 1 64 12
mov.u32 %r30,33;
st.u32 [%r29],%r30;
.loc 1 65 16
mov.f64 %r31,0d0000000000000000;
div.rn.f64 %r23,%r31,%r31;
$L1:
.loc 1 69 1
mov.f64 %value,%r23;
st.param.f64 [%value_out],%value;
ret;
}
/2007           1612277259  0     0     100666  2452      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tgamma
.visible .func (.param .f64 %value_out) tgamma (.param .f64 %in_ar0);
.file 1 "../../../../../newlib/libm/math/w_tgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_tgamma
.extern .func (.param .f64 %value_out) __ieee754_tgamma (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: floor
.extern .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: tgamma
.visible .func (.param .f64 %value_out) tgamma (.param .f64 %in_ar0)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .f64 %r28;
.reg .f64 %r30;
.reg .u32 %r32;
.reg .pred %r33;
.reg .pred %r34;
.reg .f64 %r36;
.reg .pred %r37;
.reg .u64 %r38;
.reg .u32 %r39;
.reg .u32 %r41;
.reg .pred %r42;
.reg .u64 %r43;
.reg .u32 %r44;
mov.f64 %r28,%ar0;
.loc 1 31 6
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),__ieee754_tgamma,(%out_arg1);
ld.param.f64 %r30,[%value_in];
}
.loc 1 37 6
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r30;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r32,[%value_in];
}
.loc 1 37 4
setp.eq.u32 %r33,%r32,0;
@ ! %r33 bra $L1;
.loc 1 38 6
setp.lt.f64 %r34,%r28,0d0000000000000000;
@ ! %r34 bra $L4;
.loc 1 38 18
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r36,[%value_in];
}
.loc 1 38 15
setp.neu.f64 %r37,%r36,%r28;
@ %r37 bra $L4;
.loc 1 39 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r38,[%value_in];
}
.loc 1 39 12
mov.u32 %r39,33;
st.u32 [%r38],%r39;
bra $L1;
$L4:
.loc 1 40 13
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r41,[%value_in];
}
.loc 1 40 12
setp.eq.u32 %r42,%r41,0;
@ %r42 bra $L1;
.loc 1 41 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r43,[%value_in];
}
.loc 1 41 12
mov.u32 %r44,34;
st.u32 [%r43],%r44;
$L1:
.loc 1 45 1
mov.f64 %value,%r30;
st.param.f64 [%value_out],%value;
ret;
}
lib_a-wf_acos.o/1612277259  0     0     100666  2049      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: acosf
.visible .func (.param .f32 %value_out) acosf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_acos.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acosf
.extern .func (.param .f32 %value_out) __ieee754_acosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nanf
.extern .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: acosf
.visible .func (.param .f32 %value_out) acosf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u64 %r34;
.reg .f32 %r35;
mov.f32 %r25,%ar0;
.loc 1 29 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_acosf,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 30 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 31 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 31 4
setp.gt.f32 %r31,%r30,0f3f800000;
@ ! %r31 bra $L1;
.loc 1 33 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 33 12
mov.u32 %r33,33;
st.u32 [%r32],%r33;
.loc 1 34 13
cvta.const.u64 %r34,$LC0;
{
.param .f32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r34;
call (%value_in),nanf,(%out_arg1);
ld.param.f32 %r35,[%value_in];
}
mov.f32 %r24,%r35;
$L1:
.loc 1 38 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

/2025           1612277259  0     0     100666  1434      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: acoshf
.visible .func (.param .f32 %value_out) acoshf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_acosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_acoshf
.extern .func (.param .f32 %value_out) __ieee754_acoshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: acoshf
.visible .func (.param .f32 %value_out) acoshf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
.reg .pred %r27;
.reg .pred %r28;
.reg .u64 %r29;
.reg .u32 %r30;
.reg .f32 %r31;
mov.f32 %r24,%ar0;
.loc 1 35 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),__ieee754_acoshf,(%out_arg1);
ld.param.f32 %r26,[%value_in];
}
mov.f32 %r23,%r26;
.loc 1 36 4
setp.nan.f32 %r27,%r24,%r24;
@ %r27 bra $L1;
.loc 1 37 4
setp.lt.f32 %r28,%r24,0f3f800000;
@ ! %r28 bra $L1;
.loc 1 39 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r29,[%value_in];
}
.loc 1 39 12
mov.u32 %r30,33;
st.u32 [%r29],%r30;
.loc 1 40 17
mov.f32 %r31,0f00000000;
div.rn.f32 %r23,%r31,%r31;
$L1:
.loc 1 44 1
mov.f32 %value,%r23;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-wf_asin.o/1612277259  0     0     100666  2049      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: asinf
.visible .func (.param .f32 %value_out) asinf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_asin.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_asinf
.extern .func (.param .f32 %value_out) __ieee754_asinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nanf
.extern .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: asinf
.visible .func (.param .f32 %value_out) asinf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
.reg .u64 %r34;
.reg .f32 %r35;
mov.f32 %r25,%ar0;
.loc 1 36 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_asinf,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 37 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 38 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 38 4
setp.gt.f32 %r31,%r30,0f3f800000;
@ ! %r31 bra $L1;
.loc 1 40 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 40 12
mov.u32 %r33,33;
st.u32 [%r32],%r33;
.loc 1 41 13
cvta.const.u64 %r34,$LC0;
{
.param .f32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r34;
call (%value_in),nanf,(%out_arg1);
ld.param.f32 %r35,[%value_in];
}
mov.f32 %r24,%r35;
$L1:
.loc 1 45 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

/2043           1612277259  0     0     100666  1078      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atan2f
.visible .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_atan2.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atan2f
.extern .func (.param .f32 %value_out) __ieee754_atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: atan2f
.visible .func (.param .f32 %value_out) atan2f (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r27;
mov.f32 %r23,%ar0;
mov.f32 %r24,%ar1;
.loc 1 31 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r24;
call (%value_in),__ieee754_atan2f,(%out_arg1,%out_arg2);
ld.param.f32 %r27,[%value_in];
}
.loc 1 32 1
mov.f32 %value,%r27;
st.param.f32 [%value_out],%value;
ret;
}
/2061           1612277259  0     0     100666  2062      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: atanhf
.visible .func (.param .f32 %value_out) atanhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_atanh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_atanhf
.extern .func (.param .f32 %value_out) __ieee754_atanhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: atanhf
.visible .func (.param .f32 %value_out) atanhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r28;
.reg .pred %r29;
.reg .f32 %r31;
.reg .pred %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .f32 %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f32 %r26,%ar0;
.loc 1 33 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__ieee754_atanhf,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
mov.f32 %r25,%r28;
.loc 1 34 4
setp.nan.f32 %r29,%r26,%r26;
@ %r29 bra $L1;
.loc 1 35 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r31,[%value_in];
}
.loc 1 36 4
setp.ge.f32 %r32,%r31,0f3f800000;
@ ! %r32 bra $L1;
.loc 1 37 8
setp.gt.f32 %r33,%r31,0f3f800000;
@ ! %r33 bra $L8;
.loc 1 39 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 39 9
mov.u32 %r35,33;
st.u32 [%r34],%r35;
.loc 1 40 14
mov.f32 %r36,0f00000000;
div.rn.f32 %r25,%r36,%r36;
bra $L1;
$L8:
.loc 1 43 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 43 9
mov.u32 %r38,33;
st.u32 [%r37],%r38;
.loc 1 44 11
div.rn.f32 %r25,%r26,0f00000000;
$L1:
.loc 1 49 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-wf_cosh.o/1612277259  0     0     100666  1673      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: coshf
.visible .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_cosh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_coshf
.extern .func (.param .f32 %value_out) __ieee754_coshf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: coshf
.visible .func (.param .f32 %value_out) coshf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f32 %r25,%ar0;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_coshf,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 35 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 36 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 36 4
setp.gt.f32 %r31,%r30,0f42b2d4fc;
@ ! %r31 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 38 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
.loc 1 39 13
mov.f32 %r24,0f7f800000;
$L1:
.loc 1 43 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_drem.o/1612277259  0     0     100666  1055      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: dremf
.visible .func (.param .f32 %value_out) dremf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_drem.c"
// BEGIN GLOBAL FUNCTION DECL: remainderf
.extern .func (.param .f32 %value_out) remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: dremf
.visible .func (.param .f32 %value_out) dremf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r27;
mov.f32 %r23,%ar0;
mov.f32 %r24,%ar1;
.loc 1 18 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r24;
call (%value_in),remainderf,(%out_arg1,%out_arg2);
ld.param.f32 %r27,[%value_in];
}
.loc 1 19 1
mov.f32 %value,%r27;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_exp.o/ 1612277259  0     0     100666  1998      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: expf
.visible .func (.param .f32 %value_out) expf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_exp.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_expf
.extern .func (.param .f32 %value_out) __ieee754_expf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: expf
.visible .func (.param .f32 %value_out) expf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r28;
.reg .u32 %r30;
.reg .pred %r31;
.reg .pred %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u64 %r36;
.reg .u32 %r37;
mov.f32 %r26,%ar0;
.loc 1 43 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__ieee754_expf,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
mov.f32 %r25,%r28;
.loc 1 45 5
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r30,[%value_in];
}
.loc 1 45 4
setp.eq.u32 %r31,%r30,0;
@ %r31 bra $L1;
.loc 1 46 8
setp.gt.f32 %r32,%r26,0f42b17180;
@ ! %r32 bra $L11;
.loc 1 48 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 48 9
mov.u32 %r34,34;
st.u32 [%r33],%r34;
.loc 1 49 17
mov.f32 %r25,0f7f800000;
bra $L1;
$L11:
.loc 1 50 15
setp.lt.f32 %r35,%r26,0fc2cff1b5;
@ ! %r35 bra $L1;
.loc 1 52 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r36,[%value_in];
}
.loc 1 52 9
mov.u32 %r37,34;
st.u32 [%r36],%r37;
.loc 1 53 10
mov.f32 %r25,0f00000000;
$L1:
.loc 1 58 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-wf_exp2.o/1612277259  0     0     100666  955       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: exp2f
.visible .func (.param .f32 %value_out) exp2f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_exp2.c"
// BEGIN GLOBAL FUNCTION DECL: powf
.extern .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: exp2f
.visible .func (.param .f32 %value_out) exp2f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
mov.f32 %r23,%ar0;
.loc 1 32 10
mov.f32 %r24,0f40000000;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r23;
call (%value_in),powf,(%out_arg1,%out_arg2);
ld.param.f32 %r26,[%value_in];
}
.loc 1 33 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_fmod.o/1612277259  0     0     100666  1960      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: fmodf
.visible .func (.param .f32 %value_out) fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_fmod.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_fmodf
.extern .func (.param .f32 %value_out) __ieee754_fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: fmodf
.visible .func (.param .f32 %value_out) fmodf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r31;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .u16 %r38;
.reg .u16 %r39;
.reg .u16 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .pred %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .f32 %r46;
mov.f32 %r27,%ar0;
mov.f32 %r28,%ar1;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r28;
call (%value_in),__ieee754_fmodf,(%out_arg1,%out_arg2);
ld.param.f32 %r31,[%value_in];
}
mov.f32 %r26,%r31;
.loc 1 36 4
set.u32.eq.f32 %r33,%r28,0f00000000;
neg.s32 %r34,%r33;
.loc 1 35 4
set.u32.num.f32 %r36,%r27,%r28;
neg.s32 %r37,%r36;
.loc 1 36 4
cvt.u16.u32 %r39,%r34;
cvt.u16.u32 %r40,%r37;
and.b16 %r38,%r39,%r40;
cvt.u32.u16 %r41,%r38;
cvt.u16.u8 %r42,%r41;
setp.eq.u16 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r44,[%value_in];
}
.loc 1 38 12
mov.u32 %r45,33;
st.u32 [%r44],%r45;
.loc 1 39 18
mov.f32 %r46,0f00000000;
div.rn.f32 %r26,%r46,%r46;
$L1:
.loc 1 43 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
/2079           1612277259  0     0     100666  838       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: gammaf
.visible .func (.param .f32 %value_out) gammaf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_gamma.c"
// BEGIN GLOBAL FUNCTION DECL: lgammaf
.extern .func (.param .f32 %value_out) lgammaf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: gammaf
.visible .func (.param .f32 %value_out) gammaf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r25;
mov.f32 %r23,%ar0;
.loc 1 28 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
call (%value_in),lgammaf,(%out_arg1);
ld.param.f32 %r25,[%value_in];
}
.loc 1 29 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}
/2097           1612277259  0     0     100666  2337      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: hypotf
.visible .func (.param .f32 %value_out) hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_hypot.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_hypotf
.extern .func (.param .f32 %value_out) __ieee754_hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: hypotf
.visible .func (.param .f32 %value_out) hypotf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r31;
.reg .u32 %r33;
.reg .pred %r34;
.reg .u32 %r36;
.reg .pred %r37;
.reg .u32 %r39;
.reg .pred %r40;
.reg .u64 %r41;
.reg .u32 %r42;
mov.f32 %r27,%ar0;
mov.f32 %r28,%ar1;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r28;
call (%value_in),__ieee754_hypotf,(%out_arg1,%out_arg2);
ld.param.f32 %r31,[%value_in];
}
mov.f32 %r26,%r31;
.loc 1 36 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r33,[%value_in];
}
.loc 1 36 4
setp.ne.u32 %r34,%r33,0;
@ %r34 bra $L1;
.loc 1 36 20
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r36,[%value_in];
}
.loc 1 36 18
setp.eq.u32 %r37,%r36,0;
@ %r37 bra $L1;
.loc 1 36 32
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r39,[%value_in];
}
.loc 1 36 30
setp.eq.u32 %r40,%r39,0;
@ %r40 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r41,[%value_in];
}
.loc 1 38 12
mov.u32 %r42,34;
st.u32 [%r41],%r42;
.loc 1 39 13
mov.f32 %r26,0f7f800000;
$L1:
.loc 1 43 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_j0.o/  1612277259  0     0     100666  3225      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: j0f
.visible .func (.param .f32 %value_out) j0f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_j0.c"
// BEGIN GLOBAL FUNCTION DECL: y0f
.visible .func (.param .f32 %value_out) y0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j0f
.extern .func (.param .f32 %value_out) __ieee754_j0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y0f
.extern .func (.param .f32 %value_out) __ieee754_y0f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: j0f
.visible .func (.param .f32 %value_out) j0f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f32 %r25,%ar0;
.loc 1 33 12
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_j0f,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
.loc 1 34 4
setp.num.f32 %r28,%r25,%r25;
@ ! %r28 bra $L1;
.loc 1 35 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 35 4
setp.gt.f32 %r31,%r30,0f5a490fdb;
@ ! %r31 bra $L1;
.loc 1 37 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 37 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
$L1:
.loc 1 41 1
mov.f32 %value,%r27;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: y0f
.visible .func (.param .f32 %value_out) y0f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r26;
.reg .f32 %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f32 %r26,%ar0;
.loc 1 54 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__ieee754_y0f,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
.loc 1 55 4
setp.num.f32 %r29,%r26,%r26;
@ ! %r29 bra $L7;
.loc 1 56 11
setp.lt.f32 %r30,%r26,0f00000000;
@ ! %r30 bra $L17;
.loc 1 58 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 58 12
mov.u32 %r32,33;
st.u32 [%r31],%r32;
bra $L12;
$L17:
.loc 1 60 5
setp.neu.f32 %r33,%r26,0f00000000;
@ %r33 bra $L12;
.loc 1 62 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 62 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
$L12:
.loc 1 64 4
setp.gt.f32 %r36,%r26,0f5a490fdb;
@ ! %r36 bra $L7;
.loc 1 66 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 66 12
mov.u32 %r38,34;
st.u32 [%r37],%r38;
$L7:
.loc 1 70 1
mov.f32 %value,%r28;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_j1.o/  1612277259  0     0     100666  3299      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: j1f
.visible .func (.param .f32 %value_out) j1f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_j1.c"
// BEGIN GLOBAL FUNCTION DECL: y1f
.visible .func (.param .f32 %value_out) y1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_j1f
.extern .func (.param .f32 %value_out) __ieee754_j1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_y1f
.extern .func (.param .f32 %value_out) __ieee754_y1f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: j1f
.visible .func (.param .f32 %value_out) j1f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .u64 %r32;
.reg .u32 %r33;
mov.f32 %r25,%ar0;
.loc 1 35 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_j1f,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 36 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 37 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 37 4
setp.gt.f32 %r31,%r30,0f5a490fdb;
@ ! %r31 bra $L1;
.loc 1 39 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r32,[%value_in];
}
.loc 1 39 12
mov.u32 %r33,34;
st.u32 [%r32],%r33;
.loc 1 40 13
mov.f32 %r24,0f00000000;
$L1:
.loc 1 44 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: y1f
.visible .func (.param .f32 %value_out) y1f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r26;
.reg .f32 %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u64 %r37;
.reg .u32 %r38;
mov.f32 %r26,%ar0;
.loc 1 57 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__ieee754_y1f,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
.loc 1 58 4
setp.num.f32 %r29,%r26,%r26;
@ ! %r29 bra $L5;
.loc 1 59 11
setp.lt.f32 %r30,%r26,0f00000000;
@ ! %r30 bra $L15;
.loc 1 61 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 61 12
mov.u32 %r32,33;
st.u32 [%r31],%r32;
bra $L10;
$L15:
.loc 1 63 5
setp.neu.f32 %r33,%r26,0f00000000;
@ %r33 bra $L10;
.loc 1 65 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 65 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
$L10:
.loc 1 67 4
setp.gt.f32 %r36,%r26,0f5a490fdb;
@ ! %r36 bra $L5;
.loc 1 69 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r37,[%value_in];
}
.loc 1 69 12
mov.u32 %r38,34;
st.u32 [%r37],%r38;
$L5:
.loc 1 73 1
mov.f32 %value,%r28;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_jn.o/  1612277259  0     0     100666  3650      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: jnf
.visible .func (.param .f32 %value_out) jnf (.param .u32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_jn.c"
// BEGIN GLOBAL FUNCTION DECL: ynf
.visible .func (.param .f32 %value_out) ynf (.param .u32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __ieee754_jnf
.extern .func (.param .f32 %value_out) __ieee754_jnf (.param .u32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: fabsf
.extern .func (.param .f32 %value_out) fabsf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: __ieee754_ynf
.extern .func (.param .f32 %value_out) __ieee754_ynf (.param .u32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: jnf
.visible .func (.param .f32 %value_out) jnf (.param .u32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r25;
.reg .f32 %r26;
.reg .f32 %r29;
.reg .pred %r30;
.reg .f32 %r32;
.reg .pred %r33;
.reg .u64 %r34;
.reg .u32 %r35;
mov.u32 %r25,%ar0;
mov.f32 %r26,%ar1;
.loc 1 31 6
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r25;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r26;
call (%value_in),__ieee754_jnf,(%out_arg1,%out_arg2);
ld.param.f32 %r29,[%value_in];
}
.loc 1 32 4
setp.num.f32 %r30,%r26,%r26;
@ ! %r30 bra $L1;
.loc 1 33 5
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),fabsf,(%out_arg1);
ld.param.f32 %r32,[%value_in];
}
.loc 1 33 4
setp.gt.f32 %r33,%r32,0f5a490fdb;
@ ! %r33 bra $L1;
.loc 1 35 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r34,[%value_in];
}
.loc 1 35 12
mov.u32 %r35,34;
st.u32 [%r34],%r35;
$L1:
.loc 1 39 1
mov.f32 %value,%r29;
st.param.f32 [%value_out],%value;
ret;
}
// BEGIN GLOBAL FUNCTION DEF: ynf
.visible .func (.param .f32 %value_out) ynf (.param .u32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .u32 %ar0;
ld.param.u32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .u32 %r26;
.reg .f32 %r27;
.reg .f32 %r30;
.reg .pred %r31;
.reg .pred %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u64 %r36;
.reg .u32 %r37;
.reg .pred %r38;
.reg .u64 %r39;
.reg .u32 %r40;
mov.u32 %r26,%ar0;
mov.f32 %r27,%ar1;
.loc 1 52 6
{
.param .f32 %value_in;
.param .u32 %out_arg1;
st.param.u32 [%out_arg1],%r26;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r27;
call (%value_in),__ieee754_ynf,(%out_arg1,%out_arg2);
ld.param.f32 %r30,[%value_in];
}
.loc 1 53 4
setp.num.f32 %r31,%r27,%r27;
@ ! %r31 bra $L7;
.loc 1 54 11
setp.lt.f32 %r32,%r27,0f00000000;
@ ! %r32 bra $L17;
.loc 1 56 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 56 12
mov.u32 %r34,33;
st.u32 [%r33],%r34;
bra $L12;
$L17:
.loc 1 58 5
setp.neu.f32 %r35,%r27,0f00000000;
@ %r35 bra $L12;
.loc 1 60 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r36,[%value_in];
}
.loc 1 60 12
mov.u32 %r37,34;
st.u32 [%r36],%r37;
$L12:
.loc 1 62 4
setp.gt.f32 %r38,%r27,0f5a490fdb;
@ ! %r38 bra $L7;
.loc 1 64 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r39,[%value_in];
}
.loc 1 64 12
mov.u32 %r40,34;
st.u32 [%r39],%r40;
$L7:
.loc 1 68 1
mov.f32 %value,%r30;
st.param.f32 [%value_out],%value;
ret;
}
/2115           1612277259  0     0     100666  2069      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lgammaf
.visible .func (.param .f32 %value_out) lgammaf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_lgamma.c"
// BEGIN GLOBAL VAR DECL: _impure_ptr
.extern .global .align 8 .u64 _impure_ptr[1];
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgammaf_r
.extern .func (.param .f32 %value_out) __ieee754_lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: lgammaf
.visible .func (.param .f32 %value_out) lgammaf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r28;
.reg .u64 %r31;
.reg .u64 %r32;
.reg .f32 %r33;
.reg .u32 %r35;
.reg .pred %r36;
.reg .u32 %r38;
.reg .pred %r39;
.reg .u64 %r40;
.reg .u32 %r41;
mov.f32 %r28,%ar0;
.loc 1 32 13
ld.global.u64 %r32,[_impure_ptr];
add.u64 %r31,%r32,224;
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r31;
call (%value_in),__ieee754_lgammaf_r,(%out_arg1,%out_arg2);
ld.param.f32 %r33,[%value_in];
}
.loc 1 34 13
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r35,[%value_in];
}
.loc 1 34 11
setp.eq.u32 %r36,%r35,0;
@ ! %r36 bra $L1;
.loc 1 34 25
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r38,[%value_in];
}
.loc 1 34 23
setp.eq.u32 %r39,%r38,0;
@ %r39 bra $L1;
.loc 1 36 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r40,[%value_in];
}
.loc 1 36 12
mov.u32 %r41,34;
st.u32 [%r40],%r41;
$L1:
.loc 1 40 1
mov.f32 %value,%r33;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_log.o/ 1612277259  0     0     100666  2077      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: logf
.visible .func (.param .f32 %value_out) logf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_log.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_logf
.extern .func (.param .f32 %value_out) __ieee754_logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nanf
.extern .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: logf
.visible .func (.param .f32 %value_out) logf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u64 %r35;
.reg .f32 %r36;
mov.f32 %r25,%ar0;
.loc 1 35 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_logf,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 36 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 36 40
setp.gt.f32 %r29,%r25,0f00000000;
@ %r29 bra $L1;
.loc 1 37 4
setp.neu.f32 %r30,%r25,0f00000000;
@ %r30 bra $L3;
.loc 1 39 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 39 12
mov.u32 %r32,34;
st.u32 [%r31],%r32;
.loc 1 40 13
mov.f32 %r24,0fff800000;
bra $L1;
$L3:
.loc 1 43 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 43 12
mov.u32 %r34,33;
st.u32 [%r33],%r34;
.loc 1 44 13
cvta.const.u64 %r35,$LC0;
{
.param .f32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r35;
call (%value_in),nanf,(%out_arg1);
ld.param.f32 %r36,[%value_in];
}
mov.f32 %r24,%r36;
$L1:
.loc 1 47 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}

/2134           1612277259  0     0     100666  2092      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// BEGIN GLOBAL FUNCTION DECL: log10f
.visible .func (.param .f32 %value_out) log10f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_log10.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_log10f
.extern .func (.param .f32 %value_out) __ieee754_log10f (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: nanf
.extern .func (.param .f32 %value_out) nanf (.param .u64 %in_ar0);
// END PREAMBLE
// BEGIN VAR DEF: $LC0
.const .align 1 .u8 $LC0[1] =
{0 };
// BEGIN GLOBAL FUNCTION DEF: log10f
.visible .func (.param .f32 %value_out) log10f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r25;
.reg .f32 %r27;
.reg .pred %r28;
.reg .pred %r29;
.reg .pred %r30;
.reg .u64 %r31;
.reg .u32 %r32;
.reg .u64 %r33;
.reg .u32 %r34;
.reg .u64 %r35;
.reg .f32 %r36;
mov.f32 %r25,%ar0;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),__ieee754_log10f,(%out_arg1);
ld.param.f32 %r27,[%value_in];
}
mov.f32 %r24,%r27;
.loc 1 35 4
setp.nan.f32 %r28,%r25,%r25;
@ %r28 bra $L1;
.loc 1 36 4
setp.le.f32 %r29,%r25,0f00000000;
@ ! %r29 bra $L1;
.loc 1 37 8
setp.neu.f32 %r30,%r25,0f00000000;
@ %r30 bra $L4;
.loc 1 39 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r31,[%value_in];
}
.loc 1 39 9
mov.u32 %r32,34;
st.u32 [%r31],%r32;
.loc 1 40 10
mov.f32 %r24,0fff800000;
bra $L1;
$L4:
.loc 1 43 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r33,[%value_in];
}
.loc 1 43 9
mov.u32 %r34,33;
st.u32 [%r33],%r34;
.loc 1 44 10
cvta.const.u64 %r35,$LC0;
{
.param .f32 %value_in;
.param .u64 %out_arg1;
st.param.u64 [%out_arg1],%r35;
call (%value_in),nanf,(%out_arg1);
ld.param.f32 %r36,[%value_in];
}
mov.f32 %r24,%r36;
$L1:
.loc 1 49 1
mov.f32 %value,%r24;
st.param.f32 [%value_out],%value;
ret;
}
lib_a-wf_log2.o/1612277259  0     0     100666  853       `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: log2f
.visible .func (.param .f32 %value_out) log2f (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_log2.c"
// BEGIN GLOBAL FUNCTION DECL: logf
.extern .func (.param .f32 %value_out) logf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: log2f
.visible .func (.param .f32 %value_out) log2f (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r24;
.reg .f32 %r26;
mov.f32 %r24,%ar0;
.loc 1 34 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),logf,(%out_arg1);
ld.param.f32 %r26,[%value_in];
}
.loc 1 34 19
div.rn.f32 %value,%r26,0f3f317218;
.loc 1 35 1
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_pow.o/ 1612277259  0     0     100666  4229      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: powf
.visible .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_pow.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_powf
.extern .func (.param .f32 %value_out) __ieee754_powf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: powf
.visible .func (.param .f32 %value_out) powf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r32;
.reg .f32 %r33;
.reg .f32 %r34;
.reg .f32 %r37;
.reg .pred %r38;
.reg .pred %r39;
.reg .pred %r40;
.reg .u32 %r42;
.reg .pred %r43;
.reg .pred %r44;
.reg .u64 %r45;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .pred %r49;
.reg .u32 %r51;
.reg .pred %r52;
.reg .u32 %r54;
.reg .pred %r55;
.reg .pred %r56;
.reg .u64 %r57;
.reg .u32 %r58;
.reg .u64 %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .pred %r64;
.reg .u32 %r66;
.reg .pred %r67;
.reg .u64 %r68;
.reg .u32 %r69;
mov.f32 %r33,%ar0;
mov.f32 %r34,%ar1;
.loc 1 35 4
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r34;
call (%value_in),__ieee754_powf,(%out_arg1,%out_arg2);
ld.param.f32 %r37,[%value_in];
}
mov.f32 %r32,%r37;
.loc 1 36 4
setp.nan.f32 %r38,%r34,%r34;
@ %r38 bra $L1;
.loc 1 37 4
setp.neu.f32 %r39,%r33,0f00000000;
@ %r39 bra $L3;
.loc 1 38 8
setp.eq.f32 %r40,%r34,0f00000000;
@ %r40 bra $L7;
.loc 1 43 9
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r34;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r42,[%value_in];
}
.loc 1 43 8
setp.eq.u32 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 43 19
setp.lt.f32 %r44,%r34,0f00000000;
@ ! %r44 bra $L1;
.loc 1 45 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r45,[%value_in];
}
.loc 1 45 9
mov.u32 %r46,34;
st.u32 [%r45],%r46;
bra $L1;
$L3:
.loc 1 49 6
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r48,[%value_in];
}
.loc 1 49 4
setp.ne.u32 %r49,%r48,0;
@ %r49 bra $L5;
.loc 1 50 9
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r51,[%value_in];
}
.loc 1 50 8
setp.eq.u32 %r52,%r51,0;
@ %r52 bra $L5;
.loc 1 50 21
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r34;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r54,[%value_in];
}
.loc 1 50 19
setp.eq.u32 %r55,%r54,0;
@ %r55 bra $L5;
.loc 1 51 5
setp.num.f32 %r56,%r32,%r32;
@ %r56 bra $L6;
.loc 1 53 7
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r57,[%value_in];
}
.loc 1 53 13
mov.u32 %r58,33;
st.u32 [%r57],%r58;
bra $L1;
$L6:
.loc 1 58 7
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r59,[%value_in];
}
.loc 1 58 13
mov.u32 %r60,34;
st.u32 [%r59],%r60;
bra $L1;
$L5:
.loc 1 63 4
setp.neu.f32 %r61,%r37,0f00000000;
@ %r61 bra $L1;
.loc 1 63 14
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r33;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r63,[%value_in];
}
.loc 1 63 12
setp.eq.u32 %r64,%r63,0;
@ %r64 bra $L1;
.loc 1 63 26
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r34;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r66,[%value_in];
}
.loc 1 63 24
setp.eq.u32 %r67,%r66,0;
@ %r67 bra $L1;
.loc 1 65 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r68,[%value_in];
}
.loc 1 65 12
mov.u32 %r69,34;
st.u32 [%r68],%r69;
bra $L1;
$L7:
.loc 1 41 10
mov.f32 %r32,0f3f800000;
$L1:
.loc 1 69 1
mov.f32 %value,%r32;
st.param.f32 [%value_out],%value;
ret;
}

/2152           1612277259  0     0     100666  2000      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: remainderf
.visible .func (.param .f32 %value_out) remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_remainder.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_remainderf
.extern .func (.param .f32 %value_out) __ieee754_remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: remainderf
.visible .func (.param .f32 %value_out) remainderf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r26;
.reg .f32 %r27;
.reg .f32 %r28;
.reg .f32 %r31;
.reg .u32 %r33;
.reg .u32 %r34;
.reg .u32 %r36;
.reg .u32 %r37;
.reg .u16 %r38;
.reg .u16 %r39;
.reg .u16 %r40;
.reg .u32 %r41;
.reg .u16 %r42;
.reg .pred %r43;
.reg .u64 %r44;
.reg .u32 %r45;
.reg .f32 %r46;
mov.f32 %r27,%ar0;
mov.f32 %r28,%ar1;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r27;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r28;
call (%value_in),__ieee754_remainderf,(%out_arg1,%out_arg2);
ld.param.f32 %r31,[%value_in];
}
mov.f32 %r26,%r31;
.loc 1 36 4
set.u32.eq.f32 %r33,%r28,0f00000000;
neg.s32 %r34,%r33;
.loc 1 35 4
set.u32.num.f32 %r36,%r28,%r28;
neg.s32 %r37,%r36;
.loc 1 36 4
cvt.u16.u32 %r39,%r34;
cvt.u16.u32 %r40,%r37;
and.b16 %r38,%r39,%r40;
cvt.u32.u16 %r41,%r38;
cvt.u16.u8 %r42,%r41;
setp.eq.u16 %r43,%r42,0;
@ %r43 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r44,[%value_in];
}
.loc 1 38 12
mov.u32 %r45,33;
st.u32 [%r44],%r45;
.loc 1 39 17
mov.f32 %r46,0f00000000;
div.rn.f32 %r26,%r46,%r46;
$L1:
.loc 1 43 1
mov.f32 %value,%r26;
st.param.f32 [%value_out],%value;
ret;
}
/2174           1612277259  0     0     100666  4224      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: scalbf
.visible .func (.param .f32 %value_out) scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wf_scalb.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_scalbf
.extern .func (.param .f32 %value_out) __ieee754_scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: copysign
.extern .func (.param .f64 %value_out) copysign (.param .f64 %in_ar0, .param .f64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: scalbf
.visible .func (.param .f32 %value_out) scalbf (.param .f32 %in_ar0, .param .f32 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %ar1;
ld.param.f32 %ar1,[%in_ar1];
.reg .f32 %r36;
.reg .f32 %r37;
.reg .f32 %r38;
.reg .f32 %r41;
.reg .u32 %r43;
.reg .u32 %r45;
.reg .u32 %r46;
.reg .u32 %r48;
.reg .u32 %r49;
.reg .u16 %r50;
.reg .u16 %r51;
.reg .u16 %r52;
.reg .u32 %r53;
.reg .u16 %r54;
.reg .pred %r55;
.reg .u32 %r57;
.reg .pred %r58;
.reg .u64 %r59;
.reg .u32 %r60;
.reg .pred %r61;
.reg .u32 %r63;
.reg .u32 %r64;
.reg .u32 %r66;
.reg .u32 %r67;
.reg .u16 %r68;
.reg .u16 %r69;
.reg .u16 %r70;
.reg .u32 %r71;
.reg .u16 %r72;
.reg .pred %r73;
.reg .u64 %r74;
.reg .u32 %r75;
.reg .f64 %r76;
.reg .f64 %r78;
.reg .f64 %r79;
.reg .u32 %r81;
.reg .pred %r82;
.reg .u64 %r83;
.reg .u32 %r84;
mov.f32 %r37,%ar0;
mov.f32 %r38,%ar1;
.loc 1 44 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r37;
.param .f32 %out_arg2;
st.param.f32 [%out_arg2],%r38;
call (%value_in),__ieee754_scalbf,(%out_arg1,%out_arg2);
ld.param.f32 %r41,[%value_in];
}
mov.f32 %r36,%r41;
.loc 1 46 7
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r36;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r43,[%value_in];
}
.loc 1 46 5
set.u32.num.f32 %r45,%r36,%r36;
neg.s32 %r46,%r45;
.loc 1 46 4
set.u32.eq.u32 %r48,%r43,0;
neg.s32 %r49,%r48;
.loc 1 46 5
cvt.u16.u32 %r51,%r46;
cvt.u16.u32 %r52,%r49;
and.b16 %r50,%r51,%r52;
cvt.u32.u16 %r53,%r50;
cvt.u16.u8 %r54,%r53;
setp.eq.u16 %r55,%r54,0;
@ %r55 bra $L2;
.loc 1 46 30
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r37;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r57,[%value_in];
}
.loc 1 46 28
setp.eq.u32 %r58,%r57,0;
@ %r58 bra $L2;
.loc 1 48 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r59,[%value_in];
}
.loc 1 48 12
mov.u32 %r60,34;
st.u32 [%r59],%r60;
.loc 1 49 34
setp.gt.f32 %r61,%r37,0f00000000;
selp.f32 %r36,0f7f800000,0fff800000,%r61;
bra $L1;
$L2:
.loc 1 51 6
set.u32.eq.f32 %r63,%r41,0f00000000;
neg.s32 %r64,%r63;
.loc 1 51 15
set.u32.neu.f32 %r66,%r37,%r41;
neg.s32 %r67,%r66;
.loc 1 51 12
cvt.u16.u32 %r69,%r64;
cvt.u16.u32 %r70,%r67;
and.b16 %r68,%r69,%r70;
.loc 1 51 4
cvt.u32.u16 %r71,%r68;
cvt.u16.u8 %r72,%r71;
setp.eq.u16 %r73,%r72,0;
@ %r73 bra $L4;
.loc 1 53 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r74,[%value_in];
}
.loc 1 53 12
mov.u32 %r75,34;
st.u32 [%r74],%r75;
.loc 1 54 13
cvt.f64.f32 %r78,%r37;
mov.f64 %r76,0d0000000000000000;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r76;
.param .f64 %out_arg2;
st.param.f64 [%out_arg2],%r78;
call (%value_in),copysign,(%out_arg1,%out_arg2);
ld.param.f64 %r79,[%value_in];
}
cvt.rn.f32.f64 %r36,%r79;
bra $L1;
$L4:
.loc 1 57 6
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r38;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r81,[%value_in];
}
.loc 1 57 4
setp.ne.u32 %r82,%r81,0;
@ %r82 bra $L1;
.loc 1 57 19
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r83,[%value_in];
}
.loc 1 57 25
mov.u32 %r84,34;
st.u32 [%r83],%r84;
$L1:
.loc 1 61 1
mov.f32 %value,%r36;
st.param.f32 [%value_out],%value;
ret;
}
/2192           1612277259  0     0     100666  1319      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sincosf
.visible .func sincosf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2);
.file 1 "../../../../../newlib/libm/math/wf_sincos.c"
// BEGIN GLOBAL FUNCTION DECL: sinf
.extern .func (.param .f32 %value_out) sinf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: cosf
.extern .func (.param .f32 %value_out) cosf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: sincosf
.visible .func sincosf (.param .f32 %in_ar0, .param .u64 %in_ar1, .param .u64 %in_ar2)
{
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .u64 %ar2;
ld.param.u64 %ar2,[%in_ar2];
.reg .f32 %r24;
.reg .u64 %r25;
.reg .u64 %r26;
.reg .f32 %r28;
.reg .f32 %r30;
mov.f32 %r24,%ar0;
mov.u64 %r25,%ar1;
mov.u64 %r26,%ar2;
.loc 1 17 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),sinf,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
.loc 1 17 9
st.f32 [%r25],%r28;
.loc 1 18 11
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),cosf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 18 9
st.f32 [%r26],%r30;
.loc 1 19 1
ret;
}

lib_a-wf_sinh.o/1612277259  0     0     100666  1923      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sinhf
.visible .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_sinh.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sinhf
.extern .func (.param .f32 %value_out) __ieee754_sinhf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: sinhf
.visible .func (.param .f32 %value_out) sinhf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r25;
.reg .f32 %r26;
.reg .f32 %r28;
.reg .u32 %r30;
.reg .pred %r31;
.reg .u32 %r33;
.reg .pred %r34;
.reg .u64 %r35;
.reg .u32 %r36;
.reg .pred %r37;
mov.f32 %r26,%ar0;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),__ieee754_sinhf,(%out_arg1);
ld.param.f32 %r28,[%value_in];
}
mov.f32 %r25,%r28;
.loc 1 36 6
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r25;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r30,[%value_in];
}
.loc 1 36 4
setp.ne.u32 %r31,%r30,0;
@ %r31 bra $L1;
.loc 1 36 18
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r26;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r33,[%value_in];
}
.loc 1 36 16
setp.eq.u32 %r34,%r33,0;
@ %r34 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r35,[%value_in];
}
.loc 1 38 12
mov.u32 %r36,34;
st.u32 [%r35],%r36;
.loc 1 39 36
setp.gt.f32 %r37,%r26,0f00000000;
selp.f32 %r25,0f7f800000,0fff800000,%r37;
$L1:
.loc 1 43 1
mov.f32 %value,%r25;
st.param.f32 [%value_out],%value;
ret;
}

lib_a-wf_sqrt.o/1612277259  0     0     100666  1426      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: sqrtf
.visible .func (.param .f32 %value_out) sqrtf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_sqrt.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_sqrtf
.extern .func (.param .f32 %value_out) __ieee754_sqrtf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: sqrtf
.visible .func (.param .f32 %value_out) sqrtf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f32 %r23;
.reg .f32 %r24;
.reg .f32 %r26;
.reg .pred %r27;
.reg .pred %r28;
.reg .u64 %r29;
.reg .u32 %r30;
.reg .f32 %r31;
mov.f32 %r24,%ar0;
.loc 1 34 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r24;
call (%value_in),__ieee754_sqrtf,(%out_arg1);
ld.param.f32 %r26,[%value_in];
}
mov.f32 %r23,%r26;
.loc 1 35 4
setp.nan.f32 %r27,%r24,%r24;
@ %r27 bra $L1;
.loc 1 36 4
setp.lt.f32 %r28,%r24,0f00000000;
@ ! %r28 bra $L1;
.loc 1 38 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r29,[%value_in];
}
.loc 1 38 12
mov.u32 %r30,33;
st.u32 [%r29],%r30;
.loc 1 39 17
mov.f32 %r31,0f00000000;
div.rn.f32 %r23,%r31,%r31;
$L1:
.loc 1 43 1
mov.f32 %value,%r23;
st.param.f32 [%value_out],%value;
ret;
}
/2211           1612277259  0     0     100666  2277      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: tgammaf
.visible .func (.param .f32 %value_out) tgammaf (.param .f32 %in_ar0);
.file 1 "../../../../../newlib/libm/math/wf_tgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_tgammaf
.extern .func (.param .f32 %value_out) __ieee754_tgammaf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: floor
.extern .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DEF: tgammaf
.visible .func (.param .f32 %value_out) tgammaf (.param .f32 %in_ar0)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .f64 %r26;
.reg .f32 %r28;
.reg .f32 %r30;
.reg .pred %r31;
.reg .f64 %r33;
.reg .pred %r34;
.reg .u64 %r35;
.reg .u32 %r36;
.reg .u32 %r38;
.reg .pred %r39;
.reg .u64 %r40;
.reg .u32 %r41;
mov.f32 %r28,%ar0;
.loc 1 28 6
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),__ieee754_tgammaf,(%out_arg1);
ld.param.f32 %r30,[%value_in];
}
.loc 1 34 4
setp.lt.f32 %r31,%r28,0f00000000;
@ ! %r31 bra $L10;
.loc 1 34 16
cvt.f64.f32 %r26,%r28;
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r33,[%value_in];
}
.loc 1 34 13
setp.neu.f64 %r34,%r26,%r33;
@ %r34 bra $L4;
.loc 1 35 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r35,[%value_in];
}
.loc 1 35 12
mov.u32 %r36,33;
st.u32 [%r35],%r36;
bra $L1;
$L10:
.loc 1 34 16
cvt.f64.f32 %r26,%r28;
$L4:
.loc 1 36 13
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r26;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r38,[%value_in];
}
.loc 1 36 12
setp.eq.u32 %r39,%r38,0;
@ %r39 bra $L1;
.loc 1 37 6
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r40,[%value_in];
}
.loc 1 37 12
mov.u32 %r41,34;
st.u32 [%r40],%r41;
$L1:
.loc 1 40 1
mov.f32 %value,%r30;
st.param.f32 [%value_out],%value;
ret;
}

/2230           1612277259  0     0     100666  1058      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: gamma_r
.visible .func (.param .f64 %value_out) gamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wr_gamma.c"
// BEGIN GLOBAL FUNCTION DECL: lgamma_r
.extern .func (.param .f64 %value_out) lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: gamma_r
.visible .func (.param .f64 %value_out) gamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r23;
.reg .u64 %r24;
.reg .f64 %r27;
mov.f64 %r23,%ar0;
mov.u64 %r24,%ar1;
.loc 1 30 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r23;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r24;
call (%value_in),lgamma_r,(%out_arg1,%out_arg2);
ld.param.f64 %r27,[%value_in];
}
.loc 1 31 1
mov.f64 %value,%r27;
st.param.f64 [%value_out],%value;
ret;
}
/2248           1612277259  0     0     100666  2682      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lgamma_r
.visible .func (.param .f64 %value_out) lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wr_lgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgamma_r
.extern .func (.param .f64 %value_out) __ieee754_lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finite
.extern .func (.param .u32 %value_out) finite (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: floor
.extern .func (.param .f64 %value_out) floor (.param .f64 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: lgamma_r
.visible .func (.param .f64 %value_out) lgamma_r (.param .f64 %in_ar0, .param .u64 %in_ar1)
{
.reg .f64 %value;
.reg .f64 %ar0;
ld.param.f64 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f64 %r28;
.reg .u64 %r29;
.reg .f64 %r32;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u32 %r37;
.reg .pred %r38;
.reg .f64 %r40;
.reg .pred %r41;
.reg .pred %r42;
.reg .u64 %r43;
.reg .u32 %r44;
.reg .u64 %r45;
.reg .u32 %r46;
mov.f64 %r28,%ar0;
mov.u64 %r29,%ar1;
.loc 1 34 13
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r29;
call (%value_in),__ieee754_lgamma_r,(%out_arg1,%out_arg2);
ld.param.f64 %r32,[%value_in];
}
.loc 1 36 13
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r32;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r34,[%value_in];
}
.loc 1 36 11
setp.eq.u32 %r35,%r34,0;
@ ! %r35 bra $L1;
.loc 1 36 24
{
.param .u32 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),finite,(%out_arg1);
ld.param.u32 %r37,[%value_in];
}
.loc 1 36 22
setp.eq.u32 %r38,%r37,0;
@ %r38 bra $L1;
.loc 1 37 9
{
.param .f64 %value_in;
.param .f64 %out_arg1;
st.param.f64 [%out_arg1],%r28;
call (%value_in),floor,(%out_arg1);
ld.param.f64 %r40,[%value_in];
}
.loc 1 37 8
setp.neu.f64 %r41,%r40,%r28;
@ %r41 bra $L5;
.loc 1 37 20
setp.le.f64 %r42,%r28,0d0000000000000000;
@ ! %r42 bra $L5;
.loc 1 39 8
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r43,[%value_in];
}
.loc 1 39 14
mov.u32 %r44,33;
st.u32 [%r43],%r44;
bra $L1;
$L5:
.loc 1 42 8
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r45,[%value_in];
}
.loc 1 42 14
mov.u32 %r46,34;
st.u32 [%r45],%r46;
$L1:
.loc 1 46 1
mov.f64 %value,%r32;
st.param.f64 [%value_out],%value;
ret;
}
/2267           1612277259  0     0     100666  1066      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: gammaf_r
.visible .func (.param .f32 %value_out) gammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wrf_gamma.c"
// BEGIN GLOBAL FUNCTION DECL: lgammaf_r
.extern .func (.param .f32 %value_out) lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DEF: gammaf_r
.visible .func (.param .f32 %value_out) gammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f32 %r23;
.reg .u64 %r24;
.reg .f32 %r27;
mov.f32 %r23,%ar0;
mov.u64 %r24,%ar1;
.loc 1 30 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r23;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r24;
call (%value_in),lgammaf_r,(%out_arg1,%out_arg2);
ld.param.f32 %r27,[%value_in];
}
.loc 1 31 1
mov.f32 %value,%r27;
st.param.f32 [%value_out],%value;
ret;
}
/2286           1612277259  0     0     100666  2687      `
// BEGIN PREAMBLE
.version 3.1
.target sm_30
.address_size 64
// END PREAMBLE
// BEGIN GLOBAL FUNCTION DECL: lgammaf_r
.visible .func (.param .f32 %value_out) lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
.file 1 "../../../../../newlib/libm/math/wrf_lgamma.c"
// BEGIN GLOBAL FUNCTION DECL: __ieee754_lgammaf_r
.extern .func (.param .f32 %value_out) __ieee754_lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1);
// BEGIN GLOBAL FUNCTION DECL: finitef
.extern .func (.param .u32 %value_out) finitef (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: floorf
.extern .func (.param .f32 %value_out) floorf (.param .f32 %in_ar0);
// BEGIN GLOBAL FUNCTION DECL: __errno
.extern .func (.param .u64 %value_out) __errno;
// BEGIN GLOBAL FUNCTION DEF: lgammaf_r
.visible .func (.param .f32 %value_out) lgammaf_r (.param .f32 %in_ar0, .param .u64 %in_ar1)
{
.reg .f32 %value;
.reg .f32 %ar0;
ld.param.f32 %ar0,[%in_ar0];
.reg .u64 %ar1;
ld.param.u64 %ar1,[%in_ar1];
.reg .f32 %r28;
.reg .u64 %r29;
.reg .f32 %r32;
.reg .u32 %r34;
.reg .pred %r35;
.reg .u32 %r37;
.reg .pred %r38;
.reg .f32 %r40;
.reg .pred %r41;
.reg .pred %r42;
.reg .u64 %r43;
.reg .u32 %r44;
.reg .u64 %r45;
.reg .u32 %r46;
mov.f32 %r28,%ar0;
mov.u64 %r29,%ar1;
.loc 1 34 13
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
.param .u64 %out_arg2;
st.param.u64 [%out_arg2],%r29;
call (%value_in),__ieee754_lgammaf_r,(%out_arg1,%out_arg2);
ld.param.f32 %r32,[%value_in];
}
.loc 1 36 13
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r32;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r34,[%value_in];
}
.loc 1 36 11
setp.eq.u32 %r35,%r34,0;
@ ! %r35 bra $L1;
.loc 1 36 25
{
.param .u32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),finitef,(%out_arg1);
ld.param.u32 %r37,[%value_in];
}
.loc 1 36 23
setp.eq.u32 %r38,%r37,0;
@ %r38 bra $L1;
.loc 1 37 9
{
.param .f32 %value_in;
.param .f32 %out_arg1;
st.param.f32 [%out_arg1],%r28;
call (%value_in),floorf,(%out_arg1);
ld.param.f32 %r40,[%value_in];
}
.loc 1 37 8
setp.neu.f32 %r41,%r40,%r28;
@ %r41 bra $L5;
.loc 1 37 21
setp.le.f32 %r42,%r28,0f00000000;
@ ! %r42 bra $L5;
.loc 1 39 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r43,[%value_in];
}
.loc 1 39 9
mov.u32 %r44,33;
st.u32 [%r43],%r44;
bra $L1;
$L5:
.loc 1 42 3
{
.param .u64 %value_in;
call (%value_in),__errno;
ld.param.u64 %r45,[%value_in];
}
.loc 1 42 9
mov.u32 %r46,34;
st.u32 [%r45],%r46;
$L1:
.loc 1 47 1
mov.f32 %value,%r32;
st.param.f32 [%value_out],%value;
ret;
}

